['InsertCastStatement\nKeywords:\n%.20g']
['InsertCastStatement\nKeywords:\n((ssize_t) pixel)']
['InsertReleaseResource\nKeywords:\ndelete_kernel']
['InsertNullPointerChecker\nKeywords:\nsig_def_outputs_it == sig_def_outputs.end()']
['InsertConditionalExpression\nKeywords:\nif (!s.ok()) return s;']
['InsertNullPointerChecker\nKeywords:\n!hmhd']
['InsertConditionalExpression\nKeywords:\nIsRefType']
['RemoveBuggyStatement\nKeywords:\ndelete']
['InsertMethodInvocationExpression\nKeywords:\nTensorShape::BuildTensorShape']
['MutateLiteralExpression\nKeywords:\nopenflags--']
['InsertReleaseResource\nKeywords:\nMakeCleanup']
['InsertRangeChecker\nKeywords:\nif (ix >= node_t.args_size())']
['InsertNullPointerChecker\nKeywords:\nmrb_ary_ptr']
['InsertMethodInvocationExpression\nKeywords:\nOP_REQUIRES_OK']
['InsertNullPointerChecker\nKeywords:\nif (flr->config_proto())']
['InsertRangeChecker\nKeywords:\nsplits_values']
['InsertConditionalExpression\nKeywords:\nif']
['InsertNullPointerChecker\nKeywords:\nif (input == nullptr)']
['InsertMissedStatement\nKeywords:\nmemcpy']
['InsertRangeChecker\nKeywords:\nif ((pps_id<0) || (pps_id > 255))']
['RemoveBuggyStatement\nKeywords:\npng::CommonFreeDecode(&decode)']
['InsertMissedStatement\nKeywords:\ngf_bs_align']
['InsertMethodInvocationExpression\nKeywords:\nvmcb_set_intercept']
['InsertConditionalExpression\nKeywords:\nelse']
['InsertMethodInvocationExpression\nKeywords:\nbuilder->create<tensor::FromElementsOp>']
['MutateControlStatement\nKeywords:\nbreak']
['InsertMethodInvocationExpression\nKeywords:\nX509_VERIFY_PARAM_set1_host']
['InsertMethodInvocationExpression\nKeywords:\ncheck_owned_directory_mode']
['InsertRangeChecker\nKeywords:\nif ((char*)rb_hdr + sizeof(*rb_rr_time) <= (char*)pkt + size)']
['InsertNullPointerChecker\nKeywords:\nreturn -1']
['InsertRangeChecker\nKeywords:\noutput_port']
['InsertConditionalExpression\nKeywords:\nreturn errors::Internal']
['InsertCastStatement\nKeywords:\nCastDoubleToLong']
['MutateConditionalExpression\nKeywords:\ncc[-1] == XCL_PROP']
['InsertNullPointerChecker\nKeywords:\nreturn false']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES']
['InsertConditionalExpression\nKeywords:\nval']
['InsertRangeChecker\nKeywords:\nkey_tensor->NumElements() == 1']
['MutateConditionalExpression\nKeywords:\nif (n == 13 || n == 14)']
['InsertMethodInvocationExpression\nKeywords:\ndrain']
['InsertMissedStatement\nKeywords:\nchroot']
['MutateDataType\nKeywords:\nSBuf']
['MutateLiteralExpression\nKeywords:\n2048']
['MutateDataType\nKeywords:\nint64']
['InsertNullPointerChecker\nKeywords:\nGF_SAFEALLOC']
['InsertMethodInvocationExpression\nKeywords:\nTensorShape::BuildTensorShape']
['InsertRangeChecker\nKeywords:\nin_row_start >= 0 && in_row_end >= 0']
['InsertNullPointerChecker\nKeywords:\nfp_metadata']
['InsertMissedStatement\nKeywords:\nappendPQExpBufferStr']
['InsertMethodInvocationExpression\nKeywords:\nLOG(ERROR)']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertVariable\nKeywords:\n"%s"']
['InsertNullPointerChecker\nKeywords:\ninput_node == nullptr']
['MutateDataType\nKeywords:\nsize_t']
['MutateDataType\nKeywords:\nsize_t']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertCastStatement\nKeywords:\nCastDoubleToLong']
['InsertNullPointerChecker\nKeywords:\nif (ptr->entries)']
['InsertRangeChecker\nKeywords:\nNumElements']
['MutateConditionalExpression\nKeywords:\n((argc > 9) && (strcmp (argv[8], "*") == 0))']
['InsertRangeChecker\nKeywords:\ntmplen < 64']
['InsertMethodInvocationExpression\nKeywords:\niov_from_buf']
['InsertNullPointerChecker\nKeywords:\nerrors::InvalidArgument("Empty resource handle")']
['InsertConditionalExpression\nKeywords:\ndeleted->object.fast_array']
['InsertMissedStatement\nKeywords:\npj_scan_advance_n']
['InsertConditionalExpression\nKeywords:\nif ((target_class->flags & MRB_FL_CLASS_IS_PREPENDED) || target_class->tt == MRB_TT_MODULE)']
['InsertRangeChecker\nKeywords:\nconfigASSERT']
['InsertConditionalExpression\nKeywords:\nif']
['InsertConditionalExpression\nKeywords:\nreturn false']
['InsertConditionalExpression\nKeywords:\nif (lines == 0)']
['InsertNullPointerChecker\nKeywords:\nif (!a) return GF_ISOM_INVALID_FILE;']
['InsertRangeChecker\nKeywords:\nnum_indices == num_values']
['InsertRangeChecker\nKeywords:\nnum_streams >= 0']
['InsertConditionalExpression\nKeywords:\nif(bi->pixelsize>0)']
['InsertReleaseResource\nKeywords:\nefree']
['InsertNullPointerChecker\nKeywords:\ndevice_path']
['InsertRangeChecker\nKeywords:\nif ((i < 0) || (i >= MNG_MAX_OBJECTS)) continue;']
['InsertRangeChecker\nKeywords:\nreturn PJLIB_UTIL_EDNSINSIZE']
['InsertRangeChecker\nKeywords:\n0 <= loc && loc < output_elements']
['InsertNullPointerChecker\nKeywords:\ngf_malloc']
['InsertRangeChecker\nKeywords:\nQENC_MIN_DYN_TABLE_SIZE']
['MutateMethodInvocationExpression\nKeywords:\ncrypto_memneq']
['InsertMethodInvocationExpression\nKeywords:\nget_line_and_copy']
['MutateConditionalExpression\nKeywords:\nwhile (s > 0 && VIM_ISWHITE(*(bd->textstart + s - 1)))']
['InsertConditionalExpression\nKeywords:\nValidateInput<T>(updates)']
["InsertConditionalExpression\nKeywords:\nbooth_conf->authfile[0] != '\\0"]
['InsertMethodInvocationExpression\nKeywords:\nmrb_mc_clear_by_class']
['InsertRangeChecker\nKeywords:\nfor (int dim = 0; dim < ndims - 2; dim++)']
['RemoveBuggyStatement\nKeywords:\nbuf->Peek']
['InsertConditionalExpression\nKeywords:\nelse if (ch->last_state==GF_ISOM_INVALID_FILE)']
['InsertRangeChecker\nKeywords:\nindices_t.dim_size(0) == values_t.dim_size(0)']
['InsertRangeChecker\nKeywords:\nif (idx < 0 || idx >= a_shape_flat(didx))']
['InsertRangeChecker\nKeywords:\nexample_labels.size() != num_examples']
['InsertMethodInvocationExpression\nKeywords:\nInitSL_NULL']
['InsertNullPointerChecker\nKeywords:\nOP_REQUIRES(ctx, session_state != nullptr, errors::FailedPrecondition("GetSessionHandle called on null session state"))']
['InsertRangeChecker\nKeywords:\nWithRank']
['InsertConditionalExpression\nKeywords:\nif (pat->data[i][index]>0xff)']
['InsertRangeChecker\nKeywords:\nTF_LITE_CHECK_DIV_NON_ZERO']
['MoveStatement\nKeywords:\ngf_list_insert']
['InsertRangeChecker\nKeywords:\ninput.NumElements()']
['InsertMethodInvocationExpression\nKeywords:\npgpVerifySelf']
['InsertMethodInvocationExpression\nKeywords:\nEVP_DigestUpdate']
['InsertMethodInvocationExpression\nKeywords:\nr = modn.Square(r)']
['InsertConditionalExpression\nKeywords:\nif (!delay_den) delay_den = 100;']
['InsertNullPointerChecker\nKeywords:\nreturn GF_ISOM_INVALID_FILE']
['MutateMethodInvocationExpression\nKeywords:\nsaveTo']
['InsertNullPointerChecker\nKeywords:\ninput1_data_ptr != nullptr']
['InsertConditionalExpression\nKeywords:\ninvalid_data']
['InsertConditionalExpression\nKeywords:\npop_n(14)']
['InsertReleaseResource\nKeywords:\nccp_dm_free(&tag)']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertConditionalExpression\nKeywords:\ninit_get_bits8']
['MutateVariable\nKeywords:\nlength']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertConditionalExpression\nKeywords:\nTF_LITE_ENSURE']
['InsertMethodInvocationExpression\nKeywords:\nouter_context->set_output_handle_shapes_and_types']
['InsertRangeChecker\nKeywords:\nreturn']
['InsertRangeChecker\nKeywords:\nif (padlen >= 32)']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES']
['InsertMissedStatement\nKeywords:\ninput_has_ellipsis->at(i) = false;']
['InsertVariable\nKeywords:\nnullptr']
['InsertRangeChecker\nKeywords:\nif (input.dims() > 0) { OP_REQUIRES(context, input.dim_size(0) != 0, errors::InvalidArgument("Invalid input first dimension. Found 0."));']
['InsertRangeChecker\nKeywords:\ncontext']
['InsertReleaseResource\nKeywords:\nexit']
['MutateMethodInvocationExpression\nKeywords:\nPrepareForEncoding']
['InsertReleaseResource\nKeywords:\no_free']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES']
['MutateConditionalExpression\nKeywords:\nMqttIsPubRespPacket(packet_type) && MqttIsPubRespPacket(wait_type)']
['InsertVariable\nKeywords:\nnative->size']
['InsertNullPointerChecker\nKeywords:\np = NULL']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertRangeChecker\nKeywords:\nin_idx <= -rank']
['InsertRangeChecker\nKeywords:\nTF_LITE_ENSURE']
['InsertRangeChecker\nKeywords:\nerror_report']
['InsertRangeChecker\nKeywords:\ncheckpoint::TensorProtoDataSize<T>(sts.data().data()) != shp_s.num_elements()']
['InsertConditionalExpression\nKeywords:\nif']
['MutateConditionalExpression\nKeywords:\nn->output_type(0) != DT_RESOURCE']
['InsertRangeChecker\nKeywords:\nTF_LITE_ENSURE']
['RemoveBuggyStatement\nKeywords:\nNULL']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES']
['InsertRangeChecker\nKeywords:\nwhile (needle < to && needle < UT64_MAX - 4)']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertReleaseResource\nKeywords:\nquantum_info=DestroyQuantumInfo(quantum_info)']
['InsertNullPointerChecker\nKeywords:\nif (tensor == nullptr) return nullptr;']
['MutateMethodInvocationExpression\nKeywords:\ncrypto_memneq']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES']
['InsertRangeChecker\nKeywords:\nelse if (naddr_len > sizeof(naddr))']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES']
['InsertMethodInvocationExpression\nKeywords:\nsnprintf']
['InsertMethodInvocationExpression\nKeywords:\nmrb->exc = (struct RObject*)break_new(mrb, RBREAK_TAG_BREAK, proc, v)']
['InsertRangeChecker\nKeywords:\nwhile (msg_len > 0 && msg->attr_count < attr_max_cnt)']
['InsertMethodInvocationExpression\nKeywords:\nQuantizeMultiplier']
['InsertMethodInvocationExpression\nKeywords:\nnjs_vmcode_interpreter']
['InsertVariable\nKeywords:\ninitial_Z']
['InsertReleaseResource\nKeywords:\nresult.release()']
['MutateDataType\nKeywords:\nuint']
['InsertConditionalExpression\nKeywords:\nif (len >= 15)']
['InsertRangeChecker\nKeywords:\npos < 0']
['InsertMethodInvocationExpression\nKeywords:\ncheck_pos']
['InsertRangeChecker\nKeywords:\ndir >= XFRM_POLICY_MAX']
['InsertRangeChecker\nKeywords:\nif (header->insnum > MP_MAXINS) return MP_LOADER_FAILED;']
['MutateDataType\nKeywords:\nushort']
['InsertReleaseResource\nKeywords:\ndev_kfree_skb']
['InsertMissedStatement\nKeywords:\ncf = cframe_prev(cf)']
['InsertRangeChecker\nKeywords:\nif (off > bin->ne_header->EntryTableLength)']
['InsertRangeChecker\nKeywords:\nhdrsize']
['InsertMethodInvocationExpression\nKeywords:\nsnd_pcm_oss_make_ready_locked']
['InsertReleaseResource\nKeywords:\nmutex_destroy']
['InsertConditionalExpression\nKeywords:\ng_strcmp0']
['InsertRangeChecker\nKeywords:\nif ( 33 <= (*p) && (*p) <= 126 )']
['InsertNullPointerChecker\nKeywords:\nif (gif->frames == NULL) { return GIF_INSUFFICIENT_DATA;']
['InsertVariable\nKeywords:\nregister char *s = scanner->curptr;']
['InsertNullPointerChecker\nKeywords:\nif (obj)']
['InsertRangeChecker\nKeywords:\nvcol >= MAXCOL']
['InsertRangeChecker\nKeywords:\nif (instr[y].size >= 4 && instr[y].size < 29)']
['InsertReleaseResource\nKeywords:\nvim_free(sub_copy)']
['InsertMissedStatement\nKeywords:\nstatus=MagickTrue']
['InsertConditionalExpression\nKeywords:\ntrusted_config']
['InsertReleaseResource\nKeywords:\nusb_put_dev']
['InsertMemset\nKeywords:\nmemset']
['MutateConditionalExpression\nKeywords:\nfrom >= end']
['MutateLiteralExpression\nKeywords:\nlabels_data_count']
['InsertConditionalExpression\nKeywords:\n&& sp->ts_fidx > 0']
['InsertNullPointerChecker\nKeywords:\nbin->segment_entries']
['InsertReleaseResource\nKeywords:\nkfree']
['InsertMissedStatement\nKeywords:\nlen = 2']
['InsertVariable\nKeywords:\nrecursive']
['InsertVariable\nKeywords:\nxmlformatflags']
['InsertConditionalExpression\nKeywords:\nelse if ((*pp)[*lenp - 1] == NUL)']
['InsertRangeChecker\nKeywords:\nreturn -1']
['MutateMethodInvocationExpression\nKeywords:\ntask_sid_obj']
['RemoveBuggyStatement\nKeywords:\nkfree(rsi_dev)']
['InsertRangeChecker\nKeywords:\nreturn -1']
['MutateMethodInvocationExpression\nKeywords:\nmb_cptr2char_adv']
['InsertRangeChecker\nKeywords:\ncin.file.image_offset < 712']
['InsertVariable\nKeywords:\nmax']
['InsertVariable\nKeywords:\ncol']
['InsertConditionalExpression\nKeywords:\nO_NOFOLLOW']
['InsertNullPointerChecker\nKeywords:\ngoto out_kfree_e']
['InsertMissedStatement\nKeywords:\ntotlen -= spaces']
['InsertRangeChecker\nKeywords:\nif (offset + 8 > sz)']
['InsertVariable\nKeywords:\nbase']
['InsertConditionalExpression\nKeywords:\nqFuzzyIsNull(extent)']
['InsertMethodInvocationExpression\nKeywords:\noffset -= (*mb_head_off)(oldp, oldp + offset)']
['InsertConditionalExpression\nKeywords:\nutf_ptr2len']
['InsertReleaseResource\nKeywords:\ngdFree']
['InsertRangeChecker\nKeywords:\npskb_may_pull']
['InsertRangeChecker\nKeywords:\nif (s->tracks == 0)']
['InsertRangeChecker\nKeywords:\nbreak']
['InsertNullPointerChecker\nKeywords:\nrmp->regprog != NULL']
['InsertMethodInvocationExpression\nKeywords:\nSCTP_PAD4']
['InsertRangeChecker\nKeywords:\nThrowReaderException']
['InsertRangeChecker\nKeywords:\nk > Kmax']
['InsertConditionalExpression\nKeywords:\nif (forward)']
['InsertRangeChecker\nKeywords:\nallocsz']
['InsertRangeChecker\nKeywords:\nallocsz']
['MutateConditionalExpression\nKeywords:\nmax_filesize']
['InsertMissedStatement\nKeywords:\nsetobjs2s']
['MutateDataType\nKeywords:\nsize_t']
['InsertVariable\nKeywords:\nlen']
['InsertRangeChecker\nKeywords:\ncheck_directory']
['InsertMethodInvocationExpression\nKeywords:\ncheck_directory']
['InsertMethodInvocationExpression\nKeywords:\ncheck_directory']
['InsertReleaseResource\nKeywords:\nkfree_skb']
['InsertRangeChecker\nKeywords:\nif (sw.len > sizeof(self->rpc))']
['RemoveBuggyStatement\nKeywords:\nfree(copy);']
['InsertRangeChecker\nKeywords:\nreturn LDAP_INVALID_SYNTAX']
['InsertRangeChecker\nKeywords:\nunlikely']
['InsertRangeChecker\nKeywords:\nreason.slen']
['InsertVariable\nKeywords:\nrecurse']
['InsertMethodInvocationExpression\nKeywords:\nmkdir']
['InsertConditionalExpression\nKeywords:\nif (_members->CountUsed() >= MEMBER_MAX_COUNT)']
['InsertRangeChecker\nKeywords:\nlen > rb->mask + 1']
['InsertCastStatement\nKeywords:\nhdr']
['InsertNullPointerChecker\nKeywords:\nif (write_images != (Image *) NULL)']
['MutateConditionalExpression\nKeywords:\n>=']
['MutateConditionalExpression\nKeywords:\nneighbor2 != -1']
['InsertRangeChecker\nKeywords:\nfacet_num < 0']
['InsertMissedStatement\nKeywords:\nkref_init']
['MoveStatement\nKeywords:\nunregister_netdev']
['InsertReleaseResource\nKeywords:\nup_read']
['InsertMissedStatement\nKeywords:\nkiocb->private = NULL;']
['InsertRangeChecker\nKeywords:\nUT32_ADD_OVFCHK']
['InsertMissedStatement\nKeywords:\nremove_inode_hash']
['InsertMethodInvocationExpression\nKeywords:\nmkstemp']
['InsertReleaseResource\nKeywords:\ndp_packet_delete']
['InsertNullPointerChecker\nKeywords:\ng_return_if_fail (keyid != NULL)']
["InsertConditionalExpression\nKeywords:\ntemp[bn_size - 1] != '\\0"]
['InsertMethodInvocationExpression\nKeywords:\nflushUnderlying']
['MutateLiteralExpression\nKeywords:\n" *+"']
['MutateConditionalExpression\nKeywords:\nmaxstackframe > 0']
['InsertConditionalExpression\nKeywords:\ncurwin->w_cursor.col > 0']
['InsertRangeChecker\nKeywords:\nremain <= 0']
['InsertRangeChecker\nKeywords:\nif (x >= im->sx) { x = im->sx - 1;']
['MutateLiteralExpression\nKeywords:\nelement->attribute_count * 2']
['InsertConditionalExpression\nKeywords:\nnft_chain_is_bound']
['InsertReleaseResource\nKeywords:\nfree']
['RemoveBuggyStatement\nKeywords:\ndelete']
['MutateMethodInvocationExpression\nKeywords:\nvim_isalpha']
['InsertRangeChecker\nKeywords:\nvertexIndex>=0']
['InsertMissedStatement\nKeywords:\niinfo->i_lenAlloc = inode->i_size']
['MutateMethodInvocationExpression\nKeywords:\nMagickMax']
['MutateControlStatement\nKeywords:\nfor']
['InsertConditionalExpression\nKeywords:\nflags']
['InsertReleaseResource\nKeywords:\ncmdopts_destroy']
['MutateMethodInvocationExpression\nKeywords:\nstrscpy']
['MutateMethodInvocationExpression\nKeywords:\nstrscpy']
['InsertMethodInvocationExpression\nKeywords:\nsq_reservestack']
['MutateLiteralExpression\nKeywords:\n128']
['InsertConditionalExpression\nKeywords:\nif (abbrev->count)']
['InsertMethodInvocationExpression\nKeywords:\nlock_guard']
['InsertRangeChecker\nKeywords:\nstrncpy']
['InsertRangeChecker\nKeywords:\ncolnr_T col = col_arg < 0 ? 0 : col_arg;']
['InsertMissedStatement\nKeywords:\nbuf->flags = 0']
['InsertMissedStatement\nKeywords:\nbuf->flags = 0']
['InsertMissedStatement\nKeywords:\nbase64_str']
['MutateVariable\nKeywords:\ncache->n_maps']
['InsertMethodInvocationExpression\nKeywords:\nthis_cpu_add']
['InsertMethodInvocationExpression\nKeywords:\nthis_cpu_add']
['InsertMemset\nKeywords:\nmemset']
['InsertNullPointerChecker\nKeywords:\n+\t\t*num_pols = 0']
['MutateDataType\nKeywords:\n%p']
['InsertMethodInvocationExpression\nKeywords:\nsanitize_paths']
['InsertMissedStatement\nKeywords:\nidx + 1']
['InsertMissedStatement\nKeywords:\ntp[len] = NUL']
['MutateLiteralExpression\nKeywords:\nescaped(tok->args[1])']
['InsertNullPointerChecker\nKeywords:\nelse if (s == NULL)']
['InsertRangeChecker\nKeywords:\nstrlen']
['InsertVariable\nKeywords:\nsave_new_cmdpos']
['MutateMethodInvocationExpression\nKeywords:\nmaps']
['InsertMissedStatement\nKeywords:\nget_gc']
['InsertReleaseResource\nKeywords:\nfree']
['InsertNullPointerChecker\nKeywords:\nbuf_valid']
['InsertNullPointerChecker\nKeywords:\nmixer']
['InsertCastStatement\nKeywords:\n(*mdev_types)']
['InsertNullPointerChecker\nKeywords:\nif (TabPageIdxs != NULL)']
['InsertNullPointerChecker\nKeywords:\nif (prog)']
['InsertRangeChecker\nKeywords:\ns > INT32_MAX']
['InsertNullPointerChecker\nKeywords:\ntrans_pcie->rba.alloc_wq']
['InsertMethodInvocationExpression\nKeywords:\nluaK_exp2anyregup']
['InsertRangeChecker\nKeywords:\nCDF_ELEMENT_LIMIT']
['InsertRangeChecker\nKeywords:\nunlikely(size > MAX_RW_COUNT)']
['MutateConditionalExpression\nKeywords:\nif ((next_offset + req_size) > MAX_ACTIONS_BUFSIZE)']
['MutateDataType\nKeywords:\nSBuf']
['InsertRangeChecker\nKeywords:\ncin.file.image_offset < 712']
['InsertNullPointerChecker\nKeywords:\nreturn FAIL']
['InsertMethodInvocationExpression\nKeywords:\ngetCollectionDescription']
['InsertReleaseResource\nKeywords:\nQLIST_REMOVE_RCU']
['InsertRangeChecker\nKeywords:\n% sizeof(s->edid_blob)']
['InsertMethodInvocationExpression\nKeywords:\nvalidate_msg_fds']
['InsertMethodInvocationExpression\nKeywords:\nvalidate_msg_fds']
['InsertVariable\nKeywords:\narglist_locked']
['InsertRangeChecker\nKeywords:\nfor (ii = 0; ii < num_tiles; ii++)']
['InsertMemset\nKeywords:\nmemset']
['InsertMethodInvocationExpression\nKeywords:\niov_iter_reexpand']
['InsertConditionalExpression\nKeywords:\nif (*that != NUL)']
['RemoveBuggyStatement\nKeywords:\ndev_kfree_skb(skb)']
['InsertVariable\nKeywords:\nis_ambig']
['InsertRangeChecker\nKeywords:\nsize < 32']
['InsertReleaseResource\nKeywords:\nkfree']
['RemoveBuggyStatement\nKeywords:\nkfree(vch)']
['MoveStatement\nKeywords:\nax->tty = NULL']
['InsertReleaseResource\nKeywords:\nDestroyImageList']
['RemoveBuggyStatement\nKeywords:\nstart_position=TellBlob(image)-2;']
['InsertMethodInvocationExpression\nKeywords:\ncheck_name']
['InsertMethodInvocationExpression\nKeywords:\ncheck_name']
['InsertMethodInvocationExpression\nKeywords:\ncheck_name']
['InsertConditionalExpression\nKeywords:\nif']
['MutateVariable\nKeywords:\nclient->req_len']
['InsertMethodInvocationExpression\nKeywords:\nqemu_receive_packet']
['MutateConditionalExpression\nKeywords:\n>=']
['InsertMissedStatement\nKeywords:\ncut']
['InsertConditionalExpression\nKeywords:\n&& len < MAXPATHL - 1']
['InsertNullPointerChecker\nKeywords:\nipimap']
['InsertConditionalExpression\nKeywords:\nif (breakpoint != NULL && lines_ga.ga_len > current_line)']
['InsertMethodInvocationExpression\nKeywords:\nfstat']
['InsertNullPointerChecker\nKeywords:\nrelative_path']
['InsertNullPointerChecker\nKeywords:\nbase_name != NULL']
['InsertVariable\nKeywords:\nlen']
['MoveStatement\nKeywords:\nusb_put_dev']
['InsertRangeChecker\nKeywords:\nif (label_length > entry_length) { debug_print("Label length too long: %zu\\n", label_length); return MOBI_DATA_CORRUPT;']
['InsertRangeChecker\nKeywords:\nif (total < total_slide_infos)']
['InsertRangeChecker\nKeywords:\nif ( allocate > (long long) io.size() )']
['RemoveBuggyStatement\nKeywords:\nefree(mfn)']
['InsertRangeChecker\nKeywords:\nhdr->length < sizeof(struct capability_mp_data)']
['InsertRangeChecker\nKeywords:\nRETURN (FALSE)']
['InsertRangeChecker\nKeywords:\nlen < state->head->extra_max']
['InsertMissedStatement\nKeywords:\ntrigger_modechanged']
['InsertVariable\nKeywords:\ncli_malloc(len+1)']
['InsertMethodInvocationExpression\nKeywords:\nreg_getline']
['MutateLiteralExpression\nKeywords:\nend_name - dirname - 1']
['InsertRangeChecker\nKeywords:\nif']
['InsertRangeChecker\nKeywords:\nsizeof(bv) - 1']
['InsertRangeChecker\nKeywords:\nif(tccp->maxrlvls > JPC_MAXRLVLS)']
['InsertRangeChecker\nKeywords:\nbreak']
['MutateLiteralExpression\nKeywords:\n4*((image->depth+7)/8)']
['InsertMethodInvocationExpression\nKeywords:\noffload_action']
['InsertConditionalExpression\nKeywords:\nreturn XML_ERROR_SYNTAX']
['MutateVariable\nKeywords:\ndec->cdef->data.cdef.numchans']
['InsertRangeChecker\nKeywords:\nreturn']
['InsertRangeChecker\nKeywords:\ndebug_print']
['InsertConditionalExpression\nKeywords:\n#if HAVE_DECL_SETRESUID']
['InsertRangeChecker\nKeywords:\nlen']
['InsertRangeChecker\nKeywords:\nu < HTTP_HDR_FIRST']
['InsertNullPointerChecker\nKeywords:\nq = NULL']
['InsertReleaseResource\nKeywords:\nFreeWild']
['InsertCastStatement\nKeywords:\n(u64)']
['InsertRangeChecker\nKeywords:\nvalue.slen']
['InsertNullPointerChecker\nKeywords:\npcs->status.buffer = NULL']
['InsertNullPointerChecker\nKeywords:\nif (new_str)']
['InsertRangeChecker\nKeywords:\nif(pThis->iOctetsRemain <= 200000000)']
['InsertNullPointerChecker\nKeywords:\nqfl->qf_start']
['InsertMethodInvocationExpression\nKeywords:\nutils::replace_all']
['InsertMethodInvocationExpression\nKeywords:\nqemu_receive_packet']
['InsertMissedStatement\nKeywords:\nread_old_value']
['InsertReleaseResource\nKeywords:\ndel_timer_sync']
['InsertMethodInvocationExpression\nKeywords:\nis_in_cp950_pua']
['MoveStatement\nKeywords:\nnci_unregister_device']
['InsertConditionalExpression\nKeywords:\ntask_completed_or_cancelled']
['InsertRangeChecker\nKeywords:\nbadlen']
['InsertConditionalExpression\nKeywords:\nif (param->type != fs_value_is_string)']
['InsertMemset\nKeywords:\nMemorySet(object, 0, sizeof(*object))']
['InsertRangeChecker\nKeywords:\nhdr.nSubrects > RFB_BUFFER_SIZE / (4 + (BPP / 8))']
['InsertRangeChecker\nKeywords:\nreturn LZW_BAD_CODE']
['InsertNullPointerChecker\nKeywords:\n!os_desc_cfg->interface[interface]']
['InsertRangeChecker\nKeywords:\nunlikely(size < sizeof(struct tipc_aead_key) + TIPC_AEAD_KEYLEN_MIN)']
['InsertRangeChecker\nKeywords:\nbuf_offset + offset + 8 > sz']
['InsertConditionalExpression\nKeywords:\nstr_has_cntrl']
['InsertMethodInvocationExpression\nKeywords:\nmutex_lock']
['InsertRangeChecker\nKeywords:\nif (be32_to_cpu(args.nargs) >= ARRAY_SIZE(args.args))']
['InsertRangeChecker\nKeywords:\nif (window_posn + match_length > qtm->window_size)']
['InsertRangeChecker\nKeywords:\nif((SIZE_MAX - add_len) < target->len || (SIZE_MAX - add_len - 1) < target->len)']
['InsertReleaseResource\nKeywords:\nkvfree']
['InsertNullPointerChecker\nKeywords:\nbuf == NULL']
['InsertRangeChecker\nKeywords:\nif ((ruleChars.length + 1) > SEQPATTERNSIZE)']
['RemoveBuggyStatement\nKeywords:\ngst_object_unref']
['InsertConditionalExpression\nKeywords:\nif ((of->file->f_cred->user_ns != &init_user_ns) || !capable(CAP_SYS_ADMIN))']
['InsertConditionalExpression\nKeywords:\ncss']
['MutateVariable\nKeywords:\nUA_ConnectionConfig_default.sendBufferSize']
['InsertConditionalExpression\nKeywords:\nBeyond start/end of buffer']
['InsertMethodInvocationExpression\nKeywords:\nqemu_receive_packet']
['InsertConditionalExpression\nKeywords:\nmutate_ok']
['InsertConditionalExpression\nKeywords:\nnew_rlim.rlim_cur == 0']
['InsertRangeChecker\nKeywords:\nauthkey->sca_keylength > optlen - sizeof(struct sctp_authkey)']
['MutateLiteralExpression\nKeywords:\nchunk']
['InsertRangeChecker\nKeywords:\nbe16_to_cpu(tmp.thread.nodeName.length) > 255']
['InsertNullPointerChecker\nKeywords:\nIS_ERR']
['InsertConditionalExpression\nKeywords:\ne = o <= insize ? insize - o : 0']
['InsertRangeChecker\nKeywords:\nbreak']
['InsertMethodInvocationExpression\nKeywords:\ncnd_add_n']
['InsertNullPointerChecker\nKeywords:\nFATAL_ERROR']
['InsertNullPointerChecker\nKeywords:\ngoto exit']
['InsertReleaseResource\nKeywords:\nreturn -1']
['InsertMethodInvocationExpression\nKeywords:\nssl_session_dup']
['MutateLiteralExpression\nKeywords:\n0777']
['InsertConditionalExpression\nKeywords:\nusername']
['InsertConditionalExpression\nKeywords:\nif( isMapped(tif) && datasize > tif->tif_size )']
['InsertRangeChecker\nKeywords:\nCHACHA20_POLY1305_MAX_IVLEN']
['InsertConditionalExpression\nKeywords:\nnch == 0']
['InsertRangeChecker\nKeywords:\nlen == 0']
['InsertNullPointerChecker\nKeywords:\ntest_GENERAL_NAME_cmp']
['InsertNullPointerChecker\nKeywords:\nparams->base->data == NULL']
['InsertMissedStatement\nKeywords:\nfor']
['InsertNullPointerChecker\nKeywords:\n!file']
['MutateReturnStatement\nKeywords:\nDBUG_RETURN(true)']
['InsertMethodInvocationExpression\nKeywords:\nwalk']
['InsertRangeChecker\nKeywords:\ndl->length < so_ext_len ||']
['InsertConditionalExpression\nKeywords:\njoin->implicit_grouping']
['InsertMethodInvocationExpression\nKeywords:\nescapeHTML']
['InsertConditionalExpression\nKeywords:\nfollowSymlinks']
['InsertRangeChecker\nKeywords:\n%100s']
['InsertRangeChecker\nKeywords:\nvalidated_offset']
