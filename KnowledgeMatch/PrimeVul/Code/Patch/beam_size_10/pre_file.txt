['MutateMethodInvocationExpression\nKeywords:\nReadPropertySignedLong', 'InsertNullPointerChecker\nKeywords:\nif (p1 != NULL)', 'InsertCastStatement\nKeywords:\n(double)', 'InsertNullPointerChecker\nKeywords:\nif (p1)', 'InsertMethodInvocationExpression\nKeywords:\nReadPropertySignedLong', 'InsertCastStatement\nKeywords:\nReadPropertySignedLong', 'InsertNullPointerChecker\nKeywords:\nif (p1 == NULL)', 'InsertMissedStatement\nKeywords:\n*(double *) p1', 'InsertMissedStatement\nKeywords:\n*(float *) p1', 'InsertNullPointerChecker\nKeywords:\np1']
['MutateMethodInvocationExpression\nKeywords:\nSetPSDPixel', 'InsertCastStatement\nKeywords:\n(((unsigned char)pixel) & (0x01 << (7-bit))) != 0 ? 0 : QuantumRange', 'InsertCastStatement\nKeywords:\n(((unsigned char) pixel) & (0x01 << (7-bit))) != 0 ? 0 : QuantumRange', 'InsertConditionalExpression\nKeywords:\nif (((unsigned char) pixel) & (0x01 << (7-bit))) != 0', 'InsertConditionalExpression\nKeywords:\nif (((unsigned char)pixel) & (0x01 << (7-bit))) != 0', 'InsertCastStatement\nKeywords:\n(((unsigned char)pixel) & (0x01 << (7-bit)))', 'InsertMissedStatement\nKeywords:\nSetPSDPixel', 'InsertConditionalExpression\nKeywords:\nSetPSDPixel', 'InsertMethodInvocationExpression\nKeywords:\nSetPSDPixel', 'InsertRangeChecker\nKeywords:\nSetPSDPixel']
['InsertNullPointerChecker\nKeywords:\nitem->kernel = nullptr', 'InsertConditionalExpression\nKeywords:\nrequires_control_flow_', 'InsertNullPointerChecker\nKeywords:\nreturn s', 'InsertNullPointerChecker\nKeywords:\nif (!item->kernel)', 'InsertMissedStatement\nKeywords:\nitem->kernel = nullptr', 'InsertNullPointerChecker\nKeywords:\nif (item->kernel)', 'InsertMissedStatement\nKeywords:\nreturn s', 'InsertRangeChecker\nKeywords:\nreturn s', 'InsertReleaseResource\nKeywords:\ndelete', '']
['InsertNullPointerChecker\nKeywords:\nif (init_op_sig_it != sig_def_map.end())', 'InsertNullPointerChecker\nKeywords:\nif (init_op_sig_it->second.outputs() != nullptr)', 'InsertNullPointerChecker\nKeywords:\nif (init_op_sig_it == sig_def_map.end())', 'InsertNullPointerChecker\nKeywords:\nif (init_op_sig_it->second != nullptr)', 'InsertNullPointerChecker\nKeywords:\ninit_op_sig_it->second.outputs()', 'InsertNullPointerChecker\nKeywords:\ninit_op_name', 'InsertNullPointerChecker\nKeywords:\nreturn errors::FailedPrecondition', 'MutateMethodInvocationExpression\nKeywords:\noutputs', 'InsertNullPointerChecker\nKeywords:\nreturn', 'MutateDataType\nKeywords:\nstring']
['InsertConditionalExpression\nKeywords:\nTF_CHECK_OK', 'InsertNullPointerChecker\nKeywords:\nif (!new_dims.empty())', 'RemoveBuggyStatement\nKeywords:\nTF_CHECK_OK', 'InsertMethodInvocationExpression\nKeywords:\nTensorShapeUtils::MakeShape', 'InsertNullPointerChecker\nKeywords:\nif (!shp.empty())', 'InsertNullPointerChecker\nKeywords:\nif (!new_dims.IsFullyDefined())', 'MutateMethodInvocationExpression\nKeywords:\nTensorShapeUtils::MakeShape', 'InsertConditionalExpression\nKeywords:\nif (shp.size() != 1)', 'InsertVariable\nKeywords:\nnew_dims', '']
['InsertNullPointerChecker\nKeywords:\nreturn 0', 'InsertNullPointerChecker\nKeywords:\nhmhd', 'InsertNullPointerChecker\nKeywords:\nif (!hmhd) return 0;', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\ntrak->Media->information->sampleTable->SampleDescription', 'InsertNullPointerChecker\nKeywords:\n!hmhd', 'MutateConditionalExpression\nKeywords:\n!hmhd->subType', 'InsertNullPointerChecker\nKeywords:\ntrak->Media->information->sampleTable', 'InsertNullPointerChecker\nKeywords:\nif (!hmhd)', '']
['InsertNullPointerChecker\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertConditionalExpression\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertConditionalExpression\nKeywords:\nreturn errors::InvalidArgument', 'InsertRangeChecker\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertNullPointerChecker\nKeywords:\nif (!value)', 'InsertNullPointerChecker\nKeywords:\ninput_node == nullptr', 'InsertNullPointerChecker\nKeywords:\ninput_node', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nreturn', '']
['InsertMethodInvocationExpression\nKeywords:\nuser_session_update', 'InsertNullPointerChecker\nKeywords:\nsession_uid', 'InsertNullPointerChecker\nKeywords:\nsession_uid == NULL', 'InsertReleaseResource\nKeywords:\nuser_session_update', 'InsertReleaseResource\nKeywords:\nuser_session_destroy', 'InsertReleaseResource\nKeywords:\nuser_session_delete', 'RemoveBuggyStatement\nKeywords:\ndelete', 'InsertMethodInvocationExpression\nKeywords:\nget_session_id', 'InsertReleaseResource\nKeywords:\nfree', '']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'MutateMethodInvocationExpression\nKeywords:\ntensor_input_shape', 'MutateConditionalExpression\nKeywords:\nOP_REQUIRES', 'MutateMethodInvocationExpression\nKeywords:\nTensorShape', 'InsertConditionalExpression\nKeywords:\noverflow_ocurred', 'InsertRangeChecker\nKeywords:\ntensor_input_shape.NumElements()', 'InsertRangeChecker\nKeywords:\ninput_shape_vec.size()', 'MutateMethodInvocationExpression\nKeywords:\nTensorShapeToTensor', '']
['MutateMethodInvocationExpression\nKeywords:\nnfs_open(inode, filp)', 'InsertMethodInvocationExpression\nKeywords:\nnfs_open_recursive', 'MutateMethodInvocationExpression\nKeywords:\nnfs_open_recursive', 'MutateReturnStatement\nKeywords:\nreturn nfs_open(inode, filp)', 'InsertMethodInvocationExpression\nKeywords:\nnfs_open(inode, filp)', 'InsertMethodInvocationExpression\nKeywords:\nnfs_open', 'MutateMethodInvocationExpression\nKeywords:\nnfs_open', 'InsertReleaseResource\nKeywords:\nnfs_close', 'MutateMethodInvocationExpression\nKeywords:\nnfs_open_with_mode', '']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\nop_type_ != "DecodeGif"', 'InsertMissedStatement\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nop_type_ == "DecodeGif"', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nif (height < 0 || width < 0)', 'InsertRangeChecker\nKeywords:\nheight', '']
['InsertRangeChecker\nKeywords:\nDCHECK', 'InsertRangeChecker\nKeywords:\nDCHECK_GT', 'MutateConditionalExpression\nKeywords:\nDCHECK', 'InsertRangeChecker\nKeywords:\nreturn', 'RemoveBuggyStatement\nKeywords:\nDCHECK', 'InsertRangeChecker\nKeywords:\nDCHECK_GE', 'InsertRangeChecker\nKeywords:\nDCHECK_LT', 'InsertRangeChecker\nKeywords:\nDCHECK_EQ', 'InsertConditionalExpression\nKeywords:\nreturn', 'MutateConditionalExpression\nKeywords:\nreturn']
['InsertNullPointerChecker\nKeywords:\nary_ptr', 'InsertNullPointerChecker\nKeywords:\nary_ptr(a)', 'InsertNullPointerChecker\nKeywords:\nif (a == NULL)', 'InsertNullPointerChecker\nKeywords:\na', 'InsertNullPointerChecker\nKeywords:\nary_ptr_check', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn self', 'MutateMethodInvocationExpression\nKeywords:\nary_ptr', 'MutateMethodInvocationExpression\nKeywords:\nary_shift_safe', 'MutateMethodInvocationExpression\nKeywords:\nary_shift_check']
['MutateMethodInvocationExpression\nKeywords:\npre_shuffle', 'InsertMethodInvocationExpression\nKeywords:\npre_shuffle', 'InsertMethodInvocationExpression\nKeywords:\ntensor.shape()', 'InsertNullPointerChecker\nKeywords:\nif (!output)', 'MutateMethodInvocationExpression\nKeywords:\nTensorShape', 'MutateDataType\nKeywords:\nT', 'InsertNullPointerChecker\nKeywords:\nif (output)', 'RemoveBuggyStatement\nKeywords:\nTensorShape', 'InsertConditionalExpression\nKeywords:\nreturn', '']
['InsertMethodInvocationExpression\nKeywords:\nflr->config_proto()->gpu_options().visible_device_list()', 'InsertNullPointerChecker\nKeywords:\nflr->config_proto()->gpu_options().visible_device_list()', 'InsertNullPointerChecker\nKeywords:\nif (flr && flr->config_proto())', 'InsertNullPointerChecker\nKeywords:\nif (!flr || !flr->config_proto())', 'InsertMethodInvocationExpression\nKeywords:\nclient_options.set_allowed_devices', 'InsertNullPointerChecker\nKeywords:\nflr->config_proto()->gpu_options().visible_device_list().empty()', 'InsertMethodInvocationExpression\nKeywords:\nParseVisibleDeviceList', 'RemoveBuggyStatement\nKeywords:\nallowed_gpus', 'InsertNullPointerChecker\nKeywords:\nflr->config_proto()->gpu_options().visible_device_list() == ""', 'InsertConditionalExpression\nKeywords:\nallowed_gpus']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nTFLITE_DCHECK', 'InsertRangeChecker\nKeywords:\nTFLITE_DCHECK_LT', 'InsertRangeChecker\nKeywords:\nTFLITE_DCHECK_GT', 'InsertRangeChecker\nKeywords:\nTF_LITE_DCHECK', 'InsertRangeChecker\nKeywords:\narray_size', 'InsertConditionalExpression\nKeywords:\nTFLITE_DCHECK', 'InsertRangeChecker\nKeywords:\nTFLITE_DCHECK_GE', 'InsertRangeChecker\nKeywords:\nTFLITE_DCHECK_EQ', 'InsertRangeChecker\nKeywords:\nTFLITE_DCHECK_LE', '']
['InsertNullPointerChecker\nKeywords:\ninput', 'RemoveBuggyStatement\nKeywords:\nCHECK', 'InsertNullPointerChecker\nKeywords:\nCHECK', 'InsertNullPointerChecker\nKeywords:\ninput != nullptr', 'InsertNullPointerChecker\nKeywords:\nif (!input)', 'InsertNullPointerChecker\nKeywords:\nif (input)', 'InsertNullPointerChecker\nKeywords:\ninput == nullptr', 'InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertVariable\nKeywords:\ninput', 'MutateVariable\nKeywords:\ninput']
['InsertNullPointerChecker\nKeywords:\nif (ctx->is_mpg12)', 'InsertNullPointerChecker\nKeywords:\nif (!ctx->is_mpg12)', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (dst_pck)', 'InsertRangeChecker\nKeywords:\nif (remain < hdr_offset)', 'InsertNullPointerChecker\nKeywords:\nctx->is_mpg12', 'InsertNullPointerChecker\nKeywords:\nif (!dst_pck) return;', 'InsertRangeChecker\nKeywords:\nremain', 'InsertRangeChecker\nKeywords:\nreturn', '']
['InsertRangeChecker\nKeywords:\npps_id < 0', 'MutateConditionalExpression\nKeywords:\n<= 0', 'InsertRangeChecker\nKeywords:\npps_id', 'MutateConditionalExpression\nKeywords:\npps_id < 0', 'MutateConditionalExpression\nKeywords:\n&& pps_id < 0', 'MutateConditionalExpression\nKeywords:\n0', 'MutateConditionalExpression\nKeywords:\n>=', 'MutateConditionalExpression\nKeywords:\n255', 'MutateConditionalExpression\nKeywords:\n< 0', '']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertReleaseResource\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertReleaseResource\nKeywords:\npng::CommonFreeDecode', 'RemoveBuggyStatement\nKeywords:\nOP_REQUIRES', 'MutateMethodInvocationExpression\nKeywords:\nOP_REQUIRES', 'RemoveBuggyStatement\nKeywords:\npng::CommonFreeDecode', 'InsertNullPointerChecker\nKeywords:\nif (decode)', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nif (decode != NULL)']
['InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\ncfg->obu_array = NULL', 'InsertNullPointerChecker\nKeywords:\ngf_list_empty', 'InsertNullPointerChecker\nKeywords:\nif (!a->obu)', 'InsertNullPointerChecker\nKeywords:\na->obu = NULL', 'InsertNullPointerChecker\nKeywords:\nif (a->obu)', 'InsertNullPointerChecker\nKeywords:\nbreak', 'InsertNullPointerChecker\nKeywords:\nif (!a)', 'InsertNullPointerChecker\nKeywords:\ncfg->obu_array', '']
['InsertMissedStatement\nKeywords:\nvmcb_clr_intercept', 'InsertMethodInvocationExpression\nKeywords:\nvmcb_clr_intercept', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\nvmcb_set_intercept', 'InsertReleaseResource\nKeywords:\nvmcb_clr_intercept', 'InsertMissedStatement\nKeywords:\nvmcb_clear_intercept', 'InsertMissedStatement\nKeywords:\nvmcb_clear_intercepts', 'InsertReleaseResource\nKeywords:\nvmcb_free_control_area', 'InsertMissedStatement\nKeywords:\nvmcb_set_intercepts', 'InsertNullPointerChecker\nKeywords:\nreturn']
['InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nreturn false;', 'InsertConditionalExpression\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\np == nullptr', 'InsertConditionalExpression\nKeywords:\ndtype_error', 'InsertNullPointerChecker\nKeywords:\ndtype_error', 'InsertVariable\nKeywords:\nshape_', 'InsertNullPointerChecker\nKeywords:\np', 'InsertConditionalExpression\nKeywords:\nreturn false;', '']
['InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nreturn {}', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nmaxRank', 'InsertConditionalExpression\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nreturn {}', 'InsertNullPointerChecker\nKeywords:\nbreak', '']
['InsertReleaseResource\nKeywords:\ndelete', 'InsertNullPointerChecker\nKeywords:\nreturn nullptr', 'InsertConditionalExpression\nKeywords:\nreturn nullptr', 'InsertNullPointerChecker\nKeywords:\nif (!operand) return nullptr;', 'InsertNullPointerChecker\nKeywords:\nif (operand == nullptr)', 'InsertMethodInvocationExpression\nKeywords:\nllvm_unreachable', 'InsertNullPointerChecker\nKeywords:\nif (!operand)', 'RemoveBuggyStatement\nKeywords:\nllvm_unreachable', 'InsertNullPointerChecker\nKeywords:\nreturn nullptr;', '']
['InsertMethodInvocationExpression\nKeywords:\nSSL_set_verify_mode', 'InsertMissedStatement\nKeywords:\nSSL_set_verify_mode', 'InsertConditionalExpression\nKeywords:\nSSL_set_verify_mode', 'InsertConditionalExpression\nKeywords:\nissslserver', 'InsertMissedStatement\nKeywords:\nSSL_set_ssl_version', 'InsertMissedStatement\nKeywords:\nSSL_set_tlsext_port', 'InsertMethodInvocationExpression\nKeywords:\nSSL_set_cipher_suite', 'InsertMissedStatement\nKeywords:\nSSL_set_cipher_suite', 'InsertMethodInvocationExpression\nKeywords:\nset_tlsext_host_name', 'InsertMissedStatement\nKeywords:\nSSL_set_tlsext_password']
['InsertReleaseResource\nKeywords:\nrmdir', 'InsertConditionalExpression\nKeywords:\nmkdir', 'InsertMethodInvocationExpression\nKeywords:\nmkdir_p', 'InsertMethodInvocationExpression\nKeywords:\nmkdir', 'InsertMethodInvocationExpression\nKeywords:\nmkdir_recursive', 'InsertMethodInvocationExpression\nKeywords:\nmkdirs', 'InsertMissedStatement\nKeywords:\nmkdir', 'InsertMethodInvocationExpression\nKeywords:\nrmdir', 'RemoveBuggyStatement\nKeywords:\nrmdir', 'InsertMethodInvocationExpression\nKeywords:\nmkdir_safe']
['InsertCastStatement\nKeywords:\n(pj_uint16_t)', 'InsertNullPointerChecker\nKeywords:\nrb_rr_time', 'InsertNullPointerChecker\nKeywords:\nif (!rb_rr_time)', 'InsertCastStatement\nKeywords:\n(pj_uint32_t)', 'InsertVariable\nKeywords:\nrb_rr_time', 'InsertNullPointerChecker\nKeywords:\nrb_rr_time = NULL', 'MutateDataType\nKeywords:\npj_uint16_t', 'InsertMissedStatement\nKeywords:\nrb_rr_time', 'InsertRangeChecker\nKeywords:\nrb_len', 'InsertRangeChecker\nKeywords:\nrb_rr_time->length < 4']
['InsertNullPointerChecker\nKeywords:\nassert', 'RemoveBuggyStatement\nKeywords:\nassert', 'InsertNullPointerChecker\nKeywords:\nsps', 'RemoveBuggyStatement\nKeywords:\ndelete', 'InsertNullPointerChecker\nKeywords:\navc', 'InsertNullPointerChecker\nKeywords:\nreturn', 'MutateMethodInvocationExpression\nKeywords:\nassert', 'MutateConditionalExpression\nKeywords:\nassert', 'InsertVariable\nKeywords:\nsps', '']
['InsertConditionalExpression\nKeywords:\nreturn errors::InvalidArgument("Missing context")', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (ctx == nullptr)', 'InsertNullPointerChecker\nKeywords:\nctx == nullptr', 'InsertNullPointerChecker\nKeywords:\nreturn errors::InvalidArgument', 'InsertConditionalExpression\nKeywords:\nreturn errors::InvalidArgument', 'MutateReturnStatement\nKeywords:\nreturn', 'RemoveBuggyStatement\nKeywords:\nreturn', 'InsertMethodInvocationExpression\nKeywords:\nValidateInputShape', '']
['InsertConditionalExpression\nKeywords:\nif (arg_index != result_.nodes.size())', 'InsertConditionalExpression\nKeywords:\nif (arg_index == result_.nodes.size())', 'InsertConditionalExpression\nKeywords:\nif (arg_index < result_.nodes.size())', 'InsertConditionalExpression\nKeywords:\nif (result_.nodes.size() != i)', 'InsertConditionalExpression\nKeywords:\nif (!result_.nodes.empty())', 'InsertConditionalExpression\nKeywords:\nif (arg_index >= result_.nodes.size())', 'InsertRangeChecker\nKeywords:\nif (arg_index < result_.nodes.size())', 'InsertConditionalExpression\nKeywords:\nif (arg_index != 0)', 'InsertConditionalExpression\nKeywords:\nif (arg_index == 0)', 'InsertConditionalExpression\nKeywords:\nif (result_.nodes.size() == 0)']
['InsertCastStatement\nKeywords:\n(size_t)', 'InsertRangeChecker\nKeywords:\nif (bounds.x1 > 0)', 'InsertRangeChecker\nKeywords:\nif (bounds.x1 < 0)', 'MutateMethodInvocationExpression\nKeywords:\nFloorSize', 'MutateLiteralExpression\nKeywords:\nfloor', 'MutateMethodInvocationExpression\nKeywords:\nfloor', 'InsertRangeChecker\nKeywords:\nwidth', 'MutateVariable\nKeywords:\nwidth', 'MutateMethodInvocationExpression\nKeywords:\nFloor', '']
['InsertConditionalExpression\nKeywords:\ncc[1] == XCL_PROP', 'MutateConditionalExpression\nKeywords:\ncc[1] == XCL_PROP', 'InsertRangeChecker\nKeywords:\nif (*cc == PT_CLIST && *cc == XCL_PROP)', 'InsertConditionalExpression\nKeywords:\nif (*cc == PT_CLIST || *cc == XCL_PROP)', 'InsertConditionalExpression\nKeywords:\nif (*cc == PT_CLIST && *cc == XCL_PROP)', 'InsertRangeChecker\nKeywords:\ncc[1] == XCL_PROP', 'InsertConditionalExpression\nKeywords:\ncc[-1] == XCL_PROP', 'InsertConditionalExpression\nKeywords:\ncc[0] == XCL_PROP', 'InsertConditionalExpression\nKeywords:\nif (cc[1] == XCL_PROP)', '']
['InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn false;', 'InsertConditionalExpression\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nreturn true', 'InsertMissedStatement\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nMulConvPushDown', 'InsertRangeChecker\nKeywords:\nreturn false', 'InsertConditionalExpression\nKeywords:\nreturn', '']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nrelax_constraints_', 'InsertConditionalExpression\nKeywords:\nvalidate_shape_', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nif (context->status().ok())', 'InsertVariable\nKeywords:\nrelax_constraints_', 'InsertNullPointerChecker\nKeywords:\nif (!rhs.IsInitialized())', 'InsertNullPointerChecker\nKeywords:\nif (!context->ok()) return;', 'InsertRangeChecker\nKeywords:\nif (context->status().ok())']
['MutateConditionalExpression\nKeywords:\nlen > 0 || update', 'InsertNullPointerChecker\nKeywords:\ntree->car == NULL', 'InsertNullPointerChecker\nKeywords:\ntree->car', 'MutateConditionalExpression\nKeywords:\nlen > 0 && update', 'MutateConditionalExpression\nKeywords:\nlen > 0', 'InsertNullPointerChecker\nKeywords:\ntree', 'InsertNullPointerChecker\nKeywords:\ntree == NULL', 'InsertNullPointerChecker\nKeywords:\ntree->cdr', 'InsertNullPointerChecker\nKeywords:\nif (!update)', 'InsertNullPointerChecker\nKeywords:\nreturn']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nkey_tensor->NumElements() > 0', 'InsertRangeChecker\nKeywords:\nkey_tensor->NumElements() < 2', 'InsertRangeChecker\nKeywords:\nkey_tensor->NumElements() < 1', 'InsertRangeChecker\nKeywords:\nkey_tensor->NumElements() <= 0', 'InsertRangeChecker\nKeywords:\nkey_tensor->NumElements() < 3', 'InsertNullPointerChecker\nKeywords:\nmap']
['InsertConditionalExpression\nKeywords:\npop_n', 'MutateConditionalExpression\nKeywords:\npop_n', 'MutateConditionalExpression\nKeywords:\nn < 15', 'InsertConditionalExpression\nKeywords:\npop_n(14)', 'MutateConditionalExpression\nKeywords:\nn < 14', 'InsertConditionalExpression\nKeywords:\nif (n < 14)', 'InsertConditionalExpression\nKeywords:\nn < 15', 'InsertConditionalExpression\nKeywords:\nif (n < 15)', 'InsertRangeChecker\nKeywords:\npop_n', 'InsertConditionalExpression\nKeywords:\nn < 14']
['InsertMethodInvocationExpression\nKeywords:\ndrain', 'InsertConditionalExpression\nKeywords:\nnumTriggeredTopics == 64', 'InsertConditionalExpression\nKeywords:\ndrain', 'InsertVariable\nKeywords:\nnumTriggeredTopics', 'InsertConditionalExpression\nKeywords:\nnumTriggeredTopics > 64', 'InsertConditionalExpression\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\ndrain', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\ndrain()', '']
['InsertMissedStatement\nKeywords:\nSCMP_CMP_MASKED_EQ', 'InsertMissedStatement\nKeywords:\nEPERM', 'InsertMissedStatement\nKeywords:\nSCMP_CMP_MASKED_NE', 'InsertMissedStatement\nKeywords:\nSCMP_CMP_MASKED_GE', 'InsertMissedStatement\nKeywords:\nSCMP_CMP_MASKED_LT', 'InsertConditionalExpression\nKeywords:\nSCMP_CMP_MASKED_EQ', 'InsertMissedStatement\nKeywords:\nSCMP_CMP_MASKED_GT', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\nSCMP_CMP_DENY', '']
['Input Too Long']
['Input Too Long']
['MutateLiteralExpression\nKeywords:\nconcat_dim', 'MutateLiteralExpression\nKeywords:\nmin_rank', 'InsertRangeChecker\nKeywords:\nconcat_dim < 0', 'MutateLiteralExpression\nKeywords:\n-concat_dim', 'InsertRangeChecker\nKeywords:\nconcat_dim', 'MutateLiteralExpression\nKeywords:\n0', 'InsertRangeChecker\nKeywords:\nmin_rank', 'MutateLiteralExpression\nKeywords:\n-1', 'MutateVariable\nKeywords:\nconcat_dim', '']
['Input Too Long']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'MutateDataType\nKeywords:\nTensorShape', 'InsertRangeChecker\nKeywords:\nshape_vec.NumElements()', 'MutateMethodInvocationExpression\nKeywords:\nTensorShape', 'MutateMethodInvocationExpression\nKeywords:\nBCast::FromShape', 'InsertRangeChecker\nKeywords:\nshape_vec.dims()', 'InsertNullPointerChecker\nKeywords:\nshape_vec', 'InsertMethodInvocationExpression\nKeywords:\nTensorShape', '']
['InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\nin_row_end', 'InsertRangeChecker\nKeywords:\nreturn errors::InvalidArgument', 'InsertRangeChecker\nKeywords:\nstd::min', 'InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nreturn Status::InvalidArgument', 'InsertRangeChecker\nKeywords:\nreturn error::InvalidArgument', 'InsertRangeChecker\nKeywords:\nreturn false', '']
['InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nif (metadata == NULL)', 'InsertNullPointerChecker\nKeywords:\nmetadata == NULL', 'InsertNullPointerChecker\nKeywords:\nmetadata', 'InsertReleaseResource\nKeywords:\nflatpak_bundle_unload', 'InsertNullPointerChecker\nKeywords:\nif (!metadata) return NULL;', 'InsertNullPointerChecker\nKeywords:\nmetadata != NULL', 'InsertMissedStatement\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nerror', 'InsertVariable\nKeywords:\nref']
['Input Too Long']
['RemoveBuggyStatement\nKeywords:\ndelete', 'InsertConditionalExpression\nKeywords:\nif', 'RemoveBuggyStatement\nKeywords:\nDCHECK', 'InsertMethodInvocationExpression\nKeywords:\nAttrDefEqual', 'InsertConditionalExpression\nKeywords:\nDCHECK', 'MutateMethodInvocationExpression\nKeywords:\nstd::find', 'MutateConditionalExpression\nKeywords:\nDCHECK', 'InsertMethodInvocationExpression\nKeywords:\nDCHECK', 'InsertMethodInvocationExpression\nKeywords:\nDCHECK_EQ', '']
['InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\ndata_length', 'InsertRangeChecker\nKeywords:\ndata_length <= 0', 'InsertRangeChecker\nKeywords:\ndata_length < 0', 'InsertRangeChecker\nKeywords:\ndata_length < 1', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nfor', 'InsertRangeChecker\nKeywords:\nreturn false', 'InsertMissedStatement\nKeywords:\ncontinue']
['MutateMethodInvocationExpression\nKeywords:\nsnprintf', 'MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'InsertRangeChecker\nKeywords:\nlabellen', 'InsertMemset\nKeywords:\nmemset', 'InsertMethodInvocationExpression\nKeywords:\nsnprintf', 'RemoveBuggyStatement\nKeywords:\nsnprintf', 'MutateMethodInvocationExpression\nKeywords:\nvsnprintf', 'MutateMethodInvocationExpression\nKeywords:\nkzalloc', 'InsertMethodInvocationExpression\nKeywords:\nstrlcpy', 'MutateMethodInvocationExpression\nKeywords:\nstrncpy']
['InsertNullPointerChecker\nKeywords:\ninput_node', 'InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nif (!input_node)', 'InsertNullPointerChecker\nKeywords:\nif (input_node)', 'InsertNullPointerChecker\nKeywords:\ninput_node == nullptr', 'InsertNullPointerChecker\nKeywords:\ninput_node != nullptr', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nassert(input_node)', 'InsertNullPointerChecker\nKeywords:\ninput_node != NULL', 'InsertNullPointerChecker\nKeywords:\nreturn true']
['MutateLiteralExpression\nKeywords:\nsize', 'MutateDataType\nKeywords:\nTfLiteInt32', 'InsertCastStatement\nKeywords:\nstatic_cast<size_t>', 'MutateMethodInvocationExpression\nKeywords:\nsizeof(dummy)', 'InsertRangeChecker\nKeywords:\nif (size < sizeof(dummy))', 'MutateLiteralExpression\nKeywords:\nsizeof(dummy)', 'MutateLiteralExpression\nKeywords:\nsizeof(dummy) * size', 'InsertCastStatement\nKeywords:\n(size_t)size', 'InsertRangeChecker\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\nreturn']
['InsertMethodInvocationExpression\nKeywords:\nTfLiteIntArrayGetSizeInBytes', 'MutateLiteralExpression\nKeywords:\nTfLiteIntArrayGetSizeInBytes', 'MutateDataType\nKeywords:\nTfLiteInt32', 'InsertRangeChecker\nKeywords:\nif (size < 0) return NULL;', 'InsertRangeChecker\nKeywords:\nalloc_size', 'MutateLiteralExpression\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\nif (size <= 0) return NULL;', 'MutateDataType\nKeywords:\nTfLiteInt64', 'MutateLiteralExpression\nKeywords:\nsize_t', 'InsertRangeChecker\nKeywords:\nsize']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertCastStatement\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nop_reQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\ninput_size[i] >= 0', 'InsertVariable\nKeywords:\npooling_ratio_', 'InsertRangeChecker\nKeywords:\ninput_size[i] > 0', 'InsertRangeChecker\nKeywords:\ninput_size[i] <= 0']
['InsertCastStatement\nKeywords:\n(size_t)', 'InsertRangeChecker\nKeywords:\nif (bounds.x1 > 0)', 'InsertRangeChecker\nKeywords:\nif (bounds.x1 < 0)', 'MutateMethodInvocationExpression\nKeywords:\nFloorSize', 'MutateMethodInvocationExpression\nKeywords:\nfloor', 'InsertRangeChecker\nKeywords:\nwidth', 'MutateLiteralExpression\nKeywords:\nfloor', 'MutateMethodInvocationExpression\nKeywords:\nFloor', 'MutateVariable\nKeywords:\nwidth', '']
['MutateMethodInvocationExpression\nKeywords:\ngf_free', 'RemoveBuggyStatement\nKeywords:\ngf_free', 'InsertNullPointerChecker\nKeywords:\nptr->entries', 'RemoveBuggyStatement\nKeywords:\ndelete', 'InsertReleaseResource\nKeywords:\ngf_free', 'InsertNullPointerChecker\nKeywords:\nptr->nb_entries', 'RemoveBuggyStatement\nKeywords:\nfor', 'InsertNullPointerChecker\nKeywords:\ngf_free', 'InsertNullPointerChecker\nKeywords:\nreturn', '']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\n OP_REQUIRES', 'InsertConditionalExpression\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nindices', 'MutateDataType\nKeywords:\nTensorShape', 'InsertNullPointerChecker\nKeywords:\nindices->IsNull()', 'InsertNullPointerChecker\nKeywords:\nif (!indices)', '']
['MutateLiteralExpression\nKeywords:\n*', 'InsertNullPointerChecker\nKeywords:\narg_start', 'InsertNullPointerChecker\nKeywords:\nargv[8]', 'InsertNullPointerChecker\nKeywords:\nargv_eol', 'MutateDataType\nKeywords:\nsize_t', 'InsertRangeChecker\nKeywords:\narg_start', 'InsertNullPointerChecker\nKeywords:\narg_start = 8', 'InsertNullPointerChecker\nKeywords:\nif (!argc)', 'MutateVariable\nKeywords:\nlength', '']
['InsertConditionalExpression\nKeywords:\nisdigit((int)tmpbuf[0])', 'MutateConditionalExpression\nKeywords:\nisdigit', 'InsertNullPointerChecker\nKeywords:\ntmpbuf == nullptr', 'InsertRangeChecker\nKeywords:\ntmplen > 63', 'InsertRangeChecker\nKeywords:\ntmplen >= 64', 'InsertConditionalExpression\nKeywords:\nisdigit', 'InsertRangeChecker\nKeywords:\ntmplen < 64', 'InsertNullPointerChecker\nKeywords:\nif (tmpbuf == nullptr)', 'InsertRangeChecker\nKeywords:\nif (tmplen > 63)', '']
['MutateMethodInvocationExpression\nKeywords:\nmemcpy', 'InsertMemset\nKeywords:\nmemset', 'MutateMethodInvocationExpression\nKeywords:\nvirtqueue_iov_base', 'MutateMethodInvocationExpression\nKeywords:\nvirtio_iovec_base', 'InsertNullPointerChecker\nKeywords:\nif (elem.in_sg)', 'RemoveBuggyStatement\nKeywords:\nmemcpy', 'MutateMethodInvocationExpression\nKeywords:\nvirtio_iov_base', 'InsertMethodInvocationExpression\nKeywords:\nmemcpy', 'MutateMethodInvocationExpression\nKeywords:\nvirtio_iovec_copy', 'MutateMethodInvocationExpression\nKeywords:\nvirtqueue_get_iovec']
['InsertNullPointerChecker\nKeywords:\nif (!tensor) return Status::OK();', 'InsertNullPointerChecker\nKeywords:\ntensor == nullptr', 'InsertNullPointerChecker\nKeywords:\nif (tensor == nullptr)', 'InsertNullPointerChecker\nKeywords:\ntf_return_if_error', 'InsertNullPointerChecker\nKeywords:\nif (!tensor)', 'InsertNullPointerChecker\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertNullPointerChecker\nKeywords:\ntensor != nullptr', 'InsertNullPointerChecker\nKeywords:\nTensorIsNull', 'InsertVariable\nKeywords:\nhandle', '']
['InsertNullPointerChecker\nKeywords:\nreturn NJS_ERROR', 'InsertMissedStatement\nKeywords:\nreturn NJS_ERROR', 'InsertRangeChecker\nKeywords:\nreturn NJS_ERROR', 'InsertConditionalExpression\nKeywords:\nreturn NJS_ERROR', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nnjs_slow_path', 'InsertNullPointerChecker\nKeywords:\nif (value == NULL)', 'InsertMethodInvocationExpression\nKeywords:\nnjs_set_array', 'InsertConditionalExpression\nKeywords:\nreturn', '']
["InsertConditionalExpression\nKeywords:\nif (pj_scan_get_char(scanner) != '>')", 'InsertConditionalExpression\nKeywords:\nif (!pj_scan_is_eof(scanner))', "InsertConditionalExpression\nKeywords:\npj_scan_get_char(scanner) != '>'", 'InsertNullPointerChecker\nKeywords:\nif (!pj_scan_is_eof(scanner))', "InsertConditionalExpression\nKeywords:\nif (pj_scan_get_char(scanner) != '<')", "InsertRangeChecker\nKeywords:\nif (pj_scan_get_char(scanner) != '>')", 'InsertNullPointerChecker\nKeywords:\nif (pj_scan_is_eof(scanner))', "InsertRangeChecker\nKeywords:\npj_scan_get_char(scanner) != '>'", "InsertRangeChecker\nKeywords:\nif (pj_scan_get_char(scanner) != '<')", 'InsertConditionalExpression\nKeywords:\npj_scan_is_eof']
['InsertConditionalExpression\nKeywords:\ntarget_class->flags & MRB_FL_CLASS_IS_PREPENDED', 'RemoveBuggyStatement\nKeywords:\ntarget_class->flags & MRB_FL_CLASS_IS_PREPENDED', 'MutateConditionalExpression\nKeywords:\nMRB_FL_CLASS_IS_PREPENDED', 'InsertMethodInvocationExpression\nKeywords:\nmrb_vm_ci_target_class', 'InsertMethodInvocationExpression\nKeywords:\nmrb_vm_ci_target_class(ci)', 'InsertMethodInvocationExpression\nKeywords:\nmrb_vm_ci_target_module(ci)', 'InsertConditionalExpression\nKeywords:\ntarget_class->flags & MRB_FL_MODULE_IS_PREPENDED', 'InsertNullPointerChecker\nKeywords:\ntarget_class', 'InsertNullPointerChecker\nKeywords:\ntarget_class = NULL', '']
['InsertRangeChecker\nKeywords:\nconfigASSERT', 'InsertRangeChecker\nKeywords:\nconfigASSERT( uxItemSize > 0 )', 'InsertRangeChecker\nKeywords:\nconfigASSERT( xQueueSizeInBytes > 0 )', 'InsertRangeChecker\nKeywords:\nconfigASSERT( uxQueueLength > 0 )', 'InsertRangeChecker\nKeywords:\nconfigASSERT( uxItemSize >= 0 )', 'InsertRangeChecker\nKeywords:\nxQueueSizeInBytes', 'InsertRangeChecker\nKeywords:\nconfigASSERT( xQueueSizeInBytes >= 0 )', 'InsertRangeChecker\nKeywords:\nconfigASSERT( uxQueueLength >= 0 )', 'InsertRangeChecker\nKeywords:\nreturn NULL', 'InsertConditionalExpression\nKeywords:\nconfigASSERT']
['InsertConditionalExpression\nKeywords:\nif (!conn.oneRttWriteCipher.get())', 'InsertNullPointerChecker\nKeywords:\nif (conn.oneRttWriteCipher)', 'RemoveBuggyStatement\nKeywords:\nCHECK', 'InsertNullPointerChecker\nKeywords:\nif (!conn.oneRttWriteCipher)', 'MutateConditionalExpression\nKeywords:\n!conn.oneRttWriteCipher.get()', 'MutateConditionalExpression\nKeywords:\nCHECK', 'InsertConditionalExpression\nKeywords:\nCHECK', 'RemoveBuggyStatement\nKeywords:\nCHECK_NOTNULL', 'InsertNullPointerChecker\nKeywords:\nCHECK', 'MutateMethodInvocationExpression\nKeywords:\nCHECK']
['InsertRangeChecker\nKeywords:\nassert', 'InsertRangeChecker\nKeywords:\nassert(lines > 0)', 'InsertRangeChecker\nKeywords:\nassert(lines >= 0)', 'InsertConditionalExpression\nKeywords:\nassert(lines > 0)', 'InsertConditionalExpression\nKeywords:\nassert', 'InsertRangeChecker\nKeywords:\nif (lines < 0)', 'InsertConditionalExpression\nKeywords:\nif (lines < 0)', 'InsertRangeChecker\nKeywords:\nreturn false', 'InsertRangeChecker\nKeywords:\nlines', 'MutateConditionalExpression\nKeywords:\nassert']
['InsertConditionalExpression\nKeywords:\nassert(lines > 0)', 'InsertConditionalExpression\nKeywords:\nassert', 'InsertRangeChecker\nKeywords:\nassert', 'InsertRangeChecker\nKeywords:\nassert(lines > 0)', 'InsertConditionalExpression\nKeywords:\nif (lines > 0)', 'MutateConditionalExpression\nKeywords:\nassert', 'InsertRangeChecker\nKeywords:\nassert(lines >= 0)', 'InsertConditionalExpression\nKeywords:\nif (lines == 0)', 'InsertRangeChecker\nKeywords:\nif (lines < 0)', 'InsertConditionalExpression\nKeywords:\nif (lines < 0)']
['InsertNullPointerChecker\nKeywords:\nreturn GF_ISOM_INVALID_FILE', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (mov == NULL)', 'InsertMissedStatement\nKeywords:\nreturn GF_ISOM_INVALID_FILE', 'InsertNullPointerChecker\nKeywords:\nmov->movieFileMap = NULL', 'InsertNullPointerChecker\nKeywords:\nreturn GF_ISOM_INVALID_BOX', 'InsertNullPointerChecker\nKeywords:\nif (!mov)', 'InsertNullPointerChecker\nKeywords:\nmov = NULL', 'InsertNullPointerChecker\nKeywords:\nmov == NULL', 'InsertNullPointerChecker\nKeywords:\nbreak']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nif (!indices) return;', 'InsertMissedStatement\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nif (!indices)', 'InsertConditionalExpression\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nindices', '']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nnum_streams < 0', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nnum_streams > 0', 'InsertRangeChecker\nKeywords:\nnum_streams <= 0', 'InsertRangeChecker\nKeywords:\nnum_streams', 'InsertRangeChecker\nKeywords:\nnum_streams < 1', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\nif (num_streams < 0)', '']
['MutateLiteralExpression\nKeywords:\n(bi->rowbytes*8)/bi->pixelsize', 'InsertRangeChecker\nKeywords:\nif(bi->pixelsize > 0)', 'InsertRangeChecker\nKeywords:\nif(bi->pixelsize > INT_MAX/8)', 'MutateMethodInvocationExpression\nKeywords:\ndbuf_getu32be', 'InsertRangeChecker\nKeywords:\nif(bi->pixelsize > INT_MAX / 8)', 'MutateMethodInvocationExpression\nKeywords:\ndbuf_getu16be', 'InsertRangeChecker\nKeywords:\nif (bi->pixelsize > 0)', 'MutateVariable\nKeywords:\nbi->rowbytes*8', 'MutateVariable\nKeywords:\nbi->rowbytes', 'MutateDataType\nKeywords:\nu32']
['InsertNullPointerChecker\nKeywords:\nefree(ent1)', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertReleaseResource\nKeywords:\nefree(ent1)', 'InsertNullPointerChecker\nKeywords:\nent1->data = NULL', 'InsertNullPointerChecker\nKeywords:\nif (ent1)', 'InsertNullPointerChecker\nKeywords:\nent1 = NULL', 'InsertNullPointerChecker\nKeywords:\nstack->done = 1', 'InsertNullPointerChecker\nKeywords:\nefree', 'InsertNullPointerChecker\nKeywords:\nif (!ent1)', 'InsertReleaseResource\nKeywords:\nefree']
['MutateMethodInvocationExpression\nKeywords:\nstrcmp', 'RemoveBuggyStatement\nKeywords:\nstrcmp', 'InsertMethodInvocationExpression\nKeywords:\nstrcmp', 'InsertNullPointerChecker\nKeywords:\ndevice_path', 'MutateMethodInvocationExpression\nKeywords:\nstrcasecmp', 'InsertMethodInvocationExpression\nKeywords:\nstrcasecmp', 'InsertReleaseResource\nKeywords:\nmutex_unlock', 'RemoveBuggyStatement\nKeywords:\nstrcasecmp', 'MutateConditionalExpression\nKeywords:\nstrcmp', 'RemoveBuggyStatement\nKeywords:\nstrchr']
['InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nif (i >= MNG_MAX_OBJECTS)', 'InsertRangeChecker\nKeywords:\nif (i < MNG_MAX_OBJECTS)', 'InsertMissedStatement\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\nif (i == MNG_MAX_OBJECTS)', 'InsertRangeChecker\nKeywords:\nassert(i < MNG_MAX_OBJECTS)', 'InsertConditionalExpression\nKeywords:\ncontinue', 'InsertNullPointerChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nthrow MagickException']
['InsertRangeChecker\nKeywords:\nif (p + name_part_len > max)', 'InsertRangeChecker\nKeywords:\nif (p - start > max - name_len)', 'InsertRangeChecker\nKeywords:\nif (p - start >= name_part_len)', 'InsertRangeChecker\nKeywords:\nif (p - start >= name_len)', 'InsertRangeChecker\nKeywords:\nif (p + name_len > max)', 'InsertRangeChecker\nKeywords:\nif (p - start < name_len)', 'InsertRangeChecker\nKeywords:\nif (*parsed_len < 0)', 'InsertRangeChecker\nKeywords:\npj_assert', 'InsertRangeChecker\nKeywords:\nif (p - start > MAX_NAME_LEN)', 'InsertRangeChecker\nKeywords:\nif (p < start)']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\np->content_script_types', 'RemoveBuggyStatement\nKeywords:\ngf_strdup', 'InsertNullPointerChecker\nKeywords:\ngf_strdup', 'InsertReleaseResource\nKeywords:\ngf_strdup', 'MutateDataType\nKeywords:\nsize_t', 'InsertNullPointerChecker\nKeywords:\nstr[1024]=0', 'InsertNullPointerChecker\nKeywords:\nif (!str[0])', 'InsertMethodInvocationExpression\nKeywords:\ngf_strdup', 'RemoveBuggyStatement\nKeywords:\ngf_free', 'InsertNullPointerChecker\nKeywords:\nstr[1024]=NULL']
['InsertRangeChecker\nKeywords:\nreturn -1', 'InsertRangeChecker\nKeywords:\nmax_table_size', 'InsertRangeChecker\nKeywords:\nLSQ_DEBUG', 'InsertRangeChecker\nKeywords:\ntsu_sz', 'InsertRangeChecker\nKeywords:\nlsqpack_enc_max_table_size', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\ntsu_sz_max', 'InsertRangeChecker\nKeywords:\nLSQ_WARN', 'InsertRangeChecker\nKeywords:\nassert', '']
['MutateMethodInvocationExpression\nKeywords:\nmemcmp', 'RemoveBuggyStatement\nKeywords:\nmemcmp', 'InsertMethodInvocationExpression\nKeywords:\nmemcmp', 'InsertMissedStatement\nKeywords:\nmemcmp', 'MutateConditionalExpression\nKeywords:\nmemcmp', 'MutateLiteralExpression\nKeywords:\nmemcmp', 'MutateControlStatement\nKeywords:\nmemcmp', 'InsertReleaseResource\nKeywords:\nfree', 'MutateLiteralExpression\nKeywords:\nlen', 'MutateMethodInvocationExpression\nKeywords:\nmemeq']
['Input Too Long']
['MutateConditionalExpression\nKeywords:\ns > 0', 'MutateConditionalExpression\nKeywords:\ns < bd->textlen', 'MutateConditionalExpression\nKeywords:\nwhile', 'MutateConditionalExpression\nKeywords:\nif (s > 0)', 'MutateConditionalExpression\nKeywords:\nwhile (s > 0)', 'MutateControlStatement\nKeywords:\nwhile (s > 0)', 'MutateConditionalExpression\nKeywords:\n&& s > 0', 'MutateControlStatement\nKeywords:\nwhile', 'InsertRangeChecker\nKeywords:\nwhile', '']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\nif (N < 0)', 'InsertRangeChecker\nKeywords:\nif (N <= 0)', 'InsertRangeChecker\nKeywords:\nN_big > 0', 'InsertRangeChecker\nKeywords:\nif (N > 0)', 'InsertNullPointerChecker\nKeywords:\nparams', 'InsertRangeChecker\nKeywords:\nN > 0', '']
['MutateConditionalExpression\nKeywords:\n!is_auth_req()', 'InsertConditionalExpression\nKeywords:\n!is_auth_req()', 'RemoveBuggyStatement\nKeywords:\nis_auth_req()', 'MutateConditionalExpression\nKeywords:\nis_auth_req()', 'InsertConditionalExpression\nKeywords:\nis_auth_req()', 'InsertConditionalExpression\nKeywords:\n!cl.authkey[0]', 'InsertMethodInvocationExpression\nKeywords:\ncheck_authkey', 'RemoveBuggyStatement\nKeywords:\nis_auth_req', 'MutateConditionalExpression\nKeywords:\nis_auth_req', 'InsertConditionalExpression\nKeywords:\nis_auth_req']
['RemoveBuggyStatement\nKeywords:\ndelete', 'MutateMethodInvocationExpression\nKeywords:\nmt_del', 'MutateMethodInvocationExpression\nKeywords:\ndelete', 'MutateReturnStatement\nKeywords:\nreturn', 'InsertMethodInvocationExpression\nKeywords:\nmt_del', 'InsertNullPointerChecker\nKeywords:\n!h', 'RemoveBuggyStatement\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nh', 'InsertNullPointerChecker\nKeywords:\nif (h)']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nndims', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\nndims > 2', 'InsertRangeChecker\nKeywords:\nndims >= 2', 'InsertRangeChecker\nKeywords:\nndims < 2', 'InsertRangeChecker\nKeywords:\nndims - 2', 'InsertRangeChecker\nKeywords:\nndims - 1', '']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'MutateMethodInvocationExpression\nKeywords:\nbuf->Peek', 'InsertMethodInvocationExpression\nKeywords:\nbuf->Peek', 'InsertNullPointerChecker\nKeywords:\nif (!buf)', 'InsertNullPointerChecker\nKeywords:\nbuf', 'MutateMethodInvocationExpression\nKeywords:\nstd::min', 'InsertVariable\nKeywords:\nindex', 'MutateLiteralExpression\nKeywords:\nstd::size_t', 'MutateMethodInvocationExpression\nKeywords:\nbuf->PeekIndex']
['InsertMissedStatement\nKeywords:\nread->force_fetch = GF_TRUE', 'InsertNullPointerChecker\nKeywords:\nread->force_fetch = GF_TRUE', 'InsertConditionalExpression\nKeywords:\nread->force_fetch = GF_TRUE', 'InsertMissedStatement\nKeywords:\nread->force_fetch = GF_FALSE', 'InsertMissedStatement\nKeywords:\nbreak', 'InsertConditionalExpression\nKeywords:\ngf_filter_pid_get_eos', 'InsertConditionalExpression\nKeywords:\ngf_filter_pid_is_eos', 'InsertConditionalExpression\nKeywords:\nread->force_fetch', 'InsertNullPointerChecker\nKeywords:\nbreak', 'InsertConditionalExpression\nKeywords:\nread->force_fetch = GF_FALSE']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\ndefault_value_t.NumElements() > 0', 'InsertRangeChecker\nKeywords:\ndefault_value_t.NumElements() != 0', 'InsertConditionalExpression\nKeywords:\n OP_REQUIRES', 'InsertMethodInvocationExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\ndefault_value_t.NumElements() == 0', 'InsertRangeChecker\nKeywords:\ndefault_value_t.NumElements() <= 0', 'InsertConditionalExpression\nKeywords:\nop_reQUIRES_OK']
['InsertConditionalExpression\nKeywords:\nb->NumElements() != a_shape->NumElements()', 'InsertConditionalExpression\nKeywords:\na_shape->NumElements() != b->dims()', 'InsertRangeChecker\nKeywords:\nreturn errors::InvalidArgument(\n    "Two operands have different ranks; received: ", a_shape->NumElements(), " and ", b->dims())', 'InsertRangeChecker\nKeywords:\nreturn errors::InvalidArgument', 'InsertConditionalExpression\nKeywords:\nif (a_shape->NumElements() != b->dims())', 'InsertRangeChecker\nKeywords:\nreturn errors::InvalidArgument(\n    "Two operands have different rank; received: ", a_shape->NumElements(), " and ", b->dims())', 'InsertRangeChecker\nKeywords:\nif (a_shape->NumElements() != b->dims())', 'InsertConditionalExpression\nKeywords:\na_values->NumElements() != b->NumElements()', 'InsertConditionalExpression\nKeywords:\nreturn errors::InvalidArgument', 'InsertMissedStatement\nKeywords:\nreturn errors::InvalidArgument']
['InsertRangeChecker\nKeywords:\nreturn errors::InvalidArgument', 'InsertRangeChecker\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertRangeChecker\nKeywords:\nnum_examples', 'InsertNullPointerChecker\nKeywords:\nreturn errors::InvalidArgument', 'InsertRangeChecker\nKeywords:\nif (num_examples < 1)', 'InsertNullPointerChecker\nKeywords:\nif (example_labels_t)', 'InsertConditionalExpression\nKeywords:\nreturn errors::InvalidArgument', 'InsertNullPointerChecker\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertConditionalExpression\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertNullPointerChecker\nKeywords:\nif (!example_labels_t)']
['InsertNullPointerChecker\nKeywords:\ngf_isom_get_sample', 'InsertNullPointerChecker\nKeywords:\ngf_isom_sample_del', 'InsertRangeChecker\nKeywords:\nsamp->dataLength', 'InsertRangeChecker\nKeywords:\nsamp->dataLength > 0', 'InsertNullPointerChecker\nKeywords:\nsamp', 'InsertRangeChecker\nKeywords:\ngf_isom_get_sample_count', 'InsertNullPointerChecker\nKeywords:\nsamp->data', 'InsertRangeChecker\nKeywords:\nif (samp->dataLength > 0)', 'InsertNullPointerChecker\nKeywords:\nif (!samp)', '']
['InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nif (!handle)', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nif (handle)', 'InsertNullPointerChecker\nKeywords:\nif (!id)', 'MutateDataType\nKeywords:\nint64', 'MutateLiteralExpression\nKeywords:\nint64', 'InsertVariable\nKeywords:\nid', '']
['InsertRangeChecker\nKeywords:\nif (c->input_size() < 3)', 'InsertRangeChecker\nKeywords:\nif (c->input_size() != 3)', 'InsertRangeChecker\nKeywords:\nif (c->num_inputs() < 3)', 'InsertRangeChecker\nKeywords:\nreturn Status::InvalidArgument', 'InsertRangeChecker\nKeywords:\nif (c->num_inputs() != 3)', 'InsertRangeChecker\nKeywords:\nif (c->input_size() < 2)', 'InsertRangeChecker\nKeywords:\nc->status() != Status::OK', 'InsertRangeChecker\nKeywords:\nRETURN_IF_ERROR', 'InsertRangeChecker\nKeywords:\nc->error(1)', '']
['Input Too Long']
['InsertConditionalExpression\nKeywords:\nTF_LITE_ENSURE', 'InsertRangeChecker\nKeywords:\nTF_LITE_ENSURE', 'InsertConditionalExpression\nKeywords:\nTF_LITE_ENFORCE', 'MoveStatement\nKeywords:\nTF_LITE_ENSURE', 'InsertMethodInvocationExpression\nKeywords:\nTF_LITE_ENSURE', 'InsertMissedStatement\nKeywords:\nTF_LITE_ENSURE', 'InsertNullPointerChecker\nKeywords:\nTF_LITE_ENSURE', 'InsertVariable\nKeywords:\nkernel_type', 'InsertConditionalExpression\nKeywords:\nTF_LITE_ENFORCE_EQ', 'InsertConditionalExpression\nKeywords:\nTF_LITE_ENSURE_OK']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\ndepth', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertMissedStatement\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nif (depth < 1)', 'InsertRangeChecker\nKeywords:\nDEPTH_CHECK', 'InsertRangeChecker\nKeywords:\ndepth < 1', 'InsertRangeChecker\nKeywords:\ndepth < 2']
['InsertRangeChecker\nKeywords:\np >= pend', 'InsertRangeChecker\nKeywords:\nif (p >= pend)', 'InsertRangeChecker\nKeywords:\npktlen', 'InsertRangeChecker\nKeywords:\np < pend', 'InsertNullPointerChecker\nKeywords:\nif (p == pend)', 'InsertMissedStatement\nKeywords:\np += pkt.blen', 'InsertRangeChecker\nKeywords:\npend - p >= pktlen', 'InsertRangeChecker\nKeywords:\nif (p > pend)', 'InsertRangeChecker\nKeywords:\nbreak', '']
['InsertNullPointerChecker\nKeywords:\nif (ca_cert_ != nullptr)', 'InsertNullPointerChecker\nKeywords:\nif (ca_cert_ == nullptr)', 'InsertMissedStatement\nKeywords:\nverify_certificate_hash_list_ = {}', 'InsertNullPointerChecker\nKeywords:\nca_cert_ == nullptr', 'InsertMissedStatement\nKeywords:\nverify_certificate_hash_list_.clear()', 'InsertNullPointerChecker\nKeywords:\nca_cert_ != nullptr', 'InsertNullPointerChecker\nKeywords:\nca_cert_ = nullptr', 'InsertNullPointerChecker\nKeywords:\nca_cert_', 'InsertConditionalExpression\nKeywords:\nverify_certificate_spki_list_.empty()', 'InsertReleaseResource\nKeywords:\nEVP_MD_CTX_free']
['InsertRangeChecker\nKeywords:\nm_n', 'InsertRangeChecker\nKeywords:\nif (r.IsZero())', 'InsertRangeChecker\nKeywords:\nr.IsZero()', 'InsertNullPointerChecker\nKeywords:\nr.IsNull()', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (!r.IsValid())', 'InsertMethodInvocationExpression\nKeywords:\nModularSquareRoot', 'InsertRangeChecker\nKeywords:\nthrow Exception', 'InsertRangeChecker\nKeywords:\nr.IsZero', '']
['InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nerrorstate', 'InsertRangeChecker\nKeywords:\nerrorstate = false', 'InsertRangeChecker\nKeywords:\ndelete[] chunk.p', 'InsertRangeChecker\nKeywords:\nerrorstate = false;', 'InsertRangeChecker\nKeywords:\nskipFirst', 'InsertRangeChecker\nKeywords:\nreturn false', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\ngoto error']
['InsertNullPointerChecker\nKeywords:\ntrak', 'InsertNullPointerChecker\nKeywords:\nreturn GF_OK', 'InsertNullPointerChecker\nKeywords:\nbreak', 'InsertNullPointerChecker\nKeywords:\ngoto exit', 'InsertNullPointerChecker\nKeywords:\nif (!trak)', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\ntrak == NULL', 'InsertNullPointerChecker\nKeywords:\ncontinue', 'InsertNullPointerChecker\nKeywords:\n!trak', '']
['MutateMethodInvocationExpression\nKeywords:\nutils::toNativePath', 'RemoveBuggyStatement\nKeywords:\nLOG_TRACE', 'InsertMethodInvocationExpression\nKeywords:\nfilesystem::create_directories', 'InsertMethodInvocationExpression\nKeywords:\nfilesystem::make_absolute', 'InsertMethodInvocationExpression\nKeywords:\nutils::toNativePath', 'MutateMethodInvocationExpression\nKeywords:\nfilesystem::make_absolute', 'InsertNullPointerChecker\nKeywords:\nif (!fsPath.empty())', 'InsertMethodInvocationExpression\nKeywords:\nfilesystem::make_relative_path', 'MutateMethodInvocationExpression\nKeywords:\nfilesystem::create_directories', 'InsertMethodInvocationExpression\nKeywords:\nfilesystem::make_absolute_path']
['InsertMissedStatement\nKeywords:\ninput2_data_reset = nullptr', 'InsertConditionalExpression\nKeywords:\nif (y4 == 0)', 'InsertNullPointerChecker\nKeywords:\ninput2_data_ptr', 'InsertNullPointerChecker\nKeywords:\nif (!input2_data_ptr)', 'InsertNullPointerChecker\nKeywords:\nif (input2_data_reset)', 'InsertNullPointerChecker\nKeywords:\nif (!input2_data_reset)', 'InsertMethodInvocationExpression\nKeywords:\nelementwise_f', 'InsertMethodInvocationExpression\nKeywords:\nscalar_broadcast_f', 'InsertNullPointerChecker\nKeywords:\ninput2_data_reset', 'InsertConditionalExpression\nKeywords:\nif (y4 == 1)']
['InsertRangeChecker\nKeywords:\ninvalid_data = true', 'InsertRangeChecker\nKeywords:\ninvalid_data = true;', 'InsertRangeChecker\nKeywords:\ndata_size', 'InsertRangeChecker\nKeywords:\nvalid_data = true', 'InsertConditionalExpression\nKeywords:\ninvalid_data = true', 'InsertMissedStatement\nKeywords:\ninvalid_data = true', 'InsertRangeChecker\nKeywords:\ninvalid_data', 'InsertRangeChecker\nKeywords:\nreturn false', 'InsertRangeChecker\nKeywords:\nreturn invalid_data', 'InsertRangeChecker\nKeywords:\nreturn']
['InsertRangeChecker\nKeywords:\npop_n', 'InsertConditionalExpression\nKeywords:\npop_n', 'InsertRangeChecker\nKeywords:\nif (n < 14)', 'InsertRangeChecker\nKeywords:\nn < 14', 'InsertConditionalExpression\nKeywords:\nif (n < 14)', 'InsertRangeChecker\nKeywords:\npop_n(n)', 'InsertConditionalExpression\nKeywords:\nn < 14', 'InsertRangeChecker\nKeywords:\npop_n(2)', 'InsertMissedStatement\nKeywords:\npop_n', 'InsertConditionalExpression\nKeywords:\npop_n(n)']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nif (axis_ < 0)', 'InsertRangeChecker\nKeywords:\nnum_slices', 'InsertVariable\nKeywords:\naxis_', 'InsertRangeChecker\nKeywords:\nnum_slices = 1', 'InsertRangeChecker\nKeywords:\nif (axis_ < 0)', 'InsertNullPointerChecker\nKeywords:\nif (axis_ >= 0)']
['InsertRangeChecker\nKeywords:\nsize', 'InsertMissedStatement\nKeywords:\ninit_get_bits', 'InsertConditionalExpression\nKeywords:\nif (size & 1)', 'MutateDataType\nKeywords:\nsize * 8', 'InsertRangeChecker\nKeywords:\nif (size < 8)', 'InsertConditionalExpression\nKeywords:\nif (size % 8)', 'MutateDataType\nKeywords:\nint32_t', 'InsertRangeChecker\nKeywords:\nsize < 8', 'InsertNullPointerChecker\nKeywords:\nbuf', 'MutateDataType\nKeywords:\nsize']
['MutateDataType\nKeywords:\nsize_t', 'MutateVariable\nKeywords:\ndir->length', 'MutateVariable\nKeywords:\nlength', 'MutateLiteralExpression\nKeywords:\nlength', 'MutateLiteralExpression\nKeywords:\nlength + 1', 'MutateLiteralExpression\nKeywords:\ndir->length', 'InsertRangeChecker\nKeywords:\nlength', 'MutateMethodInvocationExpression\nKeywords:\nlength', 'InsertRangeChecker\nKeywords:\ndir->length > 0', '']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nTF_LITE_ENSURE', 'InsertConditionalExpression\nKeywords:\nTF_LITE_ENSURE', 'InsertNullPointerChecker\nKeywords:\nTF_LITE_ENSURE', 'InsertMissedStatement\nKeywords:\nTF_LITE_ENSURE', 'InsertCastStatement\nKeywords:\nTF_LITE_ENSURE', 'InsertCastChecker\nKeywords:\nTF_LITE_ENSURE', 'InsertCastStatement\nKeywords:\nTfLiteAffineQuantization', 'InsertCastStatement\nKeywords:\nTfLiteAffineQuantization*', 'InsertVariable\nKeywords:\noutput_temp_size_array', 'InsertVariable\nKeywords:\noutput_temp_size']
['InsertNullPointerChecker\nKeywords:\nif (!resource)', 'MutateMethodInvocationExpression\nKeywords:\nouter_context->input_handle_shapes_and_types', 'InsertNullPointerChecker\nKeywords:\nresource', 'RemoveBuggyStatement\nKeywords:\ndelete', 'MutateMethodInvocationExpression\nKeywords:\nGetNodeAttr', 'InsertNullPointerChecker\nKeywords:\nif (resource)', 'InsertNullPointerChecker\nKeywords:\n!resource', 'MutateMethodInvocationExpression\nKeywords:\nGetResource', 'InsertVariable\nKeywords:\nresource', '']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\nop_reQUIRES', 'InsertRangeChecker\nKeywords:\nn', 'InsertRangeChecker\nKeywords:\nif (k > n)', 'InsertRangeChecker\nKeywords:\nk > k2', 'InsertRangeChecker\nKeywords:\nn < 0', 'InsertRangeChecker\nKeywords:\nk2', '']
['InsertRangeChecker\nKeywords:\nlength', 'InsertRangeChecker\nKeywords:\nlength < sizeof(*hdr)', 'InsertRangeChecker\nKeywords:\nlength > sizeof(*hdr)', 'InsertRangeChecker\nKeywords:\nlength < rpsi_len', 'InsertRangeChecker\nKeywords:\nlength >= sizeof(*hdr)', 'InsertRangeChecker\nKeywords:\nlength < 12', 'InsertRangeChecker\nKeywords:\nlength < 4', 'InsertRangeChecker\nKeywords:\npj_assert', 'InsertRangeChecker\nKeywords:\nreturn', '']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertMissedStatement\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\n OP_REQUIRES', 'InsertVariable\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nhandle.NumElements() < 1', 'InsertRangeChecker\nKeywords:\nhandle.NumElements() > 0', 'InsertRangeChecker\nKeywords:\nhandle.NumElements() > 1', 'InsertRangeChecker\nKeywords:\nhandle.NumElements() < 2']
['InsertRangeChecker\nKeywords:\nnum_labels', 'InsertRangeChecker\nKeywords:\nif (i < num_inputs)', 'InsertRangeChecker\nKeywords:\nnum_inputs', 'InsertRangeChecker\nKeywords:\nif (i < num_labels)', 'InsertRangeChecker\nKeywords:\nif (i >= num_inputs)', 'InsertRangeChecker\nKeywords:\nnum_labels < 2', 'InsertRangeChecker\nKeywords:\nif (i >= num_labels)', 'InsertMissedStatement\nKeywords:\nnum_labels', 'InsertRangeChecker\nKeywords:\nnum_labels > 0', 'InsertRangeChecker\nKeywords:\ncontinue']
['InsertVariable\nKeywords:\ndequeue_node', 'InsertNullPointerChecker\nKeywords:\ndequeue_node', 'MutateVariable\nKeywords:\ndequeue_node', 'RemoveBuggyStatement\nKeywords:\ndequeue_node', 'InsertVariable\nKeywords:\nconst NodeDef* dequeue_node', 'MutateDataType\nKeywords:\nconst NodeDef* dequeue_node', 'InsertConditionalExpression\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertVariable\nKeywords:\ndequeue_node_', 'InsertVariable\nKeywords:\nconst NodeDef* dequeue_node;', 'MutateVariable\nKeywords:\ndequeue_node_']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\n OP_REQUIRES', 'InsertVariable\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\ninput.NumElements() < 2', 'InsertRangeChecker\nKeywords:\ninput.NumElements() > 1', 'InsertRangeChecker\nKeywords:\ninput.NumElements() <= 1', 'InsertRangeChecker\nKeywords:\ninput.dims() > 1']
['InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nrestore_slice', 'InsertNullPointerChecker\nKeywords:\ntensor_name_t', 'InsertConditionalExpression\nKeywords:\nrestore_index', 'InsertVariable\nKeywords:\nrestore_slice', 'InsertNullPointerChecker\nKeywords:\nop_kernel_context', 'InsertNullPointerChecker\nKeywords:\nop_require']
['Input Too Long']
['MutateDataType\nKeywords:\nULONG', 'InsertRangeChecker\nKeywords:\nif (m_ucCount == 0)', 'InsertRangeChecker\nKeywords:\nif (m_ucCount > 0)', 'InsertConditionalExpression\nKeywords:\nif (m_ucCount > 0)', 'InsertConditionalExpression\nKeywords:\nif (m_ucCount == 0)', 'MutateControlStatement\nKeywords:\nfor', 'InsertRangeChecker\nKeywords:\nm_ucCount', 'InsertVariable\nKeywords:\nm_ucCount', 'MutateControlStatement\nKeywords:\nm_bSubsampling', 'MutateDataType\nKeywords:\nUINT32']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\ndepth', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\naxis_ != -1', 'InsertRangeChecker\nKeywords:\naxis_ == -1', 'InsertRangeChecker\nKeywords:\ndepth < 1', 'InsertRangeChecker\nKeywords:\ndepth > 0', 'InsertRangeChecker\nKeywords:\ndepth > 1', 'InsertRangeChecker\nKeywords:\nDEPTH_MAX']
['InsertConditionalExpression\nKeywords:\nMqttIsPubRespPacket(packet_type)', 'RemoveBuggyStatement\nKeywords:\nMqttIsPubRespPacket', 'MutateConditionalExpression\nKeywords:\nMqttIsPubRespPacket', 'MutateConditionalExpression\nKeywords:\nMqttIsRespPacket(packet_type)', 'InsertConditionalExpression\nKeywords:\nMqttIsPubRespPacket', 'MutateConditionalExpression\nKeywords:\nwait_packet_id', 'MutateConditionalExpression\nKeywords:\nMqttClient_RespList_Find', 'InsertConditionalExpression\nKeywords:\nMqttClient_RespList_Find', 'InsertConditionalExpression\nKeywords:\nwait_packet_id', 'MutateConditionalExpression\nKeywords:\nMqttIsRespPacket']
['InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nif (!frame)', 'InsertNullPointerChecker\nKeywords:\nframe == NULL', 'InsertNullPointerChecker\nKeywords:\nframe != NULL', 'InsertNullPointerChecker\nKeywords:\nif (frame)', 'InsertNullPointerChecker\nKeywords:\nbreak', 'InsertNullPointerChecker\nKeywords:\nframe', 'InsertNullPointerChecker\nKeywords:\nreturn FALSE', '']
['InsertNullPointerChecker\nKeywords:\nif (p == NULL)', 'MutateMethodInvocationExpression\nKeywords:\nnjs_string_offset', 'InsertRangeChecker\nKeywords:\nnjs_slow_path', 'MutateMethodInvocationExpression\nKeywords:\nnjs_utf8_next', 'InsertMethodInvocationExpression\nKeywords:\nnjs_string_offset', 'InsertMethodInvocationExpression\nKeywords:\nnjs_utf8_next', 'MutateMethodInvocationExpression\nKeywords:\nnjs_utf8_prev', 'InsertRangeChecker\nKeywords:\nif (end < p)', 'InsertMethodInvocationExpression\nKeywords:\nnjs_utf8_prev', 'InsertRangeChecker\nKeywords:\nend < p']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nbatched_ragged_input.size() < 1', 'InsertRangeChecker\nKeywords:\nbatched_ragged_input.size() <= 0', 'InsertRangeChecker\nKeywords:\nbatched_ragged_input.size() < 2', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nnum_components', 'InsertRangeChecker\nKeywords:\nUNREACHABLE_OPERATION', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nUNREACHABLE_OPS', '']
['InsertRangeChecker\nKeywords:\nin_idx < 0 || in_idx >= rank', 'InsertRangeChecker\nKeywords:\nin_idx >= 0 && in_idx < rank', 'InsertRangeChecker\nKeywords:\nin_idx < 0', 'InsertRangeChecker\nKeywords:\nin_idx < rank', 'InsertRangeChecker\nKeywords:\nin_idx >= rank', 'InsertConditionalExpression\nKeywords:\nin_idx < 0 || in_idx >= rank', 'MutateConditionalExpression\nKeywords:\n>=', 'InsertRangeChecker\nKeywords:\nTF_RETURN_IF_ERROR', 'InsertRangeChecker\nKeywords:\nif (in_idx >= rank)', 'MutateConditionalExpression\nKeywords:\n<= 0']
['InsertRangeChecker\nKeywords:\nreturn kTfLiteError', 'InsertConditionalExpression\nKeywords:\nreturn kTfLiteError', 'InsertConditionalExpression\nKeywords:\nTfLiteValidateTensorType', 'InsertConditionalExpression\nKeywords:\nTfLiteValidateTensor(params)', 'InsertRangeChecker\nKeywords:\nTfLiteValidateTensor(params)', 'InsertRangeChecker\nKeywords:\nif (params->size != 0)', 'InsertRangeChecker\nKeywords:\ncontext->ReportError', 'InsertConditionalExpression\nKeywords:\nTfLiteCheckType', 'InsertConditionalExpression\nKeywords:\nTfLiteValidateTensor(indices)', 'InsertRangeChecker\nKeywords:\nif (params->size != 1)']
['InsertRangeChecker\nKeywords:\nif (len == 1)', 'InsertRangeChecker\nKeywords:\nif (len == 8)', 'InsertRangeChecker\nKeywords:\nif (len != 8)', 'InsertRangeChecker\nKeywords:\nif (len > 8)', 'InsertRangeChecker\nKeywords:\nlen == 8', 'InsertConditionalExpression\nKeywords:\nif (len == 1)', 'InsertRangeChecker\nKeywords:\nif (len < 8)', 'InsertRangeChecker\nKeywords:\nlen < 8', 'InsertRangeChecker\nKeywords:\nlen > 8', 'InsertRangeChecker\nKeywords:\nreturn 8']
['InsertNullPointerChecker\nKeywords:\nsss_[idx]', 'InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nif (!sss_[idx]) return false;', 'InsertNullPointerChecker\nKeywords:\nif (!sts.data().data())', 'InsertNullPointerChecker\nKeywords:\nif (!sss_[idx])', 'InsertNullPointerChecker\nKeywords:\nsss_[idx]->Get', 'InsertRangeChecker\nKeywords:\nif (sts.data().size() < 1)', 'InsertNullPointerChecker\nKeywords:\nif (!sts.data().empty())', 'InsertRangeChecker\nKeywords:\nreturn false', 'InsertRangeChecker\nKeywords:\nif (sts.data().size() < 2)']
['InsertNullPointerChecker\nKeywords:\nif (!node->sgprivate)', 'InsertNullPointerChecker\nKeywords:\nnode->sgprivate->num_instances = 0', 'InsertNullPointerChecker\nKeywords:\nnode->sgprivate', 'InsertNullPointerChecker\nKeywords:\nif (node->sgprivate)', 'RemoveBuggyStatement\nKeywords:\ngf_node_unregister', 'MutateVariable\nKeywords:\nnode->sgprivate->num_instances', 'MutateMethodInvocationExpression\nKeywords:\ngf_node_get_sgprivate', 'InsertNullPointerChecker\nKeywords:\nnode', 'MutateVariable\nKeywords:\nnode->sgprivate->num_instances = 2', 'MutateVariable\nKeywords:\nnode->sgprivate->num_instances = 3']
['InsertConditionalExpression\nKeywords:\nreturn false;', 'InsertConditionalExpression\nKeywords:\nreturn true;', 'InsertConditionalExpression\nKeywords:\nreturn true', 'InsertConditionalExpression\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nreturn false', 'MutateReturnStatement\nKeywords:\nreturn true;', 'MutateConditionalExpression\nKeywords:\nreturn true;', 'MutateConditionalExpression\nKeywords:\nreturn false;', 'InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nreturn false;']
['MutateDataType\nKeywords:\nTfLiteInt32', 'InsertRangeChecker\nKeywords:\nif (params.batch_dims != 0)', 'InsertRangeChecker\nKeywords:\nreturn kTfLiteErrorInvalidArgument', 'MutateDataType\nKeywords:\nTfLiteFloat32', 'InsertRangeChecker\nKeywords:\nTfLiteThrowError', 'MutateMethodInvocationExpression\nKeywords:\noptimized_ops::Gather', 'InsertRangeChecker\nKeywords:\nif (params.batch_dims < 1 || params.axis < 0)', 'InsertRangeChecker\nKeywords:\nif (params.batch_dims < 1)', 'InsertRangeChecker\nKeywords:\nif (params.batch_dims != 1)', '']
['MutateMethodInvocationExpression\nKeywords:\ndup_array', 'InsertMethodInvocationExpression\nKeywords:\ndup_array', 'RemoveBuggyStatement\nKeywords:\ndup_array', 'InsertNullPointerChecker\nKeywords:\ncapabilities->inheritable', 'InsertMissedStatement\nKeywords:\ndup_array', 'InsertRangeChecker\nKeywords:\ncap_size', 'MutateMethodInvocationExpression\nKeywords:\nalloc_array', 'InsertMethodInvocationExpression\nKeywords:\ndup_array_safe', 'InsertVariable\nKeywords:\ncap_size', '']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nnum_segments_tensor.dims() < 3', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nnum_segments_tensor.nullptr()', 'InsertRangeChecker\nKeywords:\nNUM_SEGMENTS_TYPE', 'InsertVariable\nKeywords:\nNUM_SEGMENTS_TYPE', 'InsertVariable\nKeywords:\nnum_segments_type', '']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertVariable\nKeywords:\nnum_rows_', 'InsertRangeChecker\nKeywords:\nnum_rows_ < 1', 'InsertRangeChecker\nKeywords:\nnum_rows_ < 0', 'InsertRangeChecker\nKeywords:\nnum_rows_ > 0', 'InsertRangeChecker\nKeywords:\nnum_rows_<0', 'InsertRangeChecker\nKeywords:\nnum_rows_<1']
['InsertRangeChecker\nKeywords:\nCHECK_EQ', 'InsertRangeChecker\nKeywords:\nCHECK_GE(idx, 0)', 'InsertRangeChecker\nKeywords:\nCHECK_GT(idx, 0)', 'InsertRangeChecker\nKeywords:\nif (idx >= coords.size())', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nCHECK', 'InsertRangeChecker\nKeywords:\nidx >= 0', 'InsertRangeChecker\nKeywords:\nidx < 0', 'InsertRangeChecker\nKeywords:\nCHECK_GT', 'InsertRangeChecker\nKeywords:\nidx']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\ncol_seq_tensor_flat', 'InsertNullPointerChecker\nKeywords:\nop_reQUIRES', 'InsertRangeChecker\nKeywords:\nin_depth', 'InsertRangeChecker\nKeywords:\nif (in_depth < 0)', 'InsertNullPointerChecker\nKeywords:\nif (!in_depth)', '']
['InsertReleaseResource\nKeywords:\nDestroyQuantumInfo', 'InsertMissedStatement\nKeywords:\nbreak', 'InsertConditionalExpression\nKeywords:\nbreak', 'InsertMissedStatement\nKeywords:\nThrowFileException', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertConditionalExpression\nKeywords:\ngoto ExitLoop', 'InsertMissedStatement\nKeywords:\ncontinue', 'InsertNullPointerChecker\nKeywords:\nimage2', 'InsertMissedStatement\nKeywords:\nThrowWriterException', '']
['InsertNullPointerChecker\nKeywords:\nif (tensor != nullptr)', 'InsertRangeChecker\nKeywords:\nreturn nullptr', 'InsertNullPointerChecker\nKeywords:\nassert(tensor != nullptr)', 'InsertNullPointerChecker\nKeywords:\nif (tensor == nullptr)', 'InsertNullPointerChecker\nKeywords:\nif (tensor)', 'InsertVariable\nKeywords:\nis_variable', 'InsertNullPointerChecker\nKeywords:\nif (!tensor)', 'InsertRangeChecker\nKeywords:\nTfLiteThrowException', 'InsertRangeChecker\nKeywords:\nTfLiteCheckTensorType', '']
['MutateConditionalExpression\nKeywords:\nstrncmp', 'RemoveBuggyStatement\nKeywords:\nstrncmp', 'MutateMethodInvocationExpression\nKeywords:\nmemcmp', 'MutateMethodInvocationExpression\nKeywords:\nstrncmp', 'InsertNullPointerChecker\nKeywords:\npasswd1_sum', 'MutateConditionalExpression\nKeywords:\nmemcmp', 'MutateMethodInvocationExpression\nKeywords:\nstrncpy', 'InsertMissedStatement\nKeywords:\nstrncmp', 'InsertConditionalExpression\nKeywords:\nstrncmp', 'InsertReleaseResource\nKeywords:\nfree']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nOP_REQUIRES', 'InsertCastStatement\nKeywords:\nOP_REQUIRES', 'MoveStatement\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\nDCHECK_GT', 'InsertRangeChecker\nKeywords:\nCHECK_GT', 'InsertRangeChecker\nKeywords:\nOP_REQUIREQUIRE', '']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertMissedStatement\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\noutput_rank > 0', 'InsertRangeChecker\nKeywords:\nif (output_rank != 1)', 'InsertRangeChecker\nKeywords:\nif (output_rank != 0)', 'InsertRangeChecker\nKeywords:\nnnz > 0', 'InsertRangeChecker\nKeywords:\nnnz', '']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\ncell_size', 'InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertRangeChecker\nKeywords:\n OP_REQUIRES', 'InsertRangeChecker\nKeywords:\ninput_size', 'InsertRangeChecker\nKeywords:\ncell_size <= 0', 'InsertRangeChecker\nKeywords:\ncell_clip_', 'InsertRangeChecker\nKeywords:\ncell_size < 0', 'InsertRangeChecker\nKeywords:\ncell_size < 2', '']
['MutateMethodInvocationExpression\nKeywords:\nsnprintf', 'MutateMethodInvocationExpression\nKeywords:\nsprintf', 'MutateMethodInvocationExpression\nKeywords:\nstrftime', 'MutateMethodInvocationExpression\nKeywords:\nstrncpy', 'MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'InsertMethodInvocationExpression\nKeywords:\nsnprintf', 'InsertMethodInvocationExpression\nKeywords:\ninet_pton', 'RemoveBuggyStatement\nKeywords:\nsprintf', 'InsertMethodInvocationExpression\nKeywords:\nstrncpy', 'MutateMethodInvocationExpression\nKeywords:\ninet_aton']
['InsertNullPointerChecker\nKeywords:\nmrb_assert', 'InsertMethodInvocationExpression\nKeywords:\nbreak_new', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nmrb->exc', 'InsertNullPointerChecker\nKeywords:\nbreak_new', 'InsertNullPointerChecker\nKeywords:\nNULL', 'InsertMethodInvocationExpression\nKeywords:\nmrb_raise', 'InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertVariable\nKeywords:\nexc', '']
['Input Too Long']
['InsertConditionalExpression\nKeywords:\nQuantizeMultiplierSmallerThanOneExp', 'InsertMethodInvocationExpression\nKeywords:\nQuantizeMultiplierSmallerThanOneExp', 'InsertRangeChecker\nKeywords:\nQuantizeMultiplierSmallerThanOneExp', 'InsertMissedStatement\nKeywords:\nQuantizeMultiplierSmallerThanOneExp', 'InsertNullPointerChecker\nKeywords:\nif (input1 == nullptr) return;', 'InsertRangeChecker\nKeywords:\nif (input1->params.scale > 0)', 'InsertVariable\nKeywords:\ninput1_multiplier', 'InsertRangeChecker\nKeywords:\nif (input1->params.scale < 0)', 'MutateDataType\nKeywords:\nint32', '']
['InsertNullPointerChecker\nKeywords:\nfunction', 'RemoveBuggyStatement\nKeywords:\ndelete', 'InsertNullPointerChecker\nKeywords:\nfunction->context', 'InsertVariable\nKeywords:\nfunction', 'RemoveBuggyStatement\nKeywords:\nfunction', 'InsertNullPointerChecker\nKeywords:\nreturn failed', 'InsertNullPointerChecker\nKeywords:\nfunction->await', 'InsertNullPointerChecker\nKeywords:\nreturn', 'MutateVariable\nKeywords:\nfunction', '']
['InsertNullPointerChecker\nKeywords:\nreturn 0', 'InsertNullPointerChecker\nKeywords:\nif (!carry)', 'InsertMissedStatement\nKeywords:\nEccPoint_mult', 'InsertMethodInvocationExpression\nKeywords:\nEccPoint_mult', 'InsertConditionalExpression\nKeywords:\nif (!carry)', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn -1', 'InsertConditionalExpression\nKeywords:\nif (carry)', 'InsertRangeChecker\nKeywords:\nreturn', '']
['InsertConditionalExpression\nKeywords:\nOP_REQUIRES', 'InsertNullPointerChecker\nKeywords:\nresult.release()', 'InsertNullPointerChecker\nKeywords:\nif (result)', 'InsertConditionalExpression\nKeywords:\nresult->Release()', 'InsertConditionalExpression\nKeywords:\nresult->Unref()', 'InsertReleaseResource\nKeywords:\nresult.release()', 'InsertNullPointerChecker\nKeywords:\nresult.reset', 'InsertMethodInvocationExpression\nKeywords:\nresult->Release()', 'InsertNullPointerChecker\nKeywords:\nresult.reset()', 'InsertNullPointerChecker\nKeywords:\nresult']
['MutateDataType\nKeywords:\nunsigned int', 'MutateDataType\nKeywords:\nuint', 'MutateDataType\nKeywords:\nunsigned long', 'MutateDataType\nKeywords:\nint', 'InsertRangeChecker\nKeywords:\nalen', 'MutateDataType\nKeywords:\nalen', 'InsertVariable\nKeywords:\nalen', 'MutateDataType\nKeywords:\nunsigned', 'MutateDataType\nKeywords:\nunsigned char', 'MutateDataType\nKeywords:\nunsigned short']
['InsertMethodInvocationExpression\nKeywords:\nmrb_stack_extend', 'InsertMissedStatement\nKeywords:\nmrb_stack_extend', 'InsertNullPointerChecker\nKeywords:\nif (c->ci)', 'MoveStatement\nKeywords:\nmrb_stack_extend', 'InsertRangeChecker\nKeywords:\nlen', 'InsertRangeChecker\nKeywords:\nif (len < 2)', 'InsertNullPointerChecker\nKeywords:\nif (!c->ci)', 'InsertRangeChecker\nKeywords:\nmrb_stack_extend', 'InsertRangeChecker\nKeywords:\nif (len > 0)', '']
['InsertRangeChecker\nKeywords:\nif (*decoded_size < pos || pos > *decoded_size)', 'InsertRangeChecker\nKeywords:\nif (*decoded_size < 0 || pos > *decoded_size)', 'InsertRangeChecker\nKeywords:\nif (*decoded_size < pos || pos >= *decoded_size)', 'MutateConditionalExpression\nKeywords:\nif (*decoded_size < pos)', 'InsertRangeChecker\nKeywords:\nif (*decoded_size < 0 || pos >= *decoded_size)', 'InsertRangeChecker\nKeywords:\nif (*decoded_size < pos)', 'InsertRangeChecker\nKeywords:\nl > *decoded_size', 'InsertRangeChecker\nKeywords:\nl < 0', 'InsertRangeChecker\nKeywords:\nif (l > *decoded_size)', 'InsertRangeChecker\nKeywords:\n*decoded_size < pos']
['InsertMissedStatement\nKeywords:\nappended_lines_mark', 'InsertMissedStatement\nKeywords:\nappended_lines_mark', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\ncurwin->w_cursor.col', 'InsertReleaseResource\nKeywords:\nvim_free', 'InsertMissedStatement\nKeywords:\nmsgmore', 'InsertRangeChecker\nKeywords:\ncount', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nif (count == 0)', '']
['InsertRangeChecker\nKeywords:\ngoto out', 'InsertRangeChecker\nKeywords:\nnum_migrate', 'InsertRangeChecker\nKeywords:\nnum_migrate <= 0', 'InsertMissedStatement\nKeywords:\ngoto out', 'InsertRangeChecker\nKeywords:\nerr', 'InsertRangeChecker\nKeywords:\nnum_migrate < 1', 'InsertRangeChecker\nKeywords:\nnum_migrate < 0', 'InsertConditionalExpression\nKeywords:\ngoto out', 'InsertMemset\nKeywords:\nmemset', '']
['InsertRangeChecker\nKeywords:\nreturn MP_LOADER_FAILED', 'InsertRangeChecker\nKeywords:\nheader->insnum', 'InsertRangeChecker\nKeywords:\nif (header->insnum > MAX_INSTRUMENTS)', 'InsertRangeChecker\nKeywords:\nif (header->insnum > MAX_INSTRUMENT_NUM)', 'InsertRangeChecker\nKeywords:\nif (header->insnum >= module->MAXINSTRUMENTS)', 'InsertRangeChecker\nKeywords:\nif (header->insnum > MAX_INSTRUMENT_NUMBER)', 'InsertRangeChecker\nKeywords:\nif (header->insnum < 0)', 'InsertRangeChecker\nKeywords:\ninsnum', 'InsertRangeChecker\nKeywords:\nreturn', '']
['MutateDataType\nKeywords:\nuchar', 'MutateDataType\nKeywords:\nunsigned int', 'MutateDataType\nKeywords:\nsize_t', 'MutateDataType\nKeywords:\nunsigned', 'MutateDataType\nKeywords:\nunsigned char', 'InsertRangeChecker\nKeywords:\nlen', 'InsertRangeChecker\nKeywords:\nlen < 4', 'MutateDataType\nKeywords:\nint', 'MutateDataType\nKeywords:\nunsigned short', 'MutateDataType\nKeywords:\nu8']
['InsertReleaseResource\nKeywords:\nkfree_skb', 'InsertReleaseResource\nKeywords:\ndev_unref_skb', 'InsertReleaseResource\nKeywords:\ndev_free_skb', 'InsertReleaseResource\nKeywords:\ndev_unalloc_skb', 'InsertReleaseResource\nKeywords:\ndev_kfree_skb', 'InsertReleaseResource\nKeywords:\ndev_uninit_skb', 'InsertReleaseResource\nKeywords:\ndev_del_skb', 'InsertReleaseResource\nKeywords:\ngoto out', 'InsertReleaseResource\nKeywords:\nskb_queue_destroy', 'InsertReleaseResource\nKeywords:\nskb_queue_delete']
['InsertRangeChecker\nKeywords:\nlua_assert(0)', 'InsertConditionalExpression\nKeywords:\nlua_assert(0)', 'InsertMissedStatement\nKeywords:\nreturn 0', 'InsertMissedStatement\nKeywords:\nreturn -1', 'InsertRangeChecker\nKeywords:\nlua_assert', 'InsertNullPointerChecker\nKeywords:\ncf = NULL', 'InsertMissedStatement\nKeywords:\ncf = NULL', 'InsertMissedStatement\nKeywords:\ncf = cf->next', 'InsertMissedStatement\nKeywords:\nlua_assert', 'InsertMissedStatement\nKeywords:\ncf = cf->prev']
['InsertRangeChecker\nKeywords:\nif (off + 2 >= r_buf_size (bin->buf))', 'InsertRangeChecker\nKeywords:\nsegoff', 'InsertRangeChecker\nKeywords:\nif (off + 4 >= r_buf_size (bin->buf))', 'InsertRangeChecker\nKeywords:\nif (off + 2 > r_buf_size (bin->buf))', 'InsertRangeChecker\nKeywords:\nif (off + 2 < r_buf_size (bin->buf))', 'InsertRangeChecker\nKeywords:\nif (bin->ne_header->SegCount > 0)', 'InsertRangeChecker\nKeywords:\noff < bin->ne_header->SegCount', 'InsertRangeChecker\nKeywords:\nsegnum', 'InsertRangeChecker\nKeywords:\nreturn NULL', 'MutateLiteralExpression\nKeywords:\n* bin->alignment']
['InsertRangeChecker\nKeywords:\ndataoffset', 'InsertRangeChecker\nKeywords:\nreturn TPM_BAD_PARAMETER', 'InsertRangeChecker\nKeywords:\nhdrsize', 'InsertRangeChecker\nKeywords:\nlength', 'InsertRangeChecker\nKeywords:\nlength < sizeof(bh)', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nhdrversion', 'InsertRangeChecker\nKeywords:\ndata_offset', 'InsertRangeChecker\nKeywords:\noffset', '']
['InsertMethodInvocationExpression\nKeywords:\nsnd_pcm_oss_sync1', 'InsertReleaseResource\nKeywords:\nmutex_unlock_interruptible', 'InsertMethodInvocationExpression\nKeywords:\nmutex_lock_interruptible', 'InsertNullPointerChecker\nKeywords:\nreturn -EINVAL', 'InsertMethodInvocationExpression\nKeywords:\npcm_oss_make_ready', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nsubstream->runtime = NULL', 'InsertMethodInvocationExpression\nKeywords:\nmutex_lock', 'InsertReleaseResource\nKeywords:\nmutex_unlock', '']
['InsertReleaseResource\nKeywords:\nkfree(clt)', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (!clt)', 'InsertNullPointerChecker\nKeywords:\nif (clt)', 'InsertNullPointerChecker\nKeywords:\nclt', 'InsertReleaseResource\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfree(clt);', 'InsertNullPointerChecker\nKeywords:\nclt != NULL', 'InsertNullPointerChecker\nKeywords:\nclt == NULL', 'InsertMemset\nKeywords:\nmemset']
['Input Too Long']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\ngif_data', 'InsertNullPointerChecker\nKeywords:\ngif_data == NULL', 'InsertNullPointerChecker\nKeywords:\ngif_end', 'InsertNullPointerChecker\nKeywords:\ngif_data == 0', 'InsertNullPointerChecker\nKeywords:\nif (gif == NULL)', 'InsertNullPointerChecker\nKeywords:\ngif->frames[frame].display', 'InsertNullPointerChecker\nKeywords:\nreturn GIF_OK', 'InsertNullPointerChecker\nKeywords:\ngif->gif_data == 0', 'InsertNullPointerChecker\nKeywords:\ngif->gif_data', 'InsertNullPointerChecker\nKeywords:\nreturn']
['InsertNullPointerChecker\nKeywords:\nif (!scanner->curptr)', 'InsertRangeChecker\nKeywords:\npj_scan_syntax_err(scanner)', 'InsertRangeChecker\nKeywords:\nif (*scanner->curptr < 0)', "InsertRangeChecker\nKeywords:\nif (*scanner->curptr == '\\0')", 'InsertRangeChecker\nKeywords:\nif (*scanner->curptr >= scanner->maxptr)', 'InsertRangeChecker\nKeywords:\nif (*scanner->curptr > scanner->maxptr)', 'InsertRangeChecker\nKeywords:\nif (scanner->curptr >= scanner->maxptr)', 'InsertRangeChecker\nKeywords:\nscanner->skip_whitespace', 'InsertRangeChecker\nKeywords:\nreturn', '']
['InsertNullPointerChecker\nKeywords:\nobj->cache_buf = NULL', 'RemoveBuggyStatement\nKeywords:\ndelete', 'MutateVariable\nKeywords:\nobj->cache_buf = NULL', 'MutateVariable\nKeywords:\nobj->cache_buf = NULL;', 'InsertNullPointerChecker\nKeywords:\nobj->cache_buf', 'MutateMethodInvocationExpression\nKeywords:\ncache_buf_free', 'MutateMethodInvocationExpression\nKeywords:\nr_buf_free', 'MutateVariable\nKeywords:\nobj->cache_buf', 'MutateMethodInvocationExpression\nKeywords:\nfree_cache_buf', 'MutateMethodInvocationExpression\nKeywords:\nfree']
['InsertRangeChecker\nKeywords:\ncol >= old_len', 'InsertRangeChecker\nKeywords:\ncol >= len', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\ncol + len > old_len', 'InsertRangeChecker\nKeywords:\ncol < old_len', 'InsertMissedStatement\nKeywords:\ncol += chartabsize', 'InsertRangeChecker\nKeywords:\ncol + len >= old_len', 'InsertRangeChecker\nKeywords:\ncol >= old_len - col', 'InsertRangeChecker\nKeywords:\ncol + len < old_len', 'InsertRangeChecker\nKeywords:\ncol < len']
['InsertRangeChecker\nKeywords:\nif (instr[y].size < 29)', 'InsertRangeChecker\nKeywords:\ninstr[y].size > 29', 'InsertRangeChecker\nKeywords:\ninstr[y].size < 29', 'MutateConditionalExpression\nKeywords:\ninstr[y].size < 29', 'MutateConditionalExpression\nKeywords:\ninstr[y].size > 29', 'InsertRangeChecker\nKeywords:\nif (instr[y].size > 29)', 'InsertConditionalExpression\nKeywords:\nif (instr[y].size < 29)', 'InsertRangeChecker\nKeywords:\nif (instr[y].size <= 29)', 'InsertRangeChecker\nKeywords:\ninstr[y].size <= 29', 'MutateConditionalExpression\nKeywords:\ninstr[y].size <= 29']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\nquantum_info', 'InsertNullPointerChecker\nKeywords:\nquantum_info=NULL', 'InsertNullPointerChecker\nKeywords:\nimage', 'InsertNullPointerChecker\nKeywords:\nimage_info', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\nexception', 'InsertRangeChecker\nKeywords:\nThrowReaderException', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nimage_info==NULL', '']
['InsertConditionalExpression\nKeywords:\nconfig_changed', 'MutateConditionalExpression\nKeywords:\nconfig_changed', 'InsertConditionalExpression\nKeywords:\n!config_changed', 'MutateConditionalExpression\nKeywords:\n!config_changed', 'InsertConditionalExpression\nKeywords:\nconfig_file != NULL', 'InsertNullPointerChecker\nKeywords:\nconfig_file != NULL', 'InsertNullPointerChecker\nKeywords:\nconfig_file == NULL', 'InsertConditionalExpression\nKeywords:\nif (!config_changed)', 'RemoveBuggyStatement\nKeywords:\nconfig_changed', 'InsertConditionalExpression\nKeywords:\nif (config_changed)']
['InsertReleaseResource\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfree(priv)', 'InsertReleaseResource\nKeywords:\ngoto err_free', 'InsertReleaseResource\nKeywords:\nkfree(priv);', 'InsertMemset\nKeywords:\nmemset', 'InsertConditionalExpression\nKeywords:\nelo_broken_firmware', 'InsertMissedStatement\nKeywords:\nhid_free', 'InsertMethodInvocationExpression\nKeywords:\nelo_install_workaround', 'InsertMethodInvocationExpression\nKeywords:\nelo_install_workqueue', 'InsertMethodInvocationExpression\nKeywords:\nelo_install_ workaround']
['InsertMissedStatement\nKeywords:\nreturn -EINVAL', 'InsertMissedStatement\nKeywords:\nmsg_set_syn', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\ntsk->published = 1', 'InsertNullPointerChecker\nKeywords:\nua->lookup_node', 'InsertNullPointerChecker\nKeywords:\nua', 'InsertMethodInvocationExpression\nKeywords:\nmsg_set_syn', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\ntsk->published = 0', 'InsertMissedStatement\nKeywords:\ntsk->syn = 1']
['MutateConditionalExpression\nKeywords:\ndata != *from || from == end', 'MutateConditionalExpression\nKeywords:\nif (data != *from || from == end)', 'InsertConditionalExpression\nKeywords:\nif ((from < end) && (*from == data))', 'InsertConditionalExpression\nKeywords:\ndata != *from || from == end', 'InsertConditionalExpression\nKeywords:\nif (data != *from || from == end)', 'InsertNullPointerChecker\nKeywords:\nif (from == end)', 'MutateConditionalExpression\nKeywords:\nif (*from != data || from == end)', 'MutateConditionalExpression\nKeywords:\nif (*from != data)', 'InsertConditionalExpression\nKeywords:\nif ((from < end) && (*from != data))', 'MutateConditionalExpression\nKeywords:\nif (from != end && (*from == data))']
['InsertRangeChecker\nKeywords:\nlabels_data_count', 'MutateMethodInvocationExpression\nKeywords:\nSIVAL', 'MutateVariable\nKeywords:\nlabels_data_count', 'MutateConditionalExpression\nKeywords:\nlabels_data_count + 4', 'MutateVariable\nKeywords:\nlabels_data_count + 4', 'MutateMethodInvocationExpression\nKeywords:\nSIVAL_U32', 'MutateLiteralExpression\nKeywords:\n12 + labels_data_count', 'InsertRangeChecker\nKeywords:\nSIVAL', 'MutateConditionalExpression\nKeywords:\nlabels_data_count', 'MutateLiteralExpression\nKeywords:\n12']
['InsertConditionalExpression\nKeywords:\nsp->ts_isdiff == DIFF_INSERT', 'InsertConditionalExpression\nKeywords:\nsp->ts_isdiff == DIFF_NO', 'InsertConditionalExpression\nKeywords:\nsp->ts_isdiff == DIFF_NONE', 'InsertConditionalExpression\nKeywords:\nif (sp->ts_fidx == 0)', 'InsertConditionalExpression\nKeywords:\nsp->ts_isdiff != DIFF_NONE', 'InsertConditionalExpression\nKeywords:\nsp->ts_isdiff == DIFF_YES', 'MutateConditionalExpression\nKeywords:\nsp->ts_isdiff == DIFF_INSERT', 'InsertConditionalExpression\nKeywords:\nsp->ts_isdiff == DIFF_DELETE', 'MutateConditionalExpression\nKeywords:\nsp->ts_isdiff == DIFF_NO', 'InsertConditionalExpression\nKeywords:\nsp->ts_fidx == 0']
['InsertNullPointerChecker\nKeywords:\n!bin->segment_entries', 'InsertNullPointerChecker\nKeywords:\n!bin->ne_header', 'InsertNullPointerChecker\nKeywords:\nif (!bin)', 'InsertNullPointerChecker\nKeywords:\n!bin', 'InsertNullPointerChecker\nKeywords:\nbin == NULL', 'InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\n!bin->segments', 'InsertNullPointerChecker\nKeywords:\nbin', 'InsertNullPointerChecker\nKeywords:\nNULL', '']
['InsertReleaseResource\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfree(a)', 'InsertReleaseResource\nKeywords:\nkfree(a);', 'InsertReleaseResource\nKeywords:\ngoto out', 'InsertMemset\nKeywords:\nmemset', 'InsertReleaseResource\nKeywords:\nk free(a)', 'InsertReleaseResource\nKeywords:\nkfree (a)', 'InsertReleaseResource\nKeywords:\nfree', 'InsertReleaseResource\nKeywords:\nk free', 'InsertMemset\nKeywords:\nkfree']
["InsertRangeChecker\nKeywords:\nif (*sp == '\\0')", "InsertRangeChecker\nKeywords:\nif (*sp != '\\0')", 'InsertRangeChecker\nKeywords:\nlen', 'InsertMissedStatement\nKeywords:\nlen = 1', "InsertConditionalExpression\nKeywords:\nif (*sp == '\\0')", "InsertConditionalExpression\nKeywords:\nif (*sp == '?')", "InsertRangeChecker\nKeywords:\nif (*sp != '0')", "InsertConditionalExpression\nKeywords:\nif (*sp != '\\0')", 'InsertMissedStatement\nKeywords:\nlen = 2', "InsertRangeChecker\nKeywords:\nif (*sp == '%')"]
['InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nqfl == NULL', 'InsertNullPointerChecker\nKeywords:\ndict_unref', 'InsertReleaseResource\nKeywords:\ndict_unref', 'InsertNullPointerChecker\nKeywords:\ndict_is_null', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertMethodInvocationExpression\nKeywords:\ndict_alloc_lock', 'InsertReleaseResource\nKeywords:\ndict_free_lock', 'InsertVariable\nKeywords:\nqfl', 'InsertNullPointerChecker\nKeywords:\nqfl != NULL']
['InsertNullPointerChecker\nKeywords:\nsrc', 'InsertMethodInvocationExpression\nKeywords:\nvirStorageSourceFormat', 'InsertConditionalExpression\nKeywords:\nvirDomainDiskSourceFormat', 'InsertVariable\nKeywords:\nexpect', 'InsertNullPointerChecker\nKeywords:\nif (src)', 'InsertMethodInvocationExpression\nKeywords:\nvirBufferFormat', 'InsertConditionalExpression\nKeywords:\ndata->expect', 'InsertNullPointerChecker\nKeywords:\nif (!src)', 'InsertVariable\nKeywords:\ndata->expect', '']
['MutateConditionalExpression\nKeywords:\nhas_mbyte', 'MutateMethodInvocationExpression\nKeywords:\nmb_ptr2len', 'InsertRangeChecker\nKeywords:\nif (*lenp > 0)', 'MutateConditionalExpression\nKeywords:\n*lenp > 0', 'InsertMethodInvocationExpression\nKeywords:\nmb_ptr2len', 'RemoveBuggyStatement\nKeywords:\n*lenp -= 1', 'RemoveBuggyStatement\nKeywords:\n*lenp = 0', 'InsertRangeChecker\nKeywords:\n*lenp', 'InsertRangeChecker\nKeywords:\nlenp', '']
["InsertMissedStatement\nKeywords:\n*p++ = ' ';", "MutateControlStatement\nKeywords:\n*p++ = ' ';", 'InsertMethodInvocationExpression\nKeywords:\npj_memcpy', 'InsertRangeChecker\nKeywords:\npj_utoa', "RemoveBuggyStatement\nKeywords:\n*p++ = ' ';", 'InsertMethodInvocationExpression\nKeywords:\npj_strlcpy', 'MutateMethodInvocationExpression\nKeywords:\npj_memcpy', "InsertMissedStatement\nKeywords:\n*p++ = '", "MutateLiteralExpression\nKeywords:\n*p++ = ' ';", 'MutateMethodInvocationExpression\nKeywords:\npj_strlcpy']
['MutateMethodInvocationExpression\nKeywords:\ntask_sid_subj', 'RemoveBuggyStatement\nKeywords:\ntask_sid_subj', 'InsertNullPointerChecker\nKeywords:\ntask_sid_subj', 'InsertNullPointerChecker\nKeywords:\ntask_sid_obj(parent)', 'MutateMethodInvocationExpression\nKeywords:\ntask_sid_obj', 'InsertMethodInvocationExpression\nKeywords:\ntask_sid_subj', 'MutateVariable\nKeywords:\ntask_sid_subj(parent)', 'RemoveBuggyStatement\nKeywords:\ntask_sid_obj', 'InsertNullPointerChecker\nKeywords:\nparent', '']
['RemoveBuggyStatement\nKeywords:\nkfree(adapter)', 'RemoveBuggyStatement\nKeywords:\nkfree(adapter);', 'InsertReleaseResource\nKeywords:\nkfree(adapter)', 'InsertReleaseResource\nKeywords:\nkfree(adapter);', 'RemoveBuggyStatement\nKeywords:\nkfree', 'MutateMethodInvocationExpression\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfree', 'InsertNullPointerChecker\nKeywords:\nrsi_dev', 'RemoveBuggyStatement\nKeywords:\ndelete', '']
['InsertRangeChecker\nKeywords:\nreturn -1', 'InsertMissedStatement\nKeywords:\nreturn -1', 'InsertRangeChecker\nKeywords:\nreturn tool_num', 'InsertRangeChecker\nKeywords:\ntool_num', 'InsertMissedStatement\nKeywords:\nreturn tool_num', 'InsertNullPointerChecker\nKeywords:\nreturn -1', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nreturn -1', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\nreturn tool_num;']
['MutateMethodInvocationExpression\nKeywords:\nmb_ptr2char', 'InsertMethodInvocationExpression\nKeywords:\nmb_ptr2char_adv', 'InsertMethodInvocationExpression\nKeywords:\nmb_ptr2char', 'InsertNullPointerChecker\nKeywords:\nif (s == NULL)', 'InsertRangeChecker\nKeywords:\nmb_ptr2char_adv', 'InsertNullPointerChecker\nKeywords:\nmb_ptr2char_adv', 'InsertConditionalExpression\nKeywords:\nmb_ptr2char_adv', 'InsertCastStatement\nKeywords:\nmb_ptr2char_adv', 'InsertCastStatement\nKeywords:\nmb_ptr2char', 'InsertNullPointerChecker\nKeywords:\nif (s == NUL)']
['InsertRangeChecker\nKeywords:\nThrowReaderException', 'InsertMissedStatement\nKeywords:\ncin.file.image_offset', 'InsertRangeChecker\nKeywords:\nif (ReadBlobLong(image) < 4)', 'InsertRangeChecker\nKeywords:\ncin.file.image_offset', 'InsertRangeChecker\nKeywords:\nif (ReadBlobLong(image) != 4)', 'InsertMissedStatement\nKeywords:\ncin.file.image_offset=offset', 'InsertRangeChecker\nKeywords:\nif (ReadBlobLong(image) == 0)', 'InsertRangeChecker\nKeywords:\nif (image->endian != LSBEndian)', 'InsertRangeChecker\nKeywords:\noffset+=4', 'InsertRangeChecker\nKeywords:\nif (ReadBlobLong(image) != offset)']
['InsertConditionalExpression\nKeywords:\ngnutls_protocol_get_version(session)', 'InsertMethodInvocationExpression\nKeywords:\n_gnutls_ext_sr_recv_cs', 'InsertConditionalExpression\nKeywords:\nreturn GNUTLS_E_INVALID_SCSV', 'InsertRangeChecker\nKeywords:\ngnutls_assert', 'InsertRangeChecker\nKeywords:\ngnutls_assert_val', 'InsertConditionalExpression\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\nreturn GNUTLS_E_INVALID_SCSV', 'InsertNullPointerChecker\nKeywords:\nif (session == NULL)', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\nreturn']
['InsertNullPointerChecker\nKeywords:\nrex.reg_buf == NULL', 'InsertNullPointerChecker\nKeywords:\nif (pos == NULL)', 'InsertNullPointerChecker\nKeywords:\nreg_getline', 'InsertRangeChecker\nKeywords:\nif (mark >= rex.reg_maxline)', 'InsertNullPointerChecker\nKeywords:\npos == NULL', 'InsertRangeChecker\nKeywords:\nif (mark > rex.reg_maxline)', 'InsertNullPointerChecker\nKeywords:\nrex.reg_buf', 'InsertNullPointerChecker\nKeywords:\nrex.reg_buf != NULL', 'InsertNullPointerChecker\nKeywords:\nreturn', '']
['MutateMethodInvocationExpression\nKeywords:\nopen', 'InsertMethodInvocationExpression\nKeywords:\nopen', 'RemoveBuggyStatement\nKeywords:\nopen', 'MutateMethodInvocationExpression\nKeywords:\n__open', 'RemoveBuggyStatement\nKeywords:\nclose', 'InsertMethodInvocationExpression\nKeywords:\n__open', 'InsertMethodInvocationExpression\nKeywords:\n__archive_open', 'MutateMethodInvocationExpression\nKeywords:\nopen_safe', 'MutateMethodInvocationExpression\nKeywords:\nos_open', 'InsertConditionalExpression\nKeywords:\nopen']
['InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\ne->ctx', 'InsertNullPointerChecker\nKeywords:\nctx', 'InsertNullPointerChecker\nKeywords:\nNULL', 'InsertNullPointerChecker\nKeywords:\nreturn e', 'InsertNullPointerChecker\nKeywords:\nctx == NULL', 'InsertNullPointerChecker\nKeywords:\n!ctx', 'InsertNullPointerChecker\nKeywords:\nkfree', 'InsertNullPointerChecker\nKeywords:\nerr', '']
['InsertRangeChecker\nKeywords:\nbreak', 'InsertMissedStatement\nKeywords:\nbreak', 'InsertMissedStatement\nKeywords:\nptr += 2', 'InsertMissedStatement\nKeywords:\nptr += yanklen', 'InsertRangeChecker\nKeywords:\nif (i == 0)', 'InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nptr < oldp', 'InsertMissedStatement\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\ngoto out', 'InsertMissedStatement\nKeywords:\nptr']
['InsertRangeChecker\nKeywords:\nR_BIN_JAVA_USHORT', 'InsertRangeChecker\nKeywords:\noffset', 'InsertRangeChecker\nKeywords:\nif (offset + sz > sz)', 'InsertRangeChecker\nKeywords:\nif (offset >= sz)', 'InsertRangeChecker\nKeywords:\nreturn attr', 'InsertRangeChecker\nKeywords:\nif (offset + 2 > sz)', 'InsertRangeChecker\nKeywords:\nif (offset + sz >= sz)', 'InsertRangeChecker\nKeywords:\noffset >= sz', 'InsertRangeChecker\nKeywords:\nattr->size', 'InsertRangeChecker\nKeywords:\nsz']
['Input Too Long']
['InsertConditionalExpression\nKeywords:\nif (extent / patternLength > 10000)', 'InsertRangeChecker\nKeywords:\nif (extent / patternLength > 10000)', 'InsertConditionalExpression\nKeywords:\nqFuzzyIsNull(extent / patternLength)', 'InsertRangeChecker\nKeywords:\nif (extent / patternLength < 10000)', 'InsertConditionalExpression\nKeywords:\n!pen.isCosmetic()', 'InsertConditionalExpression\nKeywords:\nextent / patternLength > 10000', 'InsertConditionalExpression\nKeywords:\nqFuzzyIsNull', 'MutateConditionalExpression\nKeywords:\nextent / patternLength > 10000', 'InsertRangeChecker\nKeywords:\nextent / patternLength > 10000', '']
['MutateMethodInvocationExpression\nKeywords:\nmb_head_off', 'InsertRangeChecker\nKeywords:\nif (offset + spaces > ts_val)', 'InsertMethodInvocationExpression\nKeywords:\nmb_head_off', 'InsertRangeChecker\nKeywords:\nif (offset + spaces >= ts_val)', 'InsertConditionalExpression\nKeywords:\nif (offset + spaces > ts_val)', 'InsertRangeChecker\nKeywords:\nif (offset + spaces < ts_val)', 'InsertRangeChecker\nKeywords:\noffset + spaces > ts_val', 'InsertRangeChecker\nKeywords:\noffset + spaces > ts_val - offset', 'InsertRangeChecker\nKeywords:\noffset', '']
['MutateMethodInvocationExpression\nKeywords:\nMB_CHAR2LEN', 'MutateMethodInvocationExpression\nKeywords:\nMB_CHAR2LEN(c1)', 'InsertRangeChecker\nKeywords:\nlen2 < MB_CHAR2LEN(c2)', 'InsertRangeChecker\nKeywords:\nlen2 >= MB_CHAR2LEN(c2)', 'InsertRangeChecker\nKeywords:\nlen2', 'InsertRangeChecker\nKeywords:\nMB_CHAR2LEN(c1)', 'InsertRangeChecker\nKeywords:\nMB_CHAR2LEN', 'InsertRangeChecker\nKeywords:\nMB_CHAR2LEN(c2)', 'MutateVariable\nKeywords:\nlen2', 'MutateLiteralExpression\nKeywords:\nlen2']
['InsertRangeChecker\nKeywords:\nu >= line_length', 'InsertReleaseResource\nKeywords:\ngdFree', 'InsertRangeChecker\nKeywords:\nu < line_length', 'InsertMissedStatement\nKeywords:\ngdFree', 'InsertRangeChecker\nKeywords:\ngdMalloc', 'InsertNullPointerChecker\nKeywords:\ngdFree', 'InsertRangeChecker\nKeywords:\nreturn NULL', 'InsertRangeChecker\nKeywords:\nwhile', 'InsertRangeChecker\nKeywords:\ngdFree', '']
['InsertRangeChecker\nKeywords:\ngrehlen', 'InsertRangeChecker\nKeywords:\ngrehlen < 4', 'InsertRangeChecker\nKeywords:\nif (grehlen < 4)', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\ngrehlen < 2', 'MutateMethodInvocationExpression\nKeywords:\ngrehlen', 'InsertRangeChecker\nKeywords:\ngrehlen > UINT32_MAX', 'InsertRangeChecker\nKeywords:\ngoto out', 'InsertRangeChecker\nKeywords:\ngrehlen > UINT16_MAX', 'InsertVariable\nKeywords:\ngrehlen']
['InsertRangeChecker\nKeywords:\ns->tracks > INT_MAX / 4', 'InsertRangeChecker\nKeywords:\nbs->total_sectors', 'InsertRangeChecker\nKeywords:\ntracks', 'InsertRangeChecker\nKeywords:\ns->tracks > UINT_MAX / 4', 'InsertRangeChecker\nKeywords:\ntracks > INT_MAX / 4', 'InsertRangeChecker\nKeywords:\ns->tracks > INT_MAX / 3', 'InsertRangeChecker\nKeywords:\ns->total_sectors', 'InsertRangeChecker\nKeywords:\nif (s->tracks < 0)', 'InsertRangeChecker\nKeywords:\ntracks > UINT_MAX / 4', 'InsertRangeChecker\nKeywords:\ntracks > INT_MAX / 3']
['InsertRangeChecker\nKeywords:\nif (x >= lprn->nBw)', 'InsertRangeChecker\nKeywords:\nx < lprn->nBw', 'InsertRangeChecker\nKeywords:\nif (x < lprn->nBw)', 'InsertRangeChecker\nKeywords:\ngx_device_lprn_is_black', 'InsertRangeChecker\nKeywords:\nfor', 'InsertRangeChecker\nKeywords:\nx >= lprn->nBw', 'InsertRangeChecker\nKeywords:\nif (lprn->nBw < x)', 'InsertRangeChecker\nKeywords:\nif (lprn->nBw < bx)', 'InsertRangeChecker\nKeywords:\nif (lprn->nBw <= x)', 'InsertRangeChecker\nKeywords:\nlprn->nBw']
['InsertNullPointerChecker\nKeywords:\nmatch = NULL', 'InsertNullPointerChecker\nKeywords:\nname == NULL', 'InsertNullPointerChecker\nKeywords:\nname != NULL', 'InsertNullPointerChecker\nKeywords:\nmatch', 'InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nif (!match)', 'InsertNullPointerChecker\nKeywords:\nmatch = name', 'InsertNullPointerChecker\nKeywords:\nvim_free', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nname']
['MutateMethodInvocationExpression\nKeywords:\nsctp_make_reconf', 'RemoveBuggyStatement\nKeywords:\nsctp_make_reconf', 'InsertMethodInvocationExpression\nKeywords:\nsctp_make_reconf', 'MutateMethodInvocationExpression\nKeywords:\nsctp_make_reconf_chunk', 'MutateMethodInvocationExpression\nKeywords:\nsctp_make_reconf_array', 'MutateMethodInvocationExpression\nKeywords:\nsctp_make_reconf_safe', 'MutateMethodInvocationExpression\nKeywords:\nsctp_make_reconf_fast', 'MutateMethodInvocationExpression\nKeywords:\nsctp_make_reconf_len', 'MutateMethodInvocationExpression\nKeywords:\nsctp_make_reconf_multi', 'InsertRangeChecker\nKeywords:\nstream_len']
['InsertRangeChecker\nKeywords:\nThrowReaderException', 'InsertMissedStatement\nKeywords:\nThrowReaderException', 'InsertReleaseResource\nKeywords:\nRelinquishMagickMemory', 'InsertRangeChecker\nKeywords:\nimage->colors=Max', 'InsertConditionalExpression\nKeywords:\nThrowReaderException', 'InsertRangeChecker\nKeywords:\nimage->colors=max', 'InsertMissedStatement\nKeywords:\nimage->colors=0', 'InsertNullPointerChecker\nKeywords:\nimage->colors=0', 'InsertRangeChecker\nKeywords:\n ThrowReaderException', '']
['InsertRangeChecker\nKeywords:\nreturn NULL', 'InsertRangeChecker\nKeywords:\nk', 'InsertRangeChecker\nKeywords:\nk < 0', 'InsertRangeChecker\nKeywords:\ngoto out', 'InsertRangeChecker\nKeywords:\nif (k > NR_BIGINTS)', 'InsertRangeChecker\nKeywords:\nif (k >= NR_BIGINTS)', 'InsertRangeChecker\nKeywords:\nif (k > MAX_BIGINTS)', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nrv->maxwds', 'InsertRangeChecker\nKeywords:\nk > UINT32_MAX']
['MutateMethodInvocationExpression\nKeywords:\nr_set_size', 'InsertMethodInvocationExpression\nKeywords:\nr_set_size', 'InsertRangeChecker\nKeywords:\nr_set_size', 'RemoveBuggyStatement\nKeywords:\nr_set_size', 'MutateMethodInvocationExpression\nKeywords:\nr_get_size', 'InsertNullPointerChecker\nKeywords:\nr_set_size', 'MutateMethodInvocationExpression\nKeywords:\nr_size', 'InsertConditionalExpression\nKeywords:\nr_size(op)', 'InsertRangeChecker\nKeywords:\nsize', '']
['InsertRangeChecker\nKeywords:\ntailen', 'InsertRangeChecker\nKeywords:\nreturn EINVAL', 'InsertNullPointerChecker\nKeywords:\nreturn EINVAL', 'InsertMissedStatement\nKeywords:\ntailen', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\nskb', 'InsertVariable\nKeywords:\ntailen', 'InsertNullPointerChecker\nKeywords:\ntailen', '']
['InsertRangeChecker\nKeywords:\ntailen', 'InsertNullPointerChecker\nKeywords:\nreturn -EINVAL', 'InsertRangeChecker\nKeywords:\nreturn EINVAL', 'InsertNullPointerChecker\nKeywords:\nreturn EINVAL', 'InsertMissedStatement\nKeywords:\ntailen', 'InsertNullPointerChecker\nKeywords:\nreturn -ENOMEM', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\nskb', 'InsertNullPointerChecker\nKeywords:\nif (!skb)']
['MutateConditionalExpression\nKeywords:\nuser_quota_size', 'MutateConditionalExpression\nKeywords:\nmax_filesize', 'InsertConditionalExpression\nKeywords:\nuser_quota_size', 'InsertConditionalExpression\nKeywords:\nmax_filesize', 'RemoveBuggyStatement\nKeywords:\nmax_filesize', 'InsertNullPointerChecker\nKeywords:\nquota.size', 'MutateConditionalExpression\nKeywords:\nquota.size > 0', 'InsertConditionalExpression\nKeywords:\nquota.size > 0', 'InsertConditionalExpression\nKeywords:\nuser_quota_size != 0', '']
['InsertConditionalExpression\nKeywords:\nisLua(ci)', 'InsertNullPointerChecker\nKeywords:\nluaC_checkGC', 'InsertConditionalExpression\nKeywords:\nlua_isfunction', 'InsertConditionalExpression\nKeywords:\nlua_isuserdata', 'InsertConditionalExpression\nKeywords:\nluaC_checkGC', 'InsertMethodInvocationExpression\nKeywords:\nluaC_checkGC', 'InsertMethodInvocationExpression\nKeywords:\nluaG_addinfo', 'InsertMissedStatement\nKeywords:\nluaG_addinfo', 'InsertConditionalExpression\nKeywords:\nlua_ismodule', 'InsertMissedStatement\nKeywords:\nluaG_errormsg']
['MutateLiteralExpression\nKeywords:\ncount / 4', 'MutateDataType\nKeywords:\nsize_t', 'InsertRangeChecker\nKeywords:\ncount', 'MutateLiteralExpression\nKeywords:\ncount * 4', 'MutateLiteralExpression\nKeywords:\ncount', 'MutateLiteralExpression\nKeywords:\ncount % 4', 'MutateDataType\nKeywords:\nunsigned int', 'MutateDataType\nKeywords:\nunsigned long', 'InsertRangeChecker\nKeywords:\ncount < 4', 'InsertConditionalExpression\nKeywords:\ncount % 4']
['InsertRangeChecker\nKeywords:\nlen', 'InsertRangeChecker\nKeywords:\nstrlcpy', 'InsertMethodInvocationExpression\nKeywords:\nstrlcpy', 'InsertRangeChecker\nKeywords:\nSTRLEN(buf)', 'InsertRangeChecker\nKeywords:\nstrllen', 'InsertRangeChecker\nKeywords:\nstrlen', 'InsertRangeChecker\nKeywords:\nstrlen', 'InsertRangeChecker\nKeywords:\nSTRLEN', 'InsertVariable\nKeywords:\nlen', '']
['Input Too Long']
['InsertMissedStatement\nKeywords:\nsquashfs_closedir', 'InsertReleaseResource\nKeywords:\nfree', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\nsquashfs_closeir', 'InsertMissedStatement\nKeywords:\nsquashfs_opendir', 'InsertMissedStatement\nKeywords:\ndir->dir_count = 0', 'InsertRangeChecker\nKeywords:\nsquashfs_closedir', 'InsertMissedStatement\nKeywords:\nsquashfs_opendir', 'InsertMissedStatement\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nreturn NULL']
['InsertMissedStatement\nKeywords:\nsquashfs_closedir', 'InsertReleaseResource\nKeywords:\nfree', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\nsquashfs_closeir', 'InsertMissedStatement\nKeywords:\nsquashfs_opendir', 'InsertMissedStatement\nKeywords:\ndir->dir_count = 0', 'InsertRangeChecker\nKeywords:\nsquashfs_closedir', 'InsertMissedStatement\nKeywords:\nsquashfs_opendir', 'InsertMissedStatement\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nreturn NULL']
['InsertReleaseResource\nKeywords:\nkfree_skb', 'InsertMissedStatement\nKeywords:\nbreak', 'InsertMissedStatement\nKeywords:\nkfree_skb', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nbreak', 'InsertMissedStatement\nKeywords:\nkfree', 'InsertNullPointerChecker\nKeywords:\nif (!vbt)', '']
['InsertRangeChecker\nKeywords:\ngoto err_exit', 'InsertRangeChecker\nKeywords:\nfw.len', 'InsertRangeChecker\nKeywords:\nfw.len < sizeof(self->rpc)', 'InsertRangeChecker\nKeywords:\nif (sw.tid == fw.tid)', 'InsertRangeChecker\nKeywords:\nif (sw.tid != fw.tid)', 'InsertRangeChecker\nKeywords:\nfw.len > 0xFFFFU', 'InsertRangeChecker\nKeywords:\nsw.len', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nerr', 'InsertRangeChecker\nKeywords:\nreturn err']
['InsertReleaseResource\nKeywords:\nfree(cptr)', 'RemoveBuggyStatement\nKeywords:\nfree(result)', 'RemoveBuggyStatement\nKeywords:\nfree(copy)', 'MutateMethodInvocationExpression\nKeywords:\nfree(result)', 'InsertReleaseResource\nKeywords:\nfree(copy)', 'InsertNullPointerChecker\nKeywords:\nif (copy)', 'MutateMethodInvocationExpression\nKeywords:\nfree(copy)', 'InsertReleaseResource\nKeywords:\nfree(result)', 'RemoveBuggyStatement\nKeywords:\nfree(tmp)', 'MutateMethodInvocationExpression\nKeywords:\nfree']
['InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nreturn LDAP_INVALID_SYNTAX', 'InsertMissedStatement\nKeywords:\ntu->bv_len = 0', 'InsertRangeChecker\nKeywords:\ntu->bv_len', 'InsertMissedStatement\nKeywords:\nreturn LDAP_INVALID_SYNTAX', 'InsertRangeChecker\nKeywords:\nif ( x.bv_len < 2 )', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nbreak', '']
['InsertRangeChecker\nKeywords:\nreturn false', 'InsertRangeChecker\nKeywords:\nif (surface_width < 0 || surface_height < 0)', 'InsertRangeChecker\nKeywords:\nif (surface_width <= 0 || surface_height <= 0)', 'InsertConditionalExpression\nKeywords:\nif (surface_width == 0 || surface_height == 0)', 'InsertRangeChecker\nKeywords:\nsurface_width < 0 || surface_height < 0', 'InsertRangeChecker\nKeywords:\nif (surface_width == 0 || surface_height == 0)', 'InsertRangeChecker\nKeywords:\nif (surface_width > INT_MAX / surface_height)', 'InsertRangeChecker\nKeywords:\nresult_width = surface_width * surface_height', 'InsertConditionalExpression\nKeywords:\nreturn false', 'InsertRangeChecker\nKeywords:\nresult_width = surface_width * surface_height;']
['InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nreason.slen < 9', 'InsertRangeChecker\nKeywords:\npj_assert', 'InsertRangeChecker\nKeywords:\nreason.slen >= 9', 'InsertRangeChecker\nKeywords:\nreason.slen >= 8', 'InsertRangeChecker\nKeywords:\nreason.slen > 9', 'InsertRangeChecker\nKeywords:\nPJ_ASSERT', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\nreason.ptr', '']
['Input Too Long']
['MutateMethodInvocationExpression\nKeywords:\nmkdir_attr', 'InsertMethodInvocationExpression\nKeywords:\nmkdir_attr', 'RemoveBuggyStatement\nKeywords:\nmkdir_attr', 'MutateMethodInvocationExpression\nKeywords:\nmkdir', 'InsertMethodInvocationExpression\nKeywords:\nmkdir', 'MutateMethodInvocationExpression\nKeywords:\nmkdir_rw', 'InsertMethodInvocationExpression\nKeywords:\nmkdir_recursive', 'MutateMethodInvocationExpression\nKeywords:\nmkdir_r', 'MutateMethodInvocationExpression\nKeywords:\nmkdir_recursive', 'InsertMissedStatement\nKeywords:\nmkdir_attr']
['InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertRangeChecker\nKeywords:\nreturn false', 'InsertConditionalExpression\nKeywords:\nreturn false', 'InsertMissedStatement\nKeywords:\nreturn false', 'InsertConditionalExpression\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif(val)', 'InsertNullPointerChecker\nKeywords:\nif(temp)', 'InsertNullPointerChecker\nKeywords:\nval', 'InsertNullPointerChecker\nKeywords:\nreturn true']
['InsertRangeChecker\nKeywords:\nunlikely', 'InsertRangeChecker\nKeywords:\nreturn NULL', 'InsertRangeChecker\nKeywords:\nlen < 0', 'InsertRangeChecker\nKeywords:\nlen', 'InsertRangeChecker\nKeywords:\nif (len < 0)', 'InsertRangeChecker\nKeywords:\nif (size < 0)', 'InsertRangeChecker\nKeywords:\nlen < 8', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nsize', '']
['Input Too Long']
['InsertReleaseResource\nKeywords:\nDestroyImageList', 'MutateMethodInvocationExpression\nKeywords:\nDestroyImageList', 'MutateMethodInvocationExpression\nKeywords:\nWriteImages', 'InsertReleaseResource\nKeywords:\nDestroyImageInfo', 'InsertNullPointerChecker\nKeywords:\nwrite_info', 'InsertMethodInvocationExpression\nKeywords:\nDestroyImageList', 'InsertMethodInvocationExpression\nKeywords:\nWriteImageList', 'MutateMethodInvocationExpression\nKeywords:\nDestroyImageInfo', 'MutateMethodInvocationExpression\nKeywords:\nWriteImageList', 'InsertMethodInvocationExpression\nKeywords:\nWriteImages']
['MutateConditionalExpression\nKeywords:\nctx->nr_user_files', 'MutateConditionalExpression\nKeywords:\nunlikely', 'MutateMethodInvocationExpression\nKeywords:\narray_index_nospec', 'MutateConditionalExpression\nKeywords:\nunlikely(fd >= 0)', 'InsertRangeChecker\nKeywords:\nctx->nr_user_files', 'InsertRangeChecker\nKeywords:\nunlikely', 'InsertRangeChecker\nKeywords:\nctx->nr_user_files < fd', 'MutateMethodInvocationExpression\nKeywords:\narray_index', 'RemoveBuggyStatement\nKeywords:\nunlikely', '']
['InsertMethodInvocationExpression\nKeywords:\nstl_update_connects_remove_2', 'InsertConditionalExpression\nKeywords:\nif(neighbor3 == -1)', 'InsertNullPointerChecker\nKeywords:\nif(neighbor1 != NULL && neighbor2 != NULL)', 'InsertMethodInvocationExpression\nKeywords:\nstl_update_connects_remove_1', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nneighbor3 == -1', 'InsertConditionalExpression\nKeywords:\nif(neighbor3 != -1)', 'InsertNullPointerChecker\nKeywords:\nif(neighbor3 != -1)', 'InsertConditionalExpression\nKeywords:\nreturn', '']
['InsertNullPointerChecker\nKeywords:\nif (!stl) return;', 'InsertNullPointerChecker\nKeywords:\nstl->error', 'RemoveBuggyStatement\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (stl->error)', 'RemoveBuggyStatement\nKeywords:\ndelete', 'MutateReturnStatement\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nstl->error', 'InsertReleaseResource\nKeywords:\nfree', 'InsertConditionalExpression\nKeywords:\nreturn']
['Input Too Long']
['InsertReleaseResource\nKeywords:\nunregister_netdev', 'InsertMethodInvocationExpression\nKeywords:\nunregister_netdev', 'RemoveBuggyStatement\nKeywords:\nunregister_netdev', 'InsertMissedStatement\nKeywords:\nunregister_netdev', 'MoveStatement\nKeywords:\nunregister_netdev', 'InsertReleaseResource\nKeywords:\nkfree_netdev', 'InsertNullPointerChecker\nKeywords:\nif (!sp->dev)', 'InsertNullPointerChecker\nKeywords:\nif (sp->dev)', 'InsertMethodInvocationExpression\nKeywords:\nnetif_stop_queue', 'InsertNullPointerChecker\nKeywords:\nsp->dev = NULL']
['InsertReleaseResource\nKeywords:\nfree_mnt', 'InsertMethodInvocationExpression\nKeywords:\nreal_mount', 'InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertReleaseResource\nKeywords:\nfree_mount', 'InsertReleaseResource\nKeywords:\ndelete_mnt', 'InsertReleaseResource\nKeywords:\nkfree_mnt', 'InsertReleaseResource\nKeywords:\nkfree_mount', 'InsertReleaseResource\nKeywords:\nvfsmount_free', 'InsertReleaseResource\nKeywords:\nvfsmount_destroy']
['InsertMissedStatement\nKeywords:\nreq->iopoll_completed = 1', 'InsertMissedStatement\nKeywords:\nreturn -EINVAL', 'InsertMissedStatement\nKeywords:\nkiocb_set_rw_flags', 'InsertMissedStatement\nKeywords:\nreq->flags &= ~REQ_F_NOWAIT', 'InsertMissedStatement\nKeywords:\nreq->rw.iopoll_completed = 1', 'InsertMissedStatement\nKeywords:\nreq->iopoll_completed = 0', 'InsertMissedStatement\nKeywords:\nreq->flags |= REQ_F_NOWAIT', 'InsertMissedStatement\nKeywords:\nkiocb->ki_flags', 'InsertMissedStatement\nKeywords:\nreq->iopoll_completed = 1;', 'InsertMissedStatement\nKeywords:\nreq->iopoll_completed']
['InsertMethodInvocationExpression\nKeywords:\nrz_buf_read', 'InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertRangeChecker\nKeywords:\nsize', 'InsertConditionalExpression\nKeywords:\nsize != n1 + n2', 'InsertRangeChecker\nKeywords:\nsize != n1 + n2', 'MutateDataType\nKeywords:\nut32', 'InsertNullPointerChecker\nKeywords:\nif (error)', 'InsertNullPointerChecker\nKeywords:\nif (!error)', 'InsertMethodInvocationExpression\nKeywords:\nrz_buf_write', 'InsertRangeChecker\nKeywords:\nsize > n1 + n2']
['InsertNullPointerChecker\nKeywords:\ninode', 'InsertNullPointerChecker\nKeywords:\nif (!inode) return;', 'InsertMethodInvocationExpression\nKeywords:\nget_fuse_inode', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (inode == NULL)', 'InsertNullPointerChecker\nKeywords:\nif (inode)', 'InsertNullPointerChecker\nKeywords:\nif (!inode)', 'InsertMethodInvocationExpression\nKeywords:\ncheck_fuse_inode', 'InsertMethodInvocationExpression\nKeywords:\nfuse_check_inode', 'InsertMethodInvocationExpression\nKeywords:\nset_bit']
['Input Too Long']
['InsertMissedStatement\nKeywords:\npb_idx', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertReleaseResource\nKeywords:\nipf_delete', 'InsertReleaseResource\nKeywords:\nipf_unref', 'InsertMissedStatement\nKeywords:\npb_cnt = 0', 'InsertNullPointerChecker\nKeywords:\npkt', 'InsertReleaseResource\nKeywords:\nipf_free_packet', 'InsertReleaseResource\nKeywords:\nipf_free', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\npb_cnt--']
['InsertMethodInvocationExpression\nKeywords:\ng_strdup', 'InsertNullPointerChecker\nKeywords:\nkeyid', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertVariable\nKeywords:\nkeyid', 'InsertMethodInvocationExpression\nKeywords:\ng_free', 'InsertMemset\nKeywords:\nmemset', 'InsertReleaseResource\nKeywords:\ng_free', 'InsertNullPointerChecker\nKeywords:\ng_strdup', 'InsertMethodInvocationExpression\nKeywords:\nstrdup', 'InsertVariable\nKeywords:\nrecipients']
['MutateMethodInvocationExpression\nKeywords:\nbn_size - sizeof (BrushHeader)', 'InsertRangeChecker\nKeywords:\nbn_size', 'MutateConditionalExpression\nKeywords:\nbn_size - sizeof (BrushHeader)', 'InsertRangeChecker\nKeywords:\nbn_size < sizeof (BrushHeader)', 'MutateConditionalExpression\nKeywords:\nbn_size', 'MutateConditionalExpression\nKeywords:\nbn_size - sizeof (BrushHeader) > 0', 'MutateConditionalExpression\nKeywords:\nbn_size < sizeof (BrushHeader)', 'MutateMethodInvocationExpression\nKeywords:\nbn_size', 'InsertRangeChecker\nKeywords:\ng_assert', '']
['InsertNullPointerChecker\nKeywords:\nif (zis != NULL)', 'InsertNullPointerChecker\nKeywords:\nif (zis == NULL)', 'RemoveBuggyStatement\nKeywords:\nzis->removeUnderlying', 'InsertMethodInvocationExpression\nKeywords:\nzis->removeUnderlying()', 'InsertMissedStatement\nKeywords:\nzis->removeUnderlying()', 'InsertNullPointerChecker\nKeywords:\nif (zis)', 'MutateMethodInvocationExpression\nKeywords:\nzis->removeUnderlying', 'InsertNullPointerChecker\nKeywords:\nif (!zis)', 'InsertNullPointerChecker\nKeywords:\nzis', 'RemoveBuggyStatement\nKeywords:\ndelete']
['MutateMethodInvocationExpression\nKeywords:\nSTRCPY', 'RemoveBuggyStatement\nKeywords:\nSTRCPY', 'MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'MutateMethodInvocationExpression\nKeywords:\nstrncpy', 'InsertMethodInvocationExpression\nKeywords:\nstrncpy', 'InsertMethodInvocationExpression\nKeywords:\nstrlcpy', 'InsertMissedStatement\nKeywords:\nSTRCPY', 'InsertMethodInvocationExpression\nKeywords:\nvim_strlcpy', 'InsertMethodInvocationExpression\nKeywords:\nvim_strncpy', '']
['MutateConditionalExpression\nKeywords:\nmaxstackframe', 'InsertRangeChecker\nKeywords:\nframe_off', 'MutateConditionalExpression\nKeywords:\nmaxstackframe != 0', 'RemoveBuggyStatement\nKeywords:\nmaxstackframe', 'MutateConditionalExpression\nKeywords:\n>=', 'InsertRangeChecker\nKeywords:\nmaxstackframe', 'MutateConditionalExpression\nKeywords:\n<= 0', 'InsertRangeChecker\nKeywords:\nframe_off < 0', 'MutateConditionalExpression\nKeywords:\nmaxstackframe > 0', '']
['MutateConditionalExpression\nKeywords:\nwhile', 'InsertRangeChecker\nKeywords:\nwhile (vcol < want_vcol)', 'MutateConditionalExpression\nKeywords:\nvcol < want_vcol', 'InsertRangeChecker\nKeywords:\nwhile', 'InsertConditionalExpression\nKeywords:\nwhile (vcol < want_vcol)', 'InsertConditionalExpression\nKeywords:\nwhile', 'InsertRangeChecker\nKeywords:\nvcol < want_vcol', 'MutateMethodInvocationExpression\nKeywords:\nml_get_cursor()', 'MutateControlStatement\nKeywords:\nwhile', '']
['InsertRangeChecker\nKeywords:\nif (dp->pos >= dp->logicalSize)', 'MutateConditionalExpression\nKeywords:\nlen == 0', 'MutateConditionalExpression\nKeywords:\ndp->pos >= dp->logicalSize', 'InsertRangeChecker\nKeywords:\nif (dp->pos > dp->logicalSize)', 'MutateConditionalExpression\nKeywords:\nremain == 0', 'MutateConditionalExpression\nKeywords:\nlen < 0', 'MutateConditionalExpression\nKeywords:\nlen == 0 || remain == 0', 'MutateConditionalExpression\nKeywords:\nremain > len', 'MutateConditionalExpression\nKeywords:\nlen > 0', '']
['Input Too Long']
['MutateDataType\nKeywords:\nsize_t', 'InsertRangeChecker\nKeywords:\nelement->attribute_count', 'MutateVariable\nKeywords:\nint attribute_count', 'MutateVariable\nKeywords:\nattribute_count', 'MutateDataType\nKeywords:\nunsigned int', 'MutateDataType\nKeywords:\nint', 'InsertCastStatement\nKeywords:\n(unsigned int)', 'MutateLiteralExpression\nKeywords:\nattribute_count', 'MutateVariable\nKeywords:\nattribute_count+1', 'InsertCastStatement\nKeywords:\n(unsigned)']
['InsertMissedStatement\nKeywords:\nreturn -EINVAL', 'InsertMissedStatement\nKeywords:\nchain->use++', 'InsertRangeChecker\nKeywords:\nreturn -EINVAL', 'InsertMissedStatement\nKeywords:\ndesc->len = 0', 'InsertMissedStatement\nKeywords:\nchain->use = 0', 'InsertConditionalExpression\nKeywords:\nreturn -EINVAL', 'InsertMissedStatement\nKeywords:\nchain->use--', 'InsertNullPointerChecker\nKeywords:\nchain', 'InsertMissedStatement\nKeywords:\nchain->use = 0;', 'InsertMissedStatement\nKeywords:\nchain->use++ == 0']
['InsertReleaseResource\nKeywords:\nfree', 'InsertNullPointerChecker\nKeywords:\nconn->use_tls = false', 'InsertNullPointerChecker\nKeywords:\nconn->default_exportname', 'InsertConditionalExpression\nKeywords:\nconn->structured_replies = true', 'InsertConditionalExpression\nKeywords:\nconn->structured_replies', 'InsertMissedStatement\nKeywords:\nconn->use_tls = false', 'InsertMissedStatement\nKeywords:\ncontinue', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\ncontinue', 'InsertMissedStatement\nKeywords:\ndelete']
['MutateConditionalExpression\nKeywords:\nVALID_BOTLINE', 'InsertConditionalExpression\nKeywords:\ncurwin->w_valid & VALID_TOPLINE', 'MutateConditionalExpression\nKeywords:\nVALID_BOTLINE_AP', 'InsertConditionalExpression\nKeywords:\nVALID_BOTLINE', 'InsertConditionalExpression\nKeywords:\nvalid_botline', 'MutateControlStatement\nKeywords:\nVALID_BOTLINE', 'MutateMethodInvocationExpression\nKeywords:\nvalid_botline', 'InsertConditionalExpression\nKeywords:\nVALID_BOTLINE_AP', 'MutateConditionalExpression\nKeywords:\nVALID_TOPLINE', '']
['MutateConditionalExpression\nKeywords:\nisalpha(PTR2CHAR(path_end))', 'InsertConditionalExpression\nKeywords:\nisalpha(PTR2CHAR(path_end))', 'MutateConditionalExpression\nKeywords:\nisalpha', 'MutateConditionalExpression\nKeywords:\nisalpha(PTR2CHAR(*path_end))', 'InsertConditionalExpression\nKeywords:\nisalpha', 'InsertConditionalExpression\nKeywords:\nisalpha(PTR2CHAR(*path_end))', 'InsertNullPointerChecker\nKeywords:\npath_end', 'MutateConditionalExpression\nKeywords:\n!isalpha', 'InsertConditionalExpression\nKeywords:\npath_end[1] != NUL', 'InsertNullPointerChecker\nKeywords:\npath_end == buf']
['InsertRangeChecker\nKeywords:\nif (vertexIndex<maxVertices)', 'InsertRangeChecker\nKeywords:\nmaxVertices', 'InsertConditionalExpression\nKeywords:\nif (vertexIndex<maxVertices)', 'InsertRangeChecker\nKeywords:\nvertexIndex<maxVertices', 'InsertRangeChecker\nKeywords:\nvertexIndex>=0', 'MutateConditionalExpression\nKeywords:\nvertexIndex<maxVertices', 'MutateConditionalExpression\nKeywords:\ngroupCode', 'MutateConditionalExpression\nKeywords:\nmaxVertices', 'MutateConditionalExpression\nKeywords:\nvertexIndex>=0', '']
['InsertMissedStatement\nKeywords:\nset_page_dirty', 'InsertMemset\nKeywords:\nmemset', 'InsertReleaseResource\nKeywords:\nput_page', 'InsertNullPointerChecker\nKeywords:\nreturn err', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertReleaseResource\nKeywords:\nput_page(page)', 'InsertNullPointerChecker\nKeywords:\nreturn EINVAL', 'InsertNullPointerChecker\nKeywords:\nkfree', 'InsertNullPointerChecker\nKeywords:\nif (err)', '']
['MutateMethodInvocationExpression\nKeywords:\nAcquireQuantumMemory', 'MutateMethodInvocationExpression\nKeywords:\nMagickMax', 'InsertNullPointerChecker\nKeywords:\ncolormap_index', 'InsertCastStatement\nKeywords:\n(ssize_t)', 'InsertMethodInvocationExpression\nKeywords:\nMagickMax', 'MutateMethodInvocationExpression\nKeywords:\nAcquireMagickMemory', 'InsertMethodInvocationExpression\nKeywords:\nAcquireQuantumMemory', 'InsertMemset\nKeywords:\nmemset', 'InsertRangeChecker\nKeywords:\nimage->colors', 'MutateMethodInvocationExpression\nKeywords:\nMagickMin']
['MutateConditionalExpression\nKeywords:\nSNDRV_CTL_ELEM_ID_NAME_MAXLEN - 1', 'MutateLiteralExpression\nKeywords:\nSNDRV_CTL_ELEM_ID_NAME_MAXLEN - 1', 'InsertRangeChecker\nKeywords:\nSNDRV_CTL_ELEM_ID_NAME_MAXLEN', 'MutateControlStatement\nKeywords:\nSNDRV_CTL_ELEM_ID_NAME_MAXLEN - 1', 'MutateLiteralExpression\nKeywords:\nSNDRV_CTL_ELEM_ID_NAME_MAXLEN', 'InsertRangeChecker\nKeywords:\nSNDRV_CTL_ELEM_ID_NAME_MAXLEN - 1', 'MutateControlStatement\nKeywords:\nSNDRV_CTL_ELEM_ID_NAME_MAXLEN', 'MutateConditionalExpression\nKeywords:\nSNDRV_CTL_ELEM_ID_NAME_MAXLEN', 'MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'MutateMethodInvocationExpression\nKeywords:\nstrlen']
['InsertRangeChecker\nKeywords:\nreturn FAIL', 'InsertRangeChecker\nKeywords:\nif (extra == 0)', 'InsertMissedStatement\nKeywords:\nextra += 5', 'InsertRangeChecker\nKeywords:\nif (extra >= 5)', 'InsertRangeChecker\nKeywords:\nif (extra < 5)', 'InsertRangeChecker\nKeywords:\nextra', 'InsertRangeChecker\nKeywords:\nextra += 5', 'InsertRangeChecker\nKeywords:\nif (extra > 0)', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertConditionalExpression\nKeywords:\nextra']
['InsertMissedStatement\nKeywords:\nbadusage', 'InsertMissedStatement\nKeywords:\ngoto done', 'InsertMissedStatement\nKeywords:\nbadusage()', 'InsertMethodInvocationExpression\nKeywords:\nbadusage', 'InsertConditionalExpression\nKeywords:\nlist_codecs', 'InsertConditionalExpression\nKeywords:\ncmdopts->help', 'InsertReleaseResource\nKeywords:\ngoto done', 'InsertRangeChecker\nKeywords:\ngoto done', 'InsertConditionalExpression\nKeywords:\nbadusage', 'InsertRangeChecker\nKeywords:\nbadusage']
['MutateMethodInvocationExpression\nKeywords:\nmemcpy', 'MutateMethodInvocationExpression\nKeywords:\nstrncpy', 'InsertRangeChecker\nKeywords:\nnbytes', 'MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'RemoveBuggyStatement\nKeywords:\nmemcpy', 'MutateMethodInvocationExpression\nKeywords:\nkzalloc', 'MutateMethodInvocationExpression\nKeywords:\nkmemcpy', 'InsertMemset\nKeywords:\nmemset', 'MutateMethodInvocationExpression\nKeywords:\nstrlen', '']
['MutateMethodInvocationExpression\nKeywords:\nmemcpy', 'MutateMethodInvocationExpression\nKeywords:\nstrncpy', 'InsertRangeChecker\nKeywords:\nnbytes', 'MutateMethodInvocationExpression\nKeywords:\nkzalloc', 'MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'RemoveBuggyStatement\nKeywords:\nmemcpy', 'InsertMemset\nKeywords:\nmemset', 'MutateMethodInvocationExpression\nKeywords:\nstrlen', 'InsertMethodInvocationExpression\nKeywords:\nkzalloc', '']
['InsertRangeChecker\nKeywords:\nnparams', 'InsertNullPointerChecker\nKeywords:\nif(!nparams)', 'InsertRangeChecker\nKeywords:\nif(nparams < 0)', 'InsertRangeChecker\nKeywords:\nreturn SQ_ERROR', 'InsertVariable\nKeywords:\n_thread(o)->_roottable', 'InsertRangeChecker\nKeywords:\nif(nparams < 1)', 'InsertRangeChecker\nKeywords:\nif(nparams > 0)', 'InsertRangeChecker\nKeywords:\nif(nparams < 2)', 'InsertRangeChecker\nKeywords:\nif(nparams<0)', 'InsertNullPointerChecker\nKeywords:\nnparams']
['MutateDataType\nKeywords:\ngchar', 'MutateDataType\nKeywords:\nsize_t', 'MutateDataType\nKeywords:\nunsigned char', 'InsertVariable\nKeywords:\nbuffer', 'InsertRangeChecker\nKeywords:\nsize', 'InsertMemset\nKeywords:\nmemset', 'MutateDataType\nKeywords:\nchar', 'MutateDataType\nKeywords:\ngsize', 'MutateDataType\nKeywords:\ngint', 'MutateDataType\nKeywords:\nconst unsigned char']
['InsertRangeChecker\nKeywords:\nif (die->count >= abbrev->count)', 'InsertRangeChecker\nKeywords:\ndie->count >= abbrev->count', 'InsertNullPointerChecker\nKeywords:\nif (die->count == 0)', 'InsertNullPointerChecker\nKeywords:\nif (!die->count)', 'InsertNullPointerChecker\nKeywords:\nif (!abbrev->count)', 'InsertNullPointerChecker\nKeywords:\ndie->count == 0', 'InsertNullPointerChecker\nKeywords:\nif (!die->count) return NULL;', 'InsertNullPointerChecker\nKeywords:\nif (!die->count) return;', 'InsertNullPointerChecker\nKeywords:\ndie->attr_values[i] = NULL', 'InsertNullPointerChecker\nKeywords:\nreturn NULL']
['InsertNullPointerChecker\nKeywords:\nreturn nullptr', 'InsertNullPointerChecker\nKeywords:\nif (id.empty())', 'InsertNullPointerChecker\nKeywords:\nif (id == "")', 'InsertNullPointerChecker\nKeywords:\nreturn {}', 'InsertNullPointerChecker\nKeywords:\nif (!id.empty())', 'InsertVariable\nKeywords:\nidInfoMap', 'InsertMethodInvocationExpression\nKeywords:\ncheckId', 'InsertConditionalExpression\nKeywords:\nif (id.empty())', 'InsertNullPointerChecker\nKeywords:\nreturn', '']
['MutateMethodInvocationExpression\nKeywords:\nstrncpy', 'InsertMethodInvocationExpression\nKeywords:\nstrncpy', 'InsertMethodInvocationExpression\nKeywords:\nsnprintf', 'MutateMethodInvocationExpression\nKeywords:\nsnprintf', 'MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'RemoveBuggyStatement\nKeywords:\nstrcpy', 'MutateMethodInvocationExpression\nKeywords:\nstrdup', 'RemoveBuggyStatement\nKeywords:\nstrncpy', 'MutateMethodInvocationExpression\nKeywords:\nstrcpy', 'InsertMethodInvocationExpression\nKeywords:\nstrlcpy']
['InsertMethodInvocationExpression\nKeywords:\nedit_putchar', 'InsertRangeChecker\nKeywords:\ncol < 0', 'InsertRangeChecker\nKeywords:\ncol', 'InsertMissedStatement\nKeywords:\nedit_putchar', 'InsertMethodInvocationExpression\nKeywords:\ncursor_on', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nedit_getchar', 'InsertVariable\nKeywords:\ncurwin', 'InsertVariable\nKeywords:\ncol', 'InsertConditionalExpression\nKeywords:\nedit_putchar']
['InsertMissedStatement\nKeywords:\nbuf->page = page', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\nbuf->page = NULL', 'InsertNullPointerChecker\nKeywords:\nbuf->page', 'InsertMissedStatement\nKeywords:\nbuf->page = NULL', 'InsertNullPointerChecker\nKeywords:\nbuf->ops = NULL', 'InsertNullPointerChecker\nKeywords:\nbuf->page = page', 'InsertNullPointerChecker\nKeywords:\nreturn 0', 'InsertMissedStatement\nKeywords:\nbuf->ops = NULL', 'InsertMissedStatement\nKeywords:\nbuf->page']
['InsertNullPointerChecker\nKeywords:\nbuf->page', 'InsertNullPointerChecker\nKeywords:\nbuf->page = NULL', 'InsertMissedStatement\nKeywords:\nbuf->page = NULL', 'InsertMissedStatement\nKeywords:\nbuf->page = page', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\nbuf->offset', 'InsertReleaseResource\nKeywords:\nkfree_page', 'InsertNullPointerChecker\nKeywords:\nbuf->offset', 'InsertNullPointerChecker\nKeywords:\nif (!buf)', 'InsertMissedStatement\nKeywords:\nbuf->offset = 0']
['Input Too Long']
['MutateMethodInvocationExpression\nKeywords:\nva2pa', 'InsertMethodInvocationExpression\nKeywords:\nva2pa', 'RemoveBuggyStatement\nKeywords:\nva2pa', 'InsertConditionalExpression\nKeywords:\nmaps_index', 'InsertNullPointerChecker\nKeywords:\nmaps', 'InsertNullPointerChecker\nKeywords:\nmaps_index', 'InsertRangeChecker\nKeywords:\nva2pa', 'MutateMethodInvocationExpression\nKeywords:\npa2pa', 'InsertCastStatement\nKeywords:\n(ut64)', 'InsertRangeChecker\nKeywords:\npa']
['InsertMissedStatement\nKeywords:\nadd_interrupt_bench', 'InsertMemset\nKeywords:\nmemset', 'InsertRangeChecker\nKeywords:\nadd_interrupt_bench', 'InsertConditionalExpression\nKeywords:\nadd_interrupt_bench', 'InsertReleaseResource\nKeywords:\nfast_mix_free', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertReleaseResource\nKeywords:\nfast_pool_free', 'InsertReleaseResource\nKeywords:\nfast_mix', 'InsertReleaseResource\nKeywords:\nfast_mix_destroy', 'InsertConditionalExpression\nKeywords:\nif (cycles == 0)']
['InsertMissedStatement\nKeywords:\nscheduler_tick', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\nscheduler_tick()', 'InsertReleaseResource\nKeywords:\nkfree_task_struct', 'InsertReleaseResource\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfree_task', 'InsertNullPointerChecker\nKeywords:\ncurrent', 'InsertReleaseResource\nKeywords:\nkfree_task_array', 'InsertNullPointerChecker\nKeywords:\nif (!p)', 'InsertNullPointerChecker\nKeywords:\nif (p)']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\npols[0]', 'InsertReleaseResource\nKeywords:\nxfrm_pols_put', 'InsertNullPointerChecker\nKeywords:\nif (!pols[0])', 'InsertNullPointerChecker\nKeywords:\n!pols[0]', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\npols[0] = NULL', 'InsertMethodInvocationExpression\nKeywords:\nxfrm_pols_put', 'InsertConditionalExpression\nKeywords:\nIS_ERR(pols[0])', 'InsertNullPointerChecker\nKeywords:\nif (pols[0])', 'InsertNullPointerChecker\nKeywords:\nreturn 0']
['MutateLiteralExpression\nKeywords:\n0x%08lX', 'InsertReleaseResource\nKeywords:\nfree_netdev', 'RemoveBuggyStatement\nKeywords:\nndev->mem_start', 'InsertMemset\nKeywords:\nmemset', 'MutateLiteralExpression\nKeywords:\n%08lX', 'RemoveBuggyStatement\nKeywords:\ndev_info', 'InsertReleaseResource\nKeywords:\nfree_netdev(ndev)', 'InsertReleaseResource\nKeywords:\ngoto error', 'RemoveBuggyStatement\nKeywords:\nmemset', 'MutateLiteralExpression\nKeywords:\nmem_start']
['InsertMissedStatement\nKeywords:\nusage(stderr)', 'InsertMethodInvocationExpression\nKeywords:\nmnt_context_set_mflags', 'InsertMissedStatement\nKeywords:\nmnt_context_set_mflags', 'InsertMissedStatement\nKeywords:\nusage', 'InsertMethodInvocationExpression\nKeywords:\nmnt_context_set_optsmode', 'InsertMissedStatement\nKeywords:\nmnt_context_set_optsmode', 'InsertReleaseResource\nKeywords:\nmnt_context_set_mflags', 'InsertMethodInvocationExpression\nKeywords:\nmount_context_set_mflags', 'InsertMethodInvocationExpression\nKeywords:\nusage(stderr)', 'InsertMethodInvocationExpression\nKeywords:\nmnt_context_set_options']
['InsertMethodInvocationExpression\nKeywords:\nga_grow', 'MutateMethodInvocationExpression\nKeywords:\nga_grow', 'InsertNullPointerChecker\nKeywords:\ngap != NULL', 'InsertConditionalExpression\nKeywords:\ngap != NULL && gap->ga_len > 0', 'InsertConditionalExpression\nKeywords:\ngap != NULL && gap->ga_len >= idx', 'MutateConditionalExpression\nKeywords:\ngap != NULL', 'MutateConditionalExpression\nKeywords:\ngap->ga_len > idx', 'MutateConditionalExpression\nKeywords:\ngap->ga_len >= idx', 'InsertConditionalExpression\nKeywords:\ngap != NULL', 'InsertVariable\nKeywords:\ngap']
['InsertRangeChecker\nKeywords:\ncontinue', 'InsertMissedStatement\nKeywords:\ncontinue', 'InsertConditionalExpression\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nreturn -1', 'InsertNullPointerChecker\nKeywords:\ncontinue', 'InsertMissedStatement\nKeywords:\nreturn -1', 'InsertMissedStatement\nKeywords:\np_ek', 'InsertRangeChecker\nKeywords:\nlen < 3', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nbreak']
['MutateLiteralExpression\nKeywords:\n%.*s', 'InsertMethodInvocationExpression\nKeywords:\ntor_escape_string', 'InsertNullPointerChecker\nKeywords:\ntok->n_args', 'InsertConditionalExpression\nKeywords:\nescaped', 'InsertReleaseResource\nKeywords:\ntor_free', 'InsertMethodInvocationExpression\nKeywords:\ntor_escape', 'InsertNullPointerChecker\nKeywords:\nif (!tok)', 'RemoveBuggyStatement\nKeywords:\nescaped', 'InsertNullPointerChecker\nKeywords:\ntok->args[2]', 'InsertNullPointerChecker\nKeywords:\ntok->args[0]']
['InsertNullPointerChecker\nKeywords:\ns', 'InsertNullPointerChecker\nKeywords:\nif (!s)', 'InsertNullPointerChecker\nKeywords:\nif (s)', 'InsertNullPointerChecker\nKeywords:\ns && r', 'InsertNullPointerChecker\nKeywords:\ns == NULL', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\ngoto out', 'InsertNullPointerChecker\nKeywords:\ntgt->cname', 'InsertNullPointerChecker\nKeywords:\ns || r', 'InsertNullPointerChecker\nKeywords:\ntgt']
['InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nreturn -2', 'InsertRangeChecker\nKeywords:\nserial', 'InsertRangeChecker\nKeywords:\nsnprintf', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nserial < 0', 'InsertRangeChecker\nKeywords:\nreturn -1', 'InsertNullPointerChecker\nKeywords:\ncontinue', 'InsertNullPointerChecker\nKeywords:\ncert', '']
['InsertMissedStatement\nKeywords:\nputcmdline(\'"\', TRUE)', 'InsertMissedStatement\nKeywords:\nputcmdline(\'"\', FALSE)', 'InsertVariable\nKeywords:\nccline', 'InsertMethodInvocationExpression\nKeywords:\nputcmdline', 'InsertMissedStatement\nKeywords:\nputcmdline("\'", TRUE)', 'InsertConditionalExpression\nKeywords:\nif (c == ESC)', 'InsertConditionalExpression\nKeywords:\ncmdline_star', 'InsertMissedStatement\nKeywords:\nputcmdline(\'"', 'InsertConditionalExpression\nKeywords:\ncmdline_star > 0', 'InsertVariable\nKeywords:\nextra_char']
['InsertNullPointerChecker\nKeywords:\nreturn NULL', 'RemoveBuggyStatement\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nqo->fixups', 'MutateReturnStatement\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nqo', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (qo)', 'RemoveBuggyStatement\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nif (!qo)', '']
['InsertNullPointerChecker\nKeywords:\nphp_snmp_object_handlers.clone_obj', 'InsertConditionalExpression\nKeywords:\nphp_snmp_object_handlers.has_property', 'InsertMissedStatement\nKeywords:\nphp_snmp_object_handlers.set_properties', 'InsertMethodInvocationExpression\nKeywords:\nphp_snmp_object_handlers.set_properties', 'InsertMethodInvocationExpression\nKeywords:\nzend_hash_init', 'InsertMissedStatement\nKeywords:\nphp_snmp_object_handlers.clone_obj', 'InsertNullPointerChecker\nKeywords:\nphp_snmp_object_handlers.get_properties', 'InsertMethodInvocationExpression\nKeywords:\nphp_snmp_object_handlers.clone_obj', 'InsertMissedStatement\nKeywords:\nzend_hash_init', 'InsertMethodInvocationExpression\nKeywords:\nphp_snmp_set_property']
['Input Too Long']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\nmixer', 'InsertNullPointerChecker\nKeywords:\nif (mixer)', 'InsertNullPointerChecker\nKeywords:\nif (!mixer)', 'InsertMethodInvocationExpression\nKeywords:\ndelete[] audioDriverName', 'InsertReleaseResource\nKeywords:\ndelete[] audioDriverName', 'RemoveBuggyStatement\nKeywords:\ndelete mixer', 'MoveStatement\nKeywords:\ndelete[] audioDriverName', 'RemoveBuggyStatement\nKeywords:\ndelete[] mixer', 'InsertNullPointerChecker\nKeywords:\ndelete[] mixer', 'InsertNullPointerChecker\nKeywords:\ndelete mixer']
['MutateMethodInvocationExpression\nKeywords:\nvirMediatedDeviceTypeFree', 'InsertReleaseResource\nKeywords:\nvirMediatedDeviceTypeFree', 'RemoveBuggyStatement\nKeywords:\nvirMediatedDeviceTypeFree', 'InsertMethodInvocationExpression\nKeywords:\nvirMediatedDeviceTypeFree', 'InsertNullPointerChecker\nKeywords:\nvirMediatedDeviceTypeFree', 'InsertMissedStatement\nKeywords:\nvirMediatedDeviceTypeFree', 'MutateMethodInvocationExpression\nKeywords:\nVIR_FREE', 'MutateMethodInvocationExpression\nKeywords:\nvirMediatedDeviceTypeRelease', 'MutateMethodInvocationExpression\nKeywords:\nvirMediatedDeviceTypeAlloc', 'MutateMethodInvocationExpression\nKeywords:\nfree']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\nif (prog == NULL)', 'RemoveBuggyStatement\nKeywords:\npstmlist', 'InsertNullPointerChecker\nKeywords:\nif (prog != NULL)', 'InsertNullPointerChecker\nKeywords:\nif (prog)', 'InsertNullPointerChecker\nKeywords:\nif (!prog)', 'MutateMethodInvocationExpression\nKeywords:\npstmlist', 'InsertNullPointerChecker\nKeywords:\n!prog', 'InsertNullPointerChecker\nKeywords:\nif (!prog) return;', 'InsertNullPointerChecker\nKeywords:\nprog', 'InsertNullPointerChecker\nKeywords:\nreturn']
['InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\npriv', 'InsertMethodInvocationExpression\nKeywords:\ncalloc', 'InsertRangeChecker\nKeywords:\nreturn NULL', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nwidth', 'InsertVariable\nKeywords:\nsurfaceData', 'InsertVariable\nKeywords:\npriv', '']
['Input Too Long']
['InsertConditionalExpression\nKeywords:\nluaK_indexed', 'InsertMissedStatement\nKeywords:\nluaK_indexed', 'InsertMissedStatement\nKeywords:\ncodestring', 'InsertMethodInvocationExpression\nKeywords:\nluaK_indexed', 'InsertConditionalExpression\nKeywords:\nluaL_checktype', 'InsertRangeChecker\nKeywords:\nluaK_indexed', 'InsertRangeChecker\nKeywords:\nluaL_error', 'InsertRangeChecker\nKeywords:\nluaL_checktype', 'InsertNullPointerChecker\nKeywords:\nreturn', '']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nsize', 'InsertNullPointerChecker\nKeywords:\nreturn NULL', 'InsertMethodInvocationExpression\nKeywords:\nkzalloc', 'InsertMethodInvocationExpression\nKeywords:\nkcalloc', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\nsize', 'InsertNullPointerChecker\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\nreturn NULL', 'InsertReleaseResource\nKeywords:\nkfree', 'InsertMethodInvocationExpression\nKeywords:\nkmemset']
['InsertRangeChecker\nKeywords:\nnext_offset + req_size > ksize(*sfa)', 'MutateConditionalExpression\nKeywords:\nreq_size', 'MutateConditionalExpression\nKeywords:\nMAX_ACTIONS_BUFSIZE - next_offset', 'InsertRangeChecker\nKeywords:\nnew_acts_size', 'MutateConditionalExpression\nKeywords:\nksize(*sfa) < req_size', 'InsertRangeChecker\nKeywords:\nreq_size', 'MutateConditionalExpression\nKeywords:\nMAX_ACTIONS_BUFSIZE', 'MutateConditionalExpression\nKeywords:\nmax', 'MutateConditionalExpression\nKeywords:\n<=', '']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nThrowReaderException', 'InsertMissedStatement\nKeywords:\ncin.file.image_offset', 'InsertRangeChecker\nKeywords:\nif (ReadBlobLong(image) < 4)', 'InsertRangeChecker\nKeywords:\nif (ReadBlobLong(image) != 4)', 'InsertRangeChecker\nKeywords:\ncin.file.image_offset', 'InsertMissedStatement\nKeywords:\ncin.file.image_offset=offset', 'InsertRangeChecker\nKeywords:\nif (ReadBlobLong(image) == 0)', 'InsertRangeChecker\nKeywords:\nif (image->endian != LSBEndian)', 'InsertRangeChecker\nKeywords:\noffset+=4', 'InsertRangeChecker\nKeywords:\nif (ReadBlobLong(image) != offset)']
['InsertRangeChecker\nKeywords:\nreturn FAIL', 'InsertNullPointerChecker\nKeywords:\nreturn FAIL', 'InsertRangeChecker\nKeywords:\nslang->sl_fbyts', 'InsertRangeChecker\nKeywords:\nspell_soundfold', 'InsertRangeChecker\nKeywords:\nslang->sl_flen', 'InsertRangeChecker\nKeywords:\nspell_check_sugtree', 'InsertRangeChecker\nKeywords:\nfor', 'InsertMissedStatement\nKeywords:\nslang->sl_fidxs', 'InsertRangeChecker\nKeywords:\nslang->sl_fcount', '']
['InsertConditionalExpression\nKeywords:\ncollectionFilter.isSharded()', 'InsertMethodInvocationExpression\nKeywords:\nCollectionShardingState::get', 'InsertMethodInvocationExpression\nKeywords:\ngetCollectionFilter', 'InsertVariable\nKeywords:\ncollectionFilter', 'InsertNullPointerChecker\nKeywords:\ncollectionFilter', 'InsertNullPointerChecker\nKeywords:\ncoll', 'InsertNullPointerChecker\nKeywords:\nif (coll)', 'InsertNullPointerChecker\nKeywords:\nif (!coll)', 'InsertConditionalExpression\nKeywords:\ncollectionFilter.isSharded', 'InsertNullPointerChecker\nKeywords:\nif (!collectionFilter)']
['InsertNullPointerChecker\nKeywords:\nblock->next', 'InsertNullPointerChecker\nKeywords:\nif (!block->next)', 'InsertNullPointerChecker\nKeywords:\nif (block->next)', 'RemoveBuggyStatement\nKeywords:\nQLIST_REMOVE', 'InsertNullPointerChecker\nKeywords:\nQLIST_REMOVE_SAFE', 'InsertNullPointerChecker\nKeywords:\nblock->next != NULL', 'InsertNullPointerChecker\nKeywords:\nblock', 'InsertNullPointerChecker\nKeywords:\nif (block)', 'InsertNullPointerChecker\nKeywords:\nif (!block)', 'InsertNullPointerChecker\nKeywords:\nreturn']
['MutateMethodInvocationExpression\nKeywords:\ns->edid_blob[s->reg]', 'RemoveBuggyStatement\nKeywords:\ns->edid_blob[s->reg]', 'MutateLiteralExpression\nKeywords:\n0', 'InsertRangeChecker\nKeywords:\nvalue', 'InsertRangeChecker\nKeywords:\nif', 'InsertRangeChecker\nKeywords:\nreturn', 'MutateDataType\nKeywords:\nunsigned int', 'MutateVariable\nKeywords:\nedid_blob', 'MutateMethodInvocationExpression\nKeywords:\nread', '']
['InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nmsg_size', 'InsertRangeChecker\nKeywords:\nif (fd >= ctx->fds_size)', 'InsertRangeChecker\nKeywords:\nnum_fds', 'InsertRangeChecker\nKeywords:\nnum_queues', 'InsertMemset\nKeywords:\nmemset', 'InsertRangeChecker\nKeywords:\nctx->msg.size', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (!pdev)', '']
['InsertRangeChecker\nKeywords:\nmsg.payload.inflight.size', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nmsg_size', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nnuma_node', 'InsertRangeChecker\nKeywords:\nctx->msg.size', 'InsertNullPointerChecker\nKeywords:\ndev->inflight_info', 'InsertRangeChecker\nKeywords:\nmsg.size', '']
['Input Too Long']
['MutateDataType\nKeywords:\nint', 'InsertRangeChecker\nKeywords:\nsrc_width', 'MutateDataType\nKeywords:\nunsigned int', 'MutateDataType\nKeywords:\nunsigned', 'MutateDataType\nKeywords:\nsize_t', 'InsertRangeChecker\nKeywords:\nreturn', 'MutateDataType\nKeywords:\nuint8_t', 'MutateDataType\nKeywords:\nuint32_t', 'MutateLiteralExpression\nKeywords:\nsrc_width', 'InsertRangeChecker\nKeywords:\nreturn -1']
['InsertRangeChecker\nKeywords:\nmemset', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\nend_data == NULL', 'InsertMissedStatement\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\nend_data', 'InsertRangeChecker\nKeywords:\ndata_size', 'InsertRangeChecker\nKeywords:\nend_data < data', 'InsertRangeChecker\nKeywords:\nend_data - data < 8', 'InsertRangeChecker\nKeywords:\nemprintf2', '']
['InsertRangeChecker\nKeywords:\nio_size', 'InsertRangeChecker\nKeywords:\ngoto done', 'InsertConditionalExpression\nKeywords:\nreq->flags & REQ_F_NOWAIT', 'InsertMissedStatement\nKeywords:\ngoto done', 'InsertRangeChecker\nKeywords:\nio_iter_revert', 'InsertConditionalExpression\nKeywords:\nreq->flags & REQ_F_ISREG', 'InsertRangeChecker\nKeywords:\nif (io_size < 0)', 'InsertRangeChecker\nKeywords:\nif (io_size <= 0)', 'InsertRangeChecker\nKeywords:\niovec_size', '']
['InsertRangeChecker\nKeywords:\nwhile', 'MutateMethodInvocationExpression\nKeywords:\nml_get_curline', 'MutateMethodInvocationExpression\nKeywords:\nlisp_match', 'InsertRangeChecker\nKeywords:\nwhile (*that && col)', 'InsertRangeChecker\nKeywords:\nwhile (*that)', 'InsertRangeChecker\nKeywords:\nwhile (*that && amount)', "InsertConditionalExpression\nKeywords:\nif (*that == '(' && amount)", 'InsertRangeChecker\nKeywords:\namount', 'MutateControlStatement\nKeywords:\nwhile', '']
['RemoveBuggyStatement\nKeywords:\ndev_kfree_skb', 'MutateMethodInvocationExpression\nKeywords:\ndev_kfree_skb', 'InsertReleaseResource\nKeywords:\ndev_kfree_skb', 'InsertReleaseResource\nKeywords:\ncan_put_echo_skb', 'RemoveBuggyStatement\nKeywords:\nkfree_skb', 'InsertNullPointerChecker\nKeywords:\ndev_kfree_skb', 'InsertNullPointerChecker\nKeywords:\nif (skb)', 'InsertReleaseResource\nKeywords:\nkfree_skb', 'InsertReleaseResource\nKeywords:\nkfree_skb(skb)', 'RemoveBuggyStatement\nKeywords:\ndelete']
['Input Too Long']
['InsertRangeChecker\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\nsize < off', 'InsertRangeChecker\nKeywords:\nr_buf_size', 'InsertRangeChecker\nKeywords:\nsize < off + bits', 'InsertRangeChecker\nKeywords:\nreturn NULL', 'MutateDataType\nKeywords:\nut64', 'InsertRangeChecker\nKeywords:\nsize <= 0', 'InsertRangeChecker\nKeywords:\nsize < 0', 'InsertRangeChecker\nKeywords:\nif (!size)', 'InsertVariable\nKeywords:\nsize']
['InsertReleaseResource\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfree(state)', 'InsertReleaseResource\nKeywords:\nkfifo_free', 'InsertMemset\nKeywords:\nkfree', 'InsertMemset\nKeywords:\nmemset', 'InsertReleaseResource\nKeywords:\nkfifo_destroy', 'InsertNullPointerChecker\nKeywords:\nkfree', 'InsertMissedStatement\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfifo_del', '']
['InsertReleaseResource\nKeywords:\nkfree(vch)', 'RemoveBuggyStatement\nKeywords:\nkfree', 'MutateMethodInvocationExpression\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfree(vch);', 'InsertReleaseResource\nKeywords:\nkfree', 'InsertMemset\nKeywords:\nkfree(vch)', 'InsertNullPointerChecker\nKeywords:\nif (vch)', 'InsertNullPointerChecker\nKeywords:\nkfree', 'InsertFreeResource\nKeywords:\nkfree(vch)', '']
['RemoveBuggyStatement\nKeywords:\ndelete', 'MoveStatement\nKeywords:\nax->tty = NULL', 'InsertReleaseResource\nKeywords:\nkfree_netdev', 'InsertNullPointerChecker\nKeywords:\nax->tty', 'MoveStatement\nKeywords:\ndelete', 'InsertReleaseResource\nKeywords:\nkfree', 'MutateVariable\nKeywords:\nax->tty = NULL', 'MoveStatement\nKeywords:\nax->tty = NULL;', 'InsertReleaseResource\nKeywords:\ndelete', '']
['InsertReleaseResource\nKeywords:\nDestroyImageList', 'InsertReleaseResource\nKeywords:\nDestroyImageList(image)', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nimage', 'InsertNullPointerChecker\nKeywords:\nbreak', 'InsertReleaseResource\nKeywords:\nDeleteImageList', 'InsertReleaseResource\nKeywords:\nbreak', 'InsertReleaseResource\nKeywords:\ndelete', 'InsertReleaseResource\nKeywords:\nCloseBlobList', '']
['InsertConditionalExpression\nKeywords:\nif (bmp_info.ba_offset != 0)', 'InsertConditionalExpression\nKeywords:\nif (bmp_info.ba_offset == 0)', 'InsertRangeChecker\nKeywords:\nif (TellBlob(image) < 2)', 'InsertNullPointerChecker\nKeywords:\nif (bmp_info.ba_offset)', 'InsertRangeChecker\nKeywords:\nif (TellBlob(image) >= 2)', 'InsertRangeChecker\nKeywords:\nif (TellBlob(image) > 2)', 'InsertConditionalExpression\nKeywords:\nif (bmp_info.ba_offset > 0)', 'InsertNullPointerChecker\nKeywords:\nstart_position', 'InsertConditionalExpression\nKeywords:\nstart_position', 'InsertRangeChecker\nKeywords:\nstart_position']
['InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\ndire->size += 2', 'InsertRangeChecker\nKeywords:\ngoto corrupted', 'InsertMissedStatement\nKeywords:\ndire->size = 0', 'InsertMissedStatement\nKeywords:\ndire->size += 1', 'InsertMissedStatement\nKeywords:\ngoto corrupted', 'InsertRangeChecker\nKeywords:\ndire->size < 1', 'InsertMissedStatement\nKeywords:\ndire->size -= 1', 'InsertRangeChecker\nKeywords:\ndire->size', 'InsertRangeChecker\nKeywords:\nsize']
['Input Too Long']
['InsertMissedStatement\nKeywords:\ngoto corrupted', 'InsertMissedStatement\nKeywords:\ndire->size = 0', 'InsertMemset\nKeywords:\nmemset', 'InsertRangeChecker\nKeywords:\ngoto corrupted', 'InsertRangeChecker\nKeywords:\nif(dire->size < 2)', 'InsertRangeChecker\nKeywords:\nif(dire->size < 1)', 'InsertMissedStatement\nKeywords:\ndire->size += 2', 'InsertRangeChecker\nKeywords:\nif(dire->size < 3)', 'InsertRangeChecker\nKeywords:\ndire->size < 2', 'InsertRangeChecker\nKeywords:\nmemcmp']
['InsertConditionalExpression\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertConditionalExpression\nKeywords:\nif', 'RemoveBuggyStatement\nKeywords:\nreturn', 'MutateLiteralExpression\nKeywords:\n1', 'RemoveBuggyStatement\nKeywords:\ndelete', 'RemoveBuggyStatement\nKeywords:\nreturn 0', 'MutateControlStatement\nKeywords:\nreturn false', 'MutateControlStatement\nKeywords:\nreturn', 'RemoveBuggyStatement\nKeywords:\nreturn false']
['InsertRangeChecker\nKeywords:\nif (stuff->length < 4)', 'MutateDataType\nKeywords:\nSIZEOF(xkbSelectEventsReq)', 'MutateDataType\nKeywords:\nsize', 'MutateLiteralExpression\nKeywords:\n4', 'InsertRangeChecker\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\ndataLeft', 'MutateVariable\nKeywords:\ndataLeft', 'MutateLiteralExpression\nKeywords:\nsize', 'MutateDataType\nKeywords:\nunsigned', 'MutateDataType\nKeywords:\nsize_t']
['MutateMethodInvocationExpression\nKeywords:\nnc->info->receive', 'InsertMethodInvocationExpression\nKeywords:\nnc->info->receive', 'RemoveBuggyStatement\nKeywords:\nnc->info->receive', 'MutateMethodInvocationExpression\nKeywords:\nqemu_receive_packet', 'InsertMethodInvocationExpression\nKeywords:\nqemu_receive_packet', 'InsertNullPointerChecker\nKeywords:\nnc->info->receive', 'InsertConditionalExpression\nKeywords:\nnc->info->receive', 'RemoveBuggyStatement\nKeywords:\ndelete', 'MutateMethodInvocationExpression\nKeywords:\nnc->receive', '']
['MutateConditionalExpression\nKeywords:\ninfo->num_memslots_groups - 1', 'MutateConditionalExpression\nKeywords:\ninfo->num_memslots_groups + slot_id > info->num_memslots', 'MutateConditionalExpression\nKeywords:\ninfo->num_memslots_groups', 'InsertRangeChecker\nKeywords:\nif (slot_id >= info->num_memslots)', 'MutateConditionalExpression\nKeywords:\ninfo->num_memslots_groups <= slot_id', 'MutateConditionalExpression\nKeywords:\ninfo->num_memslots_groups - slot_id >= info->num_memslots', 'InsertRangeChecker\nKeywords:\ninfo->num_memslots_groups < 1 || slot_id < 0', 'MutateConditionalExpression\nKeywords:\ninfo->num_memslots_groups < 1', 'MutateConditionalExpression\nKeywords:\ninfo->num_memslots_groups > MAX_MEMSLOTS_PER_GROUP', 'MutateConditionalExpression\nKeywords:\ninfo->num_memslots_groups - slot_id < 1']
['InsertRangeChecker\nKeywords:\ncut < 0', 'InsertRangeChecker\nKeywords:\ncut', 'InsertRangeChecker\nKeywords:\ncut >= 0', 'InsertRangeChecker\nKeywords:\nif(cut < 0)', 'InsertRangeChecker\nKeywords:\nif(cut > 0)', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\ncut < len', 'InsertRangeChecker\nKeywords:\ncut > 0', 'InsertRangeChecker\nKeywords:\nlen', 'InsertMissedStatement\nKeywords:\ncut']
['InsertConditionalExpression\nKeywords:\nbt_help(wp->w_buffer)', 'MutateConditionalExpression\nKeywords:\nbt_help(wp->w_buffer)', 'InsertConditionalExpression\nKeywords:\nbufIsChanged', 'InsertConditionalExpression\nKeywords:\nbufIsChanged(wp->w_buffer)', 'InsertConditionalExpression\nKeywords:\nwp->w_buffer->b_p_ro', 'MutateConditionalExpression\nKeywords:\nbufIsChanged(wp->w_buffer)', 'MutateMethodInvocationExpression\nKeywords:\nbufIsChanged', 'InsertMethodInvocationExpression\nKeywords:\nbufIsChanged', 'InsertConditionalExpression\nKeywords:\nwp->w_p_pvw', 'MutateConditionalExpression\nKeywords:\nbufIsChanged']
['InsertNullPointerChecker\nKeywords:\nBUG_ON', 'InsertNullPointerChecker\nKeywords:\nIS_SBI(inode->i_sb)', 'InsertNullPointerChecker\nKeywords:\nJFS_IP(inode)->ipimap', 'InsertNullPointerChecker\nKeywords:\nJFS_SBI(inode->i_sb)', 'InsertReleaseResource\nKeywords:\ndiFree', 'InsertNullPointerChecker\nKeywords:\nJFS_IP(inode)->bmap', 'InsertReleaseResource\nKeywords:\njfs_free_ipimap', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\ninode->i_sb', '']
['InsertNullPointerChecker\nKeywords:\nif (breakpoint != NULL)', 'InsertNullPointerChecker\nKeywords:\nbreakpoint', 'InsertNullPointerChecker\nKeywords:\nbreakpoint != NULL', 'MutateConditionalExpression\nKeywords:\nbreakpoint != NULL', 'InsertConditionalExpression\nKeywords:\nbreakpoint != NULL', 'MutateConditionalExpression\nKeywords:\nif (breakpoint != NULL)', 'InsertNullPointerChecker\nKeywords:\nbreakpoint == NULL', 'InsertConditionalExpression\nKeywords:\nif (breakpoint != NULL)', 'InsertVariable\nKeywords:\nbreakpoint', 'InsertNullPointerChecker\nKeywords:\nif (breakpoint)']
['Input Too Long']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\nif (destination != NULL)', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertReleaseResource\nKeywords:\ng_object_unref', 'InsertNullPointerChecker\nKeywords:\nif (destination == NULL)', 'InsertNullPointerChecker\nKeywords:\ng_object_unref', 'InsertNullPointerChecker\nKeywords:\nif (destination)', 'InsertNullPointerChecker\nKeywords:\ndestination', 'InsertMethodInvocationExpression\nKeywords:\n_g_file_exists', 'InsertVariable\nKeywords:\ndestination', '']
['Input Too Long']
['InsertReleaseResource\nKeywords:\nusb_put_dev', 'InsertNullPointerChecker\nKeywords:\nusb_put_dev', 'RemoveBuggyStatement\nKeywords:\nusb_put_dev', 'InsertNullPointerChecker\nKeywords:\nusb_get_dev', 'InsertMethodInvocationExpression\nKeywords:\nusb_put_dev', 'MoveStatement\nKeywords:\nusb_put_dev', 'MutateMethodInvocationExpression\nKeywords:\nusb_put_dev', 'InsertNullPointerChecker\nKeywords:\nusb_set_intfdata', 'InsertMissedStatement\nKeywords:\nusb_put_dev', 'InsertNullPointerChecker\nKeywords:\nusb_get_intfdata']
['InsertRangeChecker\nKeywords:\nlabel_length', 'InsertRangeChecker\nKeywords:\nlabel_length < 0', 'InsertMethodInvocationExpression\nKeywords:\nstrncpy', 'InsertRangeChecker\nKeywords:\nlabel_length < 1', 'InsertRangeChecker\nKeywords:\nlabel_length <= 0', 'InsertMemset\nKeywords:\nmemset', 'InsertVariable\nKeywords:\nlabel_length', 'InsertNullPointerChecker\nKeywords:\ntext', 'InsertVariable\nKeywords:\ntext', '']
['InsertRangeChecker\nKeywords:\ntotal_slide_infos', 'MutateVariable\nKeywords:\ntotal_slide_infos', 'MutateDataType\nKeywords:\nut32', 'InsertVariable\nKeywords:\ntotal_slide_infos', 'InsertCastStatement\nKeywords:\n(ut32)', 'MutateDataType\nKeywords:\nuint32', 'MutateDataType\nKeywords:\nut64', 'MutateDataType\nKeywords:\nu32', 'InsertCastStatement\nKeywords:\n(ut64)', '']
['InsertRangeChecker\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\nsize*count + pad+20', 'MutateMethodInvocationExpression\nKeywords:\nDataBuf', 'InsertRangeChecker\nKeywords:\nsize*count + pad + 20', 'MutateDataType\nKeywords:\nDataBuf', 'InsertRangeChecker\nKeywords:\nsize > 4', 'InsertVariable\nKeywords:\nbuf', 'InsertCastStatement\nKeywords:\nDataBuf', 'InsertRangeChecker\nKeywords:\nsize*count + pad', '']
['InsertReleaseResource\nKeywords:\nefree(mfn)', 'InsertReleaseResource\nKeywords:\nefree', 'RemoveBuggyStatement\nKeywords:\nefree', 'MutateMethodInvocationExpression\nKeywords:\nefree', 'InsertReleaseResource\nKeywords:\nefree(filearr)', 'InsertNullPointerChecker\nKeywords:\nefree', 'InsertMethodInvocationExpression\nKeywords:\nefree', 'MutateMethodInvocationExpression\nKeywords:\nfree', 'InsertNullPointerChecker\nKeywords:\nif (mfn)', '']
['InsertRangeChecker\nKeywords:\nhdr->length < 3', 'InsertRangeChecker\nKeywords:\npnt + hdr->length > end', 'InsertRangeChecker\nKeywords:\nhdr->length + 3 > end', 'InsertRangeChecker\nKeywords:\nif (hdr->length < 3)', 'InsertRangeChecker\nKeywords:\nhdr->length > end - pnt', 'InsertRangeChecker\nKeywords:\nreturn BGP_Stop', 'InsertRangeChecker\nKeywords:\nhdr->length > UINT32_MAX', 'InsertRangeChecker\nKeywords:\nhdr->length < 4', 'InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nbreak']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\nstate->head->extra != Z_NULL', 'InsertNullPointerChecker\nKeywords:\nif (state->head != Z_NULL)', 'InsertNullPointerChecker\nKeywords:\nstate->head != Z_NULL', 'InsertNullPointerChecker\nKeywords:\nstate->head->extra', 'InsertRangeChecker\nKeywords:\nlen > 0', 'InsertRangeChecker\nKeywords:\nlen', 'InsertConditionalExpression\nKeywords:\nlen > 0', 'InsertMissedStatement\nKeywords:\nlen', 'InsertVariable\nKeywords:\nlen', '']
['InsertMethodInvocationExpression\nKeywords:\ntrigger_modechanged', 'InsertMissedStatement\nKeywords:\ntrigger_modechanged', 'InsertConditionalExpression\nKeywords:\ntrigger_modechanged', 'InsertMethodInvocationExpression\nKeywords:\nvalidate_virtcol', 'InsertMethodInvocationExpression\nKeywords:\ncheck_cursor_line', 'InsertVariable\nKeywords:\ntrigger_modechanged', 'MoveStatement\nKeywords:\ntrigger_modechanged', 'InsertMissedStatement\nKeywords:\ntrigger_modechanged()', 'InsertMethodInvocationExpression\nKeywords:\nsetmouse', 'InsertConditionalExpression\nKeywords:\ntrigger_modechanged()']
['MutateMethodInvocationExpression\nKeywords:\ncli_realloc', 'MutateMethodInvocationExpression\nKeywords:\ncli_calloc', 'InsertMethodInvocationExpression\nKeywords:\ncli_realloc', 'InsertMethodInvocationExpression\nKeywords:\ncli_calloc', 'InsertMethodInvocationExpression\nKeywords:\ncli_mallocn', 'InsertNullPointerChecker\nKeywords:\nif (!name)', 'MutateMethodInvocationExpression\nKeywords:\ncalloc', 'MutateMethodInvocationExpression\nKeywords:\nmemcpy', 'InsertMethodInvocationExpression\nKeywords:\ncli_malloc0', 'RemoveBuggyStatement\nKeywords:\ncli_malloc']
['InsertRangeChecker\nKeywords:\ncol', 'InsertCastStatement\nKeywords:\ncolnr_T', 'InsertNullPointerChecker\nKeywords:\nreturn FALSE', 'InsertRangeChecker\nKeywords:\nreturn FALSE', 'InsertNullPointerChecker\nKeywords:\ncol', 'InsertVariable\nKeywords:\ncol', 'InsertRangeChecker\nKeywords:\ncol >= MAXCOL', 'InsertRangeChecker\nKeywords:\ncolnr_T', 'InsertMissedStatement\nKeywords:\ncol', 'InsertRangeChecker\nKeywords:\ncol >= maxcol']
['MutateMethodInvocationExpression\nKeywords:\nmempcpy', 'MutateMethodInvocationExpression\nKeywords:\nmemcpy', 'InsertRangeChecker\nKeywords:\nnewp[end_name - dirname - 1]', 'MutateMethodInvocationExpression\nKeywords:\nmemncpy', 'MutateMethodInvocationExpression\nKeywords:\nmemchr', 'MutateMethodInvocationExpression\nKeywords:\nmemcmp', 'InsertRangeChecker\nKeywords:\nnewp[end_name - dirname]', 'InsertRangeChecker\nKeywords:\nend_name - dirname', 'MutateLiteralExpression\nKeywords:\nmempcpy', '']
['InsertRangeChecker\nKeywords:\ntransaction->aid_len > NFC_MIN_AID_LENGTH + 4', 'InsertRangeChecker\nKeywords:\ntransaction->aid_len > NFC_MAX_AID_LENGTH', 'InsertRangeChecker\nKeywords:\ntransaction->aid_len < 4', 'InsertRangeChecker\nKeywords:\ntransaction->aid_len >= NFC_MIN_AID_LENGTH + 4', 'InsertRangeChecker\nKeywords:\ntransaction->aid_len < 4 || transaction->params_len < 4', 'InsertRangeChecker\nKeywords:\ntransaction->aid_len > NFC_MAX_AID_LENGTH + 4', 'InsertRangeChecker\nKeywords:\nif (transaction->aid_len + 4 > skb->len)', 'InsertRangeChecker\nKeywords:\nreturn -EINVAL', 'InsertRangeChecker\nKeywords:\ntransaction->aid_len + 4 > skb->len', 'InsertRangeChecker\nKeywords:\ntransaction->aid_len > NFC_MIN_AID_LENGTH + 3']
['InsertMethodInvocationExpression\nKeywords:\natoascii', 'InsertMissedStatement\nKeywords:\natoascii', 'InsertMemset\nKeywords:\nmemset', 'InsertNullPointerChecker\nKeywords:\nif (bn == NULL)', 'InsertRangeChecker\nKeywords:\nMAXVALLEN', 'InsertRangeChecker\nKeywords:\nmaxval', 'InsertRangeChecker\nKeywords:\nstrlen', 'InsertRangeChecker\nKeywords:\nbv_len', 'InsertRangeChecker\nKeywords:\natol', '']
['InsertRangeChecker\nKeywords:\nmaxrlvls', 'InsertRangeChecker\nKeywords:\ntccp->maxrlvls', 'InsertRangeChecker\nKeywords:\njas_eprintf', 'InsertRangeChecker\nKeywords:\ntccp->maxrlvls < 0', 'InsertRangeChecker\nKeywords:\nif (tcp->maxrlvls < 0)', 'InsertRangeChecker\nKeywords:\nmaxrlvls < 0', 'InsertRangeChecker\nKeywords:\nmaxrlvls < 1', 'InsertRangeChecker\nKeywords:\ntcp->maxrlvls', 'InsertRangeChecker\nKeywords:\nmin', '']
['InsertMissedStatement\nKeywords:\nptr[new_cursor_col] = NUL', 'InsertRangeChecker\nKeywords:\nif (new_cursor_col >= ptr_len)', 'InsertRangeChecker\nKeywords:\nif (new_cursor_col >= ptr_size)', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\nreturn -1', 'InsertRangeChecker\nKeywords:\nvcol < 0', 'InsertRangeChecker\nKeywords:\ncontinue', 'InsertRangeChecker\nKeywords:\nvcol', 'InsertRangeChecker\nKeywords:\nreturn', '']
['InsertCastStatement\nKeywords:\n(ssize_t)', 'MutateMethodInvocationExpression\nKeywords:\nTIFFStripSize', 'MutateLiteralExpression\nKeywords:\n(ssize_t)', 'MutateLiteralExpression\nKeywords:\n(size_t)', 'MutateVariable\nKeywords:\nsamples_per_pixel', 'InsertRangeChecker\nKeywords:\nif (image->rows < 4)', 'MutateLiteralExpression\nKeywords:\nTIFFStripSize', 'MutateDataType\nKeywords:\nsize_t', 'InsertRangeChecker\nKeywords:\nif (image->rows != 4)', 'InsertRangeChecker\nKeywords:\nextent']
['InsertConditionalExpression\nKeywords:\n!(expr->ops->offload_flags & NFT_OFFLOAD_F_ACTION)', 'MutateConditionalExpression\nKeywords:\n&& expr->ops->offload_flags & NFT_OFFLOAD_F_ACTION', 'InsertConditionalExpression\nKeywords:\nexpr->ops->offload_flags & NFT_OFFLOAD_F_ACTION', 'InsertConditionalExpression\nKeywords:\n&& expr->ops->offload_flags & NFT_OFFLOAD_F_ACTION', 'InsertConditionalExpression\nKeywords:\n(expr->ops->offload_flags & NFT_OFFLOAD_F_ACTION)', 'MutateConditionalExpression\nKeywords:\n&& expr->ops->offload_flags != NFT_OFFLOAD_F_ACTION', 'InsertConditionalExpression\nKeywords:\n!(expr->ops->offload_flags & NFT_OFFLOAD_F_ACTION)}', 'InsertNullPointerChecker\nKeywords:\nexpr->ops->offload_flags', 'MutateConditionalExpression\nKeywords:\n&', 'InsertNullPointerChecker\nKeywords:\nexpr->ops']
['InsertRangeChecker\nKeywords:\nreturn XML_ERROR_NO_MEMORY', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nreturn XML_ERROR_NO_MEMORY', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nreturn XML_ERROR_INVALID_URI', 'InsertConditionalExpression\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nif (len == 0)', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nlen > xmlLen', 'InsertRangeChecker\nKeywords:\ncontinue']
['InsertRangeChecker\nKeywords:\nfor', 'InsertRangeChecker\nKeywords:\ndec->numchans', 'MutateConditionalExpression\nKeywords:\ndec->numchans', 'InsertRangeChecker\nKeywords:\ndec->numchans <= i', 'MutateConditionalExpression\nKeywords:\nfor', 'MutateConditionalExpression\nKeywords:\ndec->numchans > i', 'InsertRangeChecker\nKeywords:\ndec->numchans < i', 'MutateConditionalExpression\nKeywords:\ndec->numchans > 0', 'MutateControlStatement\nKeywords:\nfor', 'InsertConditionalExpression\nKeywords:\nfor']
['InsertRangeChecker\nKeywords:\ndata->block[0] < 1', 'InsertRangeChecker\nKeywords:\nif (dma_size < 1)', 'InsertRangeChecker\nKeywords:\nif (data->block[0] < 1)', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\ndma_size', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertMemset\nKeywords:\nmemset', 'InsertMissedStatement\nKeywords:\naddr', 'InsertMissedStatement\nKeywords:\nbreak', '']
['InsertRangeChecker\nKeywords:\nif (i >= huff_rec_count)', 'InsertRangeChecker\nKeywords:\nreturn MOBI_DATA_CORRUPT', 'InsertNullPointerChecker\nKeywords:\ncurr == NULL', 'InsertRangeChecker\nKeywords:\nif (i > huff_rec_count)', 'InsertMissedStatement\nKeywords:\nfree', 'InsertRangeChecker\nKeywords:\nif (huff_rec_count == 0)', 'InsertConditionalExpression\nKeywords:\nif (i == huff_rec_count)', 'InsertRangeChecker\nKeywords:\ncurr == NULL', 'InsertRangeChecker\nKeywords:\nhuff_rec_count', 'InsertNullPointerChecker\nKeywords:\nif (curr == NULL)']
['InsertMethodInvocationExpression\nKeywords:\ngeteuid', 'InsertMethodInvocationExpression\nKeywords:\ngetuid', 'InsertMethodInvocationExpression\nKeywords:\nsetgroups', 'InsertMethodInvocationExpression\nKeywords:\nsetuid', 'InsertVariable\nKeywords:\neuid', 'InsertVariable\nKeywords:\ncurrent_user.gid', 'InsertVariable\nKeywords:\ncurrent_user.uid', 'InsertMethodInvocationExpression\nKeywords:\ncheck_uid', 'InsertVariable\nKeywords:\nuid', '']
['InsertRangeChecker\nKeywords:\nurl->auth_header_len', 'MutateConditionalExpression\nKeywords:\nurl->auth_header_len', 'InsertConditionalExpression\nKeywords:\nurl->auth_header_len', 'InsertRangeChecker\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\nbytes', 'InsertNullPointerChecker\nKeywords:\nauth_user->client', 'InsertNullPointerChecker\nKeywords:\nclient', 'InsertNullPointerChecker\nKeywords:\nauth_user', 'MutateMethodInvocationExpression\nKeywords:\nsize_t', '']
['InsertNullPointerChecker\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn (0)', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertMemset\nKeywords:\nmemset', 'InsertRangeChecker\nKeywords:\nreturn (0)', 'InsertMissedStatement\nKeywords:\nreturn (0)', 'InsertMissedStatement\nKeywords:\nreturn (0);', 'InsertMissedStatement\nKeywords:\nhttp_isfiltered', '']
['InsertNullPointerChecker\nKeywords:\nq', 'InsertVariable\nKeywords:\nq', 'InsertNullPointerChecker\nKeywords:\nq = NULL', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nq != NULL', 'InsertMissedStatement\nKeywords:\nq = NULL', 'InsertNullPointerChecker\nKeywords:\nq == NULL', 'InsertMemset\nKeywords:\nmemset', 'InsertVariable\nKeywords:\nchain_info', 'MoveStatement\nKeywords:\nq']
['InsertMissedStatement\nKeywords:\nnew_num_matches = 0', 'InsertConditionalExpression\nKeywords:\nnew_num_matches == 0', 'InsertRangeChecker\nKeywords:\nmax_num_matches', 'InsertRangeChecker\nKeywords:\nnew_num_matches > MAXCOL', 'InsertMissedStatement\nKeywords:\nmax_num_matches = 0', 'InsertRangeChecker\nKeywords:\nnew_num_matches', 'InsertNullPointerChecker\nKeywords:\nnew_tag', 'InsertNullPointerChecker\nKeywords:\nreturn -1', 'InsertMissedStatement\nKeywords:\nnew_num_matches', 'InsertMissedStatement\nKeywords:\nmax_num_matches']
['MutateDataType\nKeywords:\nu32', 'MutateDataType\nKeywords:\nsize_t', 'MutateVariable\nKeywords:\nsmap->map.value_size', 'InsertRangeChecker\nKeywords:\nelem_size', 'MutateLiteralExpression\nKeywords:\nsmap->map.value_size', 'MutateDataType\nKeywords:\nu64', 'MutateVariable\nKeywords:\nsmap->map.bucket_size', 'MutateLiteralExpression\nKeywords:\nsizeof', 'RemoveBuggyStatement\nKeywords:\nsizeof', '']
['InsertRangeChecker\nKeywords:\nvalue.slen < 4', 'InsertRangeChecker\nKeywords:\nif (attr->hdr.length < 4)', 'InsertRangeChecker\nKeywords:\nvalue.slen', 'InsertRangeChecker\nKeywords:\nif (value.slen < 4)', 'InsertRangeChecker\nKeywords:\nPJ_UNUSED_ARG', 'InsertRangeChecker\nKeywords:\nreturn PJ_STATUS_INVALID_DATA', 'InsertRangeChecker\nKeywords:\nattr->reason.length < 4', 'InsertRangeChecker\nKeywords:\nif (attr->hdr.length <= 4)', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertMemset\nKeywords:\nmemset']
['InsertReleaseResource\nKeywords:\ngs_free_object', 'InsertReleaseResource\nKeywords:\ngs_object_unref', 'InsertNullPointerChecker\nKeywords:\nif (pcs->status.buffer)', 'InsertReleaseResource\nKeywords:\npcs->status.buffer = NULL', 'InsertNullPointerChecker\nKeywords:\nif (!pcs->status.buffer)', 'InsertMissedStatement\nKeywords:\npcs->status.buffer = NULL', 'InsertNullPointerChecker\nKeywords:\npcs->status.buffer = NULL;', 'InsertMissedStatement\nKeywords:\ngs_free_object', 'InsertReleaseResource\nKeywords:\npcs->status.buffer = NULL;', 'InsertNullPointerChecker\nKeywords:\npcs->status.buffer = NULL']
['InsertNullPointerChecker\nKeywords:\nZ_STRVAL_P(ent1->data)', 'InsertNullPointerChecker\nKeywords:\nif (new_str)', 'MutateVariable\nKeywords:\nZ_STRVAL_P(ent1->data)', 'InsertNullPointerChecker\nKeywords:\nif (!new_str)', 'InsertNullPointerChecker\nKeywords:\nif (new_str && new_len)', 'InsertNullPointerChecker\nKeywords:\nZ_TYPE_P(ent1->data)', 'MutateVariable\nKeywords:\nnew_str', 'MutateMethodInvocationExpression\nKeywords:\nphp_base64_decode', 'InsertNullPointerChecker\nKeywords:\nif (new_str != NULL)', '']
['InsertRangeChecker\nKeywords:\npThis->iOctetsRemain', 'InsertRangeChecker\nKeywords:\nassert', 'InsertRangeChecker\nKeywords:\nDBGPRINTF', 'InsertRangeChecker\nKeywords:\niOctetsRemain', 'InsertRangeChecker\nKeywords:\niMaxLine', 'InsertRangeChecker\nKeywords:\nif', 'InsertMissedStatement\nKeywords:\nDBGPRINTF', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nif', '']
['InsertNullPointerChecker\nKeywords:\nqfl != NULL', 'InsertNullPointerChecker\nKeywords:\nif (qfl != NULL)', 'MutateConditionalExpression\nKeywords:\nqfl != NULL', 'InsertNullPointerChecker\nKeywords:\nif (qfl == NULL)', 'MutateConditionalExpression\nKeywords:\nif (qfl != NULL)', 'InsertConditionalExpression\nKeywords:\nqfl->qf_count != 0', 'InsertConditionalExpression\nKeywords:\nqfl->qf_count > 0', 'InsertNullPointerChecker\nKeywords:\nqfl == NULL', 'RemoveBuggyStatement\nKeywords:\nqfl != NULL', 'InsertVariable\nKeywords:\nbuf']
['InsertMethodInvocationExpression\nKeywords:\nutils::replace_all', 'InsertConditionalExpression\nKeywords:\nutils::replace_all', 'InsertMethodInvocationExpression\nKeywords:\nutils::quote_empty', 'InsertMethodInvocationExpression\nKeywords:\nstfl::quote', 'MutateLiteralExpression\nKeywords:\n%27', 'MutateMethodInvocationExpression\nKeywords:\nstfl::quote', 'InsertMethodInvocationExpression\nKeywords:\nutils::escape_string', 'InsertMethodInvocationExpression\nKeywords:\nutils::format_url', 'InsertMethodInvocationExpression\nKeywords:\nutils::quote_all', 'InsertVariable\nKeywords:\nurl']
['RemoveBuggyStatement\nKeywords:\nnc->info->receive', 'MutateMethodInvocationExpression\nKeywords:\nnc->info->receive', 'MutateMethodInvocationExpression\nKeywords:\nqemu_receive_packet', 'InsertMethodInvocationExpression\nKeywords:\nqemu_receive_packet', 'InsertNullPointerChecker\nKeywords:\nnc->info->receive', 'InsertMethodInvocationExpression\nKeywords:\nnc->info->receive', 'InsertNullPointerChecker\nKeywords:\nif (nc->info)', 'RemoveBuggyStatement\nKeywords:\ndelete', 'MutateMethodInvocationExpression\nKeywords:\nqemu_send_packet', 'InsertMethodInvocationExpression\nKeywords:\nnc->info->receive_packet']
['InsertNullPointerChecker\nKeywords:\nvalue', 'InsertNullPointerChecker\nKeywords:\nvalue->s', 'InsertMethodInvocationExpression\nKeywords:\nread_old_value', 'InsertNullPointerChecker\nKeywords:\nmailbox', 'InsertRangeChecker\nKeywords:\nkeylen', 'InsertNullPointerChecker\nKeywords:\nvalue == NULL', 'InsertNullPointerChecker\nKeywords:\nif (!value)', 'InsertNullPointerChecker\nKeywords:\nvalue->len', 'InsertConditionalExpression\nKeywords:\nkeylen', 'InsertNullPointerChecker\nKeywords:\nvalue->s == NULL']
['InsertNullPointerChecker\nKeywords:\nax25_dev_put', 'InsertNullPointerChecker\nKeywords:\nax25_dev = NULL', 'InsertNullPointerChecker\nKeywords:\nax25_dev_get', 'InsertNullPointerChecker\nKeywords:\nax25_dev', 'InsertNullPointerChecker\nKeywords:\nreturn -EINVAL', 'InsertNullPointerChecker\nKeywords:\nax25_dev == NULL', 'InsertReleaseResource\nKeywords:\nax25_dev_put', 'InsertNullPointerChecker\nKeywords:\nax25_dev != NULL', 'InsertNullPointerChecker\nKeywords:\nNULL', 'InsertNullPointerChecker\nKeywords:\nbreak']
['MutateConditionalExpression\nKeywords:\n((c > 0x39 && c < 0x7f) || (c > 0xa0 && c < 0xff)))', 'MutateConditionalExpression\nKeywords:\n((c > 0x39 && c < 0x7f) || (c > 0xa0 && c < 0xff))', 'MutateConditionalExpression\nKeywords:\n(c > 0x39 && c < 0x7f) || (c > 0xa0 && c < 0xff))', 'InsertRangeChecker\nKeywords:\nif (w >= 0 && w < big5_ucs_table_size)', 'InsertRangeChecker\nKeywords:\nw >= 0 && w < big5_ucs_table_size', 'MutateConditionalExpression\nKeywords:\n(c > 0x39 && c < 0x7f) || (c > 0xa0 && c < 0xff)', 'MutateConditionalExpression\nKeywords:\nc > 0x39 && c < 0x7f', 'MutateConditionalExpression\nKeywords:\n(c > 0x39 && c < 0x7f)', 'MutateConditionalExpression\nKeywords:\nc < 0x7f', 'MutateConditionalExpression\nKeywords:\nc > 0x39']
['InsertReleaseResource\nKeywords:\nnci_unregister_device', 'InsertNullPointerChecker\nKeywords:\nndev', 'MoveStatement\nKeywords:\nnci_unregister_device', 'InsertReleaseResource\nKeywords:\nnci_free_device', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (!ndev)', 'InsertNullPointerChecker\nKeywords:\nif (ndev)', 'InsertReleaseResource\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkfree(priv)', '']
['Input Too Long']
['InsertMissedStatement\nKeywords:\nend_visual_mode', 'InsertMissedStatement\nKeywords:\nemsg', 'InsertRangeChecker\nKeywords:\nend_visual_mode', 'InsertConditionalExpression\nKeywords:\nif (badlen == 0)', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nbadlen', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\nend_visual_mode()', 'InsertMissedStatement\nKeywords:\ncurwin->w_cursor.col', '']
['InsertNullPointerChecker\nKeywords:\nparam->string', 'InsertNullPointerChecker\nKeywords:\nparam->string == NULL', 'InsertNullPointerChecker\nKeywords:\nparam->string != NULL', 'InsertVariable\nKeywords:\nfc->source', 'InsertNullPointerChecker\nKeywords:\nif (param->string)', 'InsertNullPointerChecker\nKeywords:\nreturn 0', 'InsertNullPointerChecker\nKeywords:\nif (!param->string)', 'InsertNullPointerChecker\nKeywords:\nparam->string = NULL;', 'InsertNullPointerChecker\nKeywords:\nparam->string = NULL', 'InsertNullPointerChecker\nKeywords:\nfc->source']
['MutateMethodInvocationExpression\nKeywords:\nMemorySet', 'MutateMethodInvocationExpression\nKeywords:\nMemset', 'MutateMethodInvocationExpression\nKeywords:\nmemset', 'MutateMethodInvocationExpression\nKeywords:\nZeroMemory', 'MutateMethodInvocationExpression\nKeywords:\nSetMemory', 'InsertMethodInvocationExpression\nKeywords:\nMemorySet', 'MutateMethodInvocationExpression\nKeywords:\nObjectAttributesSet', 'MutateMethodInvocationExpression\nKeywords:\nSetObjectAttributes', 'MutateMethodInvocationExpression\nKeywords:\nObjectAttributesCopy', '']
['MutateConditionalExpression\nKeywords:\nhdr.nSubrects * (4 + (BPP / 8))', 'MutateConditionalExpression\nKeywords:\nhdr.nSubrects', 'InsertRangeChecker\nKeywords:\nhdr.nSubrects', 'InsertRangeChecker\nKeywords:\nhdr.nSubrects * (4 + (BPP / 8))', 'InsertRangeChecker\nKeywords:\nhdr.nSubrects > RFB_BUFFER_SIZE', 'MutateConditionalExpression\nKeywords:\nRFB_BUFFER_SIZE', 'MutateConditionalExpression\nKeywords:\nRFB_BUFFER_SIZE - hdr.nSubrects', 'MutateConditionalExpression\nKeywords:\nBPP / 8', 'MutateConditionalExpression\nKeywords:\nBPP', '']
['InsertRangeChecker\nKeywords:\nreturn LZW_BAD_CODE', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nreturn LZW_BAD_ENTRY', 'InsertMissedStatement\nKeywords:\nreturn LZW_BAD_CODE', 'InsertConditionalExpression\nKeywords:\nreturn LZW_BAD_CODE', 'InsertRangeChecker\nKeywords:\ncurrent_entry', 'InsertRangeChecker\nKeywords:\ncode_new > current_entry', 'InsertMissedStatement\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nreturn', '']
['InsertNullPointerChecker\nKeywords:\nif (!interface)', 'InsertNullPointerChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\ngoto check_value', 'InsertNullPointerChecker\nKeywords:\ninterface', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertMissedStatement\nKeywords:\nbreak', 'InsertMissedStatement\nKeywords:\ninterface', 'InsertNullPointerChecker\nKeywords:\nif (interface)', 'InsertRangeChecker\nKeywords:\ninterface']
['InsertRangeChecker\nKeywords:\nkey_gen', 'InsertRangeChecker\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\nkey_len', 'InsertMemset\nKeywords:\nmemset', 'InsertRangeChecker\nKeywords:\nkey_size', 'InsertRangeChecker\nKeywords:\nunlikely', 'InsertReleaseResource\nKeywords:\nkfree', 'InsertNullPointerChecker\nKeywords:\nskey', 'InsertVariable\nKeywords:\nsize', '']
['InsertRangeChecker\nKeywords:\nsz', 'InsertRangeChecker\nKeywords:\noffset + 8 > sz', 'InsertRangeChecker\nKeywords:\noffset + 6 > sz', 'InsertRangeChecker\nKeywords:\nsz < offset + 8', 'InsertRangeChecker\nKeywords:\nsz - offset < 2', 'InsertRangeChecker\nKeywords:\nsz - offset < 8', 'InsertRangeChecker\nKeywords:\nsz < 2', 'InsertRangeChecker\nKeywords:\nsz - offset', 'InsertRangeChecker\nKeywords:\nsz < 8', 'InsertRangeChecker\nKeywords:\nbreak']
['InsertNullPointerChecker\nKeywords:\nreturn -ERR_INVALID_REQUEST', 'InsertConditionalExpression\nKeywords:\nreturn -ERR_INVALID_REQUEST', 'InsertMissedStatement\nKeywords:\nreturn -ERR_INVALID_REQUEST', 'InsertRangeChecker\nKeywords:\nreturn -ERR_INVALID_REQUEST', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (!val.empty())', 'InsertNullPointerChecker\nKeywords:\nval.empty()', 'InsertConditionalExpression\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (val.empty())', '']
['InsertMissedStatement\nKeywords:\nxfrm_probe_algs', 'InsertMethodInvocationExpression\nKeywords:\nxfrm_probe_algs', 'InsertConditionalExpression\nKeywords:\nxfrm_probe_algs', 'InsertMissedStatement\nKeywords:\nreturn -EINVAL', 'InsertNullPointerChecker\nKeywords:\nreturn -EINVAL', 'InsertMemset\nKeywords:\nmemset', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertMissedStatement\nKeywords:\nreturn', '']
['InsertRangeChecker\nKeywords:\nargs.nargs', 'InsertRangeChecker\nKeywords:\nif (args.nargs <= 0)', 'InsertRangeChecker\nKeywords:\nif (args.nargs < 1)', 'InsertRangeChecker\nKeywords:\nif (args.nargs < 2)', 'InsertNullPointerChecker\nKeywords:\nif (!orig_rets)', 'InsertRangeChecker\nKeywords:\nif (args.nargs < 0)', 'InsertRangeChecker\nKeywords:\ngoto fail', 'InsertRangeChecker\nKeywords:\nif (args.nargs == 0)', 'InsertRangeChecker\nKeywords:\nif (args.nargs < 4)', 'InsertNullPointerChecker\nKeywords:\nargs.nargs']
['InsertRangeChecker\nKeywords:\nreturn qtm->error = CL_EFORMAT', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertRangeChecker\nKeywords:\nwindow_posn', 'InsertRangeChecker\nKeywords:\nmatch_offset > qtm->window_size', 'InsertRangeChecker\nKeywords:\nmatch_offset', 'InsertRangeChecker\nKeywords:\nwindow_size', 'InsertRangeChecker\nKeywords:\nreturn qtm->error', 'InsertRangeChecker\nKeywords:\nbreak', 'InsertRangeChecker\nKeywords:\nmatch_length', 'InsertMissedStatement\nKeywords:\nreturn']
['InsertRangeChecker\nKeywords:\nnewsize', 'InsertRangeChecker\nKeywords:\nreturn', 'MutateDataType\nKeywords:\nsize_t', 'InsertRangeChecker\nKeywords:\nif', 'InsertRangeChecker\nKeywords:\nnewsize > target->size', 'InsertRangeChecker\nKeywords:\nnewsize < target->size', 'InsertMethodInvocationExpression\nKeywords:\nrealloc', 'InsertMissedStatement\nKeywords:\nnewsize', 'InsertRangeChecker\nKeywords:\nsize', '']
['InsertReleaseResource\nKeywords:\nkfree(in)', 'InsertReleaseResource\nKeywords:\nkvfree', 'InsertReleaseResource\nKeywords:\nkfree', 'InsertReleaseResource\nKeywords:\nkvzalloc', 'InsertReleaseResource\nKeywords:\nkvfree(in)', 'InsertReleaseResource\nKeywords:\nkvzfree', 'InsertMemset\nKeywords:\nmemset', 'InsertReleaseResource\nKeywords:\nvfree(in)', 'InsertReleaseResource\nKeywords:\nkfree(in);', 'InsertNullPointerChecker\nKeywords:\nif (!err)']
['InsertNullPointerChecker\nKeywords:\nbuf', 'InsertNullPointerChecker\nKeywords:\n!*buf', 'MutateConditionalExpression\nKeywords:\n!strcmp(buf, "help")', 'RemoveBuggyStatement\nKeywords:\n!*buf', 'MutateConditionalExpression\nKeywords:\n!strcmp(buf, "list")', 'MutateConditionalExpression\nKeywords:\n!*buf', 'InsertNullPointerChecker\nKeywords:\nbuf == NULL', 'MutateConditionalExpression\nKeywords:\nstrcmp', 'MutateConditionalExpression\nKeywords:\n&& !*buf', '']
['InsertNullPointerChecker\nKeywords:\nif (!(*table)->seqAfterExpression)', 'InsertRangeChecker\nKeywords:\nif ((*table)->seqAfterExpressionLength < ruleChars.length)', 'InsertNullPointerChecker\nKeywords:\nif (!(*table)->hasSeqAfterExpression)', 'MutateConditionalExpression\nKeywords:\nif ((*table)->seqAfterExpressionLength < ruleChars.length)', 'InsertConditionalExpression\nKeywords:\nif ((*table)->seqAfterExpressionLength < ruleChars.length)', 'MutateMethodInvocationExpression\nKeywords:\ngetChar', 'MutateLiteralExpression\nKeywords:\nruleChars.length + 1', 'MutateLiteralExpression\nKeywords:\nruleChars.length', 'InsertRangeChecker\nKeywords:\nruleChars.length', '']
['RemoveBuggyStatement\nKeywords:\ngst_object_unref', 'InsertReleaseResource\nKeywords:\ng_free', 'InsertReleaseResource\nKeywords:\ngst_object_unref', 'InsertNullPointerChecker\nKeywords:\ngst_object_unref', 'InsertReleaseResource\nKeywords:\ng_object_unref', 'InsertNullPointerChecker\nKeywords:\nif (flxdec)', 'MutateMethodInvocationExpression\nKeywords:\ngst_object_unref', 'InsertNullPointerChecker\nKeywords:\nif (flxdec != NULL)', 'InsertMethodInvocationExpression\nKeywords:\ngst_object_unref', 'RemoveBuggyStatement\nKeywords:\ngst_object_ref']
['InsertRangeChecker\nKeywords:\nPATH_MAX', 'InsertRangeChecker\nKeywords:\nreturn -EINVAL', 'InsertRangeChecker\nKeywords:\nsize', 'InsertRangeChecker\nKeywords:\nstrlcpy', 'InsertRangeChecker\nKeywords:\nnbytes', 'InsertRangeChecker\nKeywords:\nreturn -ENOMEM', 'InsertRangeChecker\nKeywords:\npath_length', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (!buf)', '']
['InsertConditionalExpression\nKeywords:\ncollectionFilter.isSharded()', 'InsertMethodInvocationExpression\nKeywords:\nCollectionShardingState::get', 'InsertMethodInvocationExpression\nKeywords:\ngetCollectionFilter', 'InsertVariable\nKeywords:\ncollectionFilter', 'InsertNullPointerChecker\nKeywords:\ncollectionFilter', 'InsertNullPointerChecker\nKeywords:\ncoll', 'InsertNullPointerChecker\nKeywords:\nif (coll)', 'InsertNullPointerChecker\nKeywords:\nif (!coll)', 'InsertConditionalExpression\nKeywords:\ncollectionFilter.isSharded', 'InsertNullPointerChecker\nKeywords:\nif (!collectionFilter)']
['InsertNullPointerChecker\nKeywords:\nif (!testingConnection)', 'InsertMethodInvocationExpression\nKeywords:\ncreateDummyConnection', 'MutateMethodInvocationExpression\nKeywords:\ncreateDummyConnection', 'InsertMethodInvocationExpression\nKeywords:\nUA_Connection_create', 'InsertMethodInvocationExpression\nKeywords:\nUA_Connection_new', 'MutateMethodInvocationExpression\nKeywords:\nUA_Connection_create', 'RemoveBuggyStatement\nKeywords:\ncreateDummyConnection', 'InsertNullPointerChecker\nKeywords:\ntestingConnection', 'MutateMethodInvocationExpression\nKeywords:\nUA_Connection_new', 'InsertNullPointerChecker\nKeywords:\ntestingConnection == NULL']
['InsertRangeChecker\nKeywords:\nif (buf->offset + aoffset > buf->maxlen)', 'MutateConditionalExpression\nKeywords:\nif (buf->offset + aoffset > buf->maxlen)', 'InsertRangeChecker\nKeywords:\nbuf->offset + aoffset > buf->maxlen', 'MutateConditionalExpression\nKeywords:\nbuf->offset + aoffset > buf->maxlen', 'InsertRangeChecker\nKeywords:\nif (buf->offset + len > buf->maxlen)', 'MutateConditionalExpression\nKeywords:\nbuf->offset < aoffset', 'MutateConditionalExpression\nKeywords:\nbuf->offset > aoffset', 'RemoveBuggyStatement\nKeywords:\nbuf->offset', 'MutateConditionalExpression\nKeywords:\n<= 0', '']
['MutateMethodInvocationExpression\nKeywords:\nqemu_receive_packet', 'InsertMethodInvocationExpression\nKeywords:\nqemu_receive_packet', 'MutateMethodInvocationExpression\nKeywords:\ngem_receive', 'MutateMethodInvocationExpression\nKeywords:\ngem_receive_packet', 'InsertMethodInvocationExpression\nKeywords:\ngem_receive_packet', 'RemoveBuggyStatement\nKeywords:\ngem_receive', 'InsertMethodInvocationExpression\nKeywords:\ngem_receive', 'InsertConditionalExpression\nKeywords:\ngem_receive_updatestats', 'InsertMethodInvocationExpression\nKeywords:\nqemu_send_packet', 'MutateMethodInvocationExpression\nKeywords:\ngem_receive_all']
['Input Too Long']
['InsertNullPointerChecker\nKeywords:\nold_rlim', 'InsertRangeChecker\nKeywords:\nreturn -EINVAL', 'InsertRangeChecker\nKeywords:\nrlim_cur', 'InsertRangeChecker\nKeywords:\ngoto out', 'InsertNullPointerChecker\nKeywords:\nreturn -EINVAL', 'InsertConditionalExpression\nKeywords:\nrlim_cur', 'InsertMissedStatement\nKeywords:\nrlim_cur', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertConditionalExpression\nKeywords:\nrlim_cur == 0', 'InsertConditionalExpression\nKeywords:\nrlim_cur > 0']
['MutateConditionalExpression\nKeywords:\nauthkey->sca_keylength > optlen', 'MutateConditionalExpression\nKeywords:\nauthkey->sca_keylength', 'InsertRangeChecker\nKeywords:\nauthkey->sca_keylength < optlen', 'InsertRangeChecker\nKeywords:\nauthkey->sca_keylength > optlen', 'MutateConditionalExpression\nKeywords:\nauthkey->sca_keylength < optlen', 'InsertRangeChecker\nKeywords:\nauthkey->sca_keylength', 'RemoveBuggyStatement\nKeywords:\nauthkey->sca_keylength', 'MutateConditionalExpression\nKeywords:\noptlen', 'InsertRangeChecker\nKeywords:\noptlen', '']
['MutateDataType\nKeywords:\nsize_t', 'MutateDataType\nKeywords:\nsizeof(err_str) - 1', 'MutateDataType\nKeywords:\nunsigned', 'MutateDataType\nKeywords:\nunsigned int', 'MutateDataType\nKeywords:\nuint32_t', 'MutateDataType\nKeywords:\nsizeof(err_str)', 'MutateMethodInvocationExpression\nKeywords:\nsizeof(err_str)', 'InsertMethodInvocationExpression\nKeywords:\nsctp_abort_violation', 'InsertNullPointerChecker\nKeywords:\nif (arg == NULL)', 'InsertNullPointerChecker\nKeywords:\nif (!arg)']
['InsertRangeChecker\nKeywords:\nreturn -EINVAL', 'InsertNullPointerChecker\nKeywords:\ntmp.thread.parentID', 'InsertNullPointerChecker\nKeywords:\nif (!tmp.thread.parentID)', 'InsertRangeChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nif (!tmp.thread.nodeName)', 'InsertMethodInvocationExpression\nKeywords:\nhfsplus_cat_build_key', 'InsertMemset\nKeywords:\nmemset', 'InsertRangeChecker\nKeywords:\ntmp.thread.parentID', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\ntmp.thread']
['Input Too Long']
['MutateLiteralExpression\nKeywords:\nposbits', 'MutateLiteralExpression\nKeywords:\ne', 'MutateLiteralExpression\nKeywords:\nposbits>>3', 'MutateVariable\nKeywords:\ne', 'MutateConditionalExpression\nKeywords:\nposbits', 'InsertRangeChecker\nKeywords:\nif (e > insize)', 'MutateDataType\nKeywords:\nint', 'MutateDataType\nKeywords:\nREG1', 'InsertRangeChecker\nKeywords:\nposbits', '']
['InsertRangeChecker\nKeywords:\nreturn -1', 'InsertRangeChecker\nKeywords:\ntp >= text + size', 'InsertRangeChecker\nKeywords:\nif (! tp)', 'InsertRangeChecker\nKeywords:\ntp > text + size', 'InsertMissedStatement\nKeywords:\ntp--', 'InsertRangeChecker\nKeywords:\ntp >= text', 'InsertRangeChecker\nKeywords:\nif (tp >= text)', 'InsertMissedStatement\nKeywords:\ntp = text + size', 'InsertRangeChecker\nKeywords:\nreturn', '']
['MutateMethodInvocationExpression\nKeywords:\ncnd_add_n', 'MutateMethodInvocationExpression\nKeywords:\ncnd_sub_n', 'MutateMethodInvocationExpression\nKeywords:\nmpn_submul_1', 'MutateMethodInvocationExpression\nKeywords:\nmpn_mulmul_1', 'MutateMethodInvocationExpression\nKeywords:\ncnd_mul_n', 'MutateMethodInvocationExpression\nKeywords:\nmpn_addmul_1', 'MutateMethodInvocationExpression\nKeywords:\ncnd_mod_n', 'InsertCastStatement\nKeywords:\n(mp_limb_t)', 'MutateMethodInvocationExpression\nKeywords:\nmpn_submul_2', 'InsertMethodInvocationExpression\nKeywords:\ncnd_add_n']
['InsertNullPointerChecker\nKeywords:\nreturn false', 'InsertNullPointerChecker\nKeywords:\nb == NULL', 'InsertNullPointerChecker\nKeywords:\nblk == NULL', 'InsertNullPointerChecker\nKeywords:\nendp == NULL', 'InsertNullPointerChecker\nKeywords:\nendp', 'InsertNullPointerChecker\nKeywords:\nsrc == endp', 'InsertNullPointerChecker\nKeywords:\nblk', 'InsertNullPointerChecker\nKeywords:\nb', 'InsertNullPointerChecker\nKeywords:\nif (!b)', 'InsertNullPointerChecker\nKeywords:\nsrc']
['InsertNullPointerChecker\nKeywords:\nprinc', 'InsertNullPointerChecker\nKeywords:\nkrb5rc', 'InsertNullPointerChecker\nKeywords:\nif (!krb5rc)', 'InsertNullPointerChecker\nKeywords:\nif (krb5rc)', 'InsertNullPointerChecker\nKeywords:\nif (!princ)', 'InsertReleaseResource\nKeywords:\nkrb5_kt_close', 'InsertNullPointerChecker\nKeywords:\nif ( krb5rc )', 'InsertNullPointerChecker\nKeywords:\nprinc == NULL', 'InsertNullPointerChecker\nKeywords:\nreturn', '']
['InsertReleaseResource\nKeywords:\nsftp_message_free', 'InsertReleaseResource\nKeywords:\nssh_string_free', 'InsertReleaseResource\nKeywords:\nsftp_set_error_oom', 'InsertNullPointerChecker\nKeywords:\nreturn -1', 'InsertReleaseResource\nKeywords:\nssh_buffer_free(buffer)', 'InsertNullPointerChecker\nKeywords:\npath', 'InsertNullPointerChecker\nKeywords:\nif (path == NULL)', 'InsertReleaseResource\nKeywords:\nsftp_packet_write', 'InsertNullPointerChecker\nKeywords:\nif (path != NULL)', 'InsertMissedStatement\nKeywords:\nssh_set_error_oom']
['InsertNullPointerChecker\nKeywords:\nif (!s->init_msg)', 'InsertNullPointerChecker\nKeywords:\nif (s->init_msg == NULL)', 'InsertNullPointerChecker\nKeywords:\ns->init_msg', 'InsertNullPointerChecker\nKeywords:\nif (!s->session)', 'InsertMissedStatement\nKeywords:\ns->session->tlsext_ticklen', 'InsertNullPointerChecker\nKeywords:\nif (s->init_msg)', 'InsertRangeChecker\nKeywords:\ns->session->tlsext_ticklen', 'InsertVariable\nKeywords:\ns->session->tlsext_ticklen', 'InsertNullPointerChecker\nKeywords:\ns->init_msg = NULL', 'InsertMemset\nKeywords:\nmemset']
['InsertMethodInvocationExpression\nKeywords:\numask', 'InsertVariable\nKeywords:\numask', 'MutateDataType\nKeywords:\nmode_t', 'InsertVariable\nKeywords:\nmask', 'InsertMissedStatement\nKeywords:\numask', 'InsertConditionalExpression\nKeywords:\numask', 'InsertVariable\nKeywords:\nc_path', 'MoveStatement\nKeywords:\numask', 'InsertVariable\nKeywords:\numask_t', 'InsertVariable\nKeywords:\nmode']
['Input Too Long']
['InsertReleaseResource\nKeywords:\n_TIFFfree', 'MutateMethodInvocationExpression\nKeywords:\nTIFFReadDirEntryData', 'InsertMethodInvocationExpression\nKeywords:\n_TIFFReadDirEntryData', 'MutateMethodInvocationExpression\nKeywords:\n_TIFFCheckSize', 'RemoveBuggyStatement\nKeywords:\n_TIFFfree', 'MutateMethodInvocationExpression\nKeywords:\n_TIFFmemcpy', 'InsertMethodInvocationExpression\nKeywords:\nTIFFReadDirEntryData', 'InsertReleaseResource\nKeywords:\n_TIFFfree(data)', 'InsertReleaseResource\nKeywords:\n_TIFFFree', 'MutateMethodInvocationExpression\nKeywords:\n_TIFFMemcpy']
['InsertRangeChecker\nKeywords:\narg > CHACHA_CTR_SIZE', 'MutateConditionalExpression\nKeywords:\narg > CHACHA_CTR_SIZE', 'InsertRangeChecker\nKeywords:\narg >= CHACHA_CTR_SIZE', 'InsertRangeChecker\nKeywords:\narg < 12', 'MutateConditionalExpression\nKeywords:\nCHACHA_CTR_SIZE', 'MutateConditionalExpression\nKeywords:\narg < 12', 'MutateConditionalExpression\nKeywords:\narg', 'MutateConditionalExpression\nKeywords:\nCHACHA_CTR_SIZE - 1', 'MutateConditionalExpression\nKeywords:\nif (arg < 12)', 'MutateConditionalExpression\nKeywords:\nCHACHA_CTR_SIZE - arg']
['InsertRangeChecker\nKeywords:\nif (p == parser->end)', 'InsertRangeChecker\nKeywords:\np >= parser->end', 'InsertRangeChecker\nKeywords:\np == parser->end', 'InsertRangeChecker\nKeywords:\nreturn -1', 'InsertRangeChecker\nKeywords:\np < parser->end', 'InsertConditionalExpression\nKeywords:\nif (p == parser->end)', 'InsertRangeChecker\nKeywords:\nparser->end < parser->cur', 'InsertRangeChecker\nKeywords:\nparser->end < p', 'InsertNullPointerChecker\nKeywords:\nparser->end', 'InsertRangeChecker\nKeywords:\nif (p == parser->cur)']
['MutateConditionalExpression\nKeywords:\nlen > end - p', 'InsertRangeChecker\nKeywords:\nlen > end - p', 'MutateConditionalExpression\nKeywords:\np + len > end', 'InsertRangeChecker\nKeywords:\nlen > end - *p', 'MutateConditionalExpression\nKeywords:\nend - p < len', 'MutateConditionalExpression\nKeywords:\nlen', 'InsertRangeChecker\nKeywords:\nlen < 1', 'InsertRangeChecker\nKeywords:\nlen >= end - *p', 'MutateConditionalExpression\nKeywords:\nlen < 1', 'InsertRangeChecker\nKeywords:\nlen']
['InsertNullPointerChecker\nKeywords:\nif (NULL == call_run_cert)', 'InsertNullPointerChecker\nKeywords:\nreturn 0', 'InsertNullPointerChecker\nKeywords:\nif (call_run_cert == NULL)', 'InsertNullPointerChecker\nKeywords:\nif (NULL != call_run_cert)', 'InsertNullPointerChecker\nKeywords:\nif (!cert)', 'InsertNullPointerChecker\nKeywords:\nif (!OSSL_CTX_is_available())', 'InsertNullPointerChecker\nKeywords:\nif (!OSSL_MODULE_exists("ssl"))', 'InsertNullPointerChecker\nKeywords:\nif (!OSSL_MODULE_exists("openssl"))', 'InsertNullPointerChecker\nKeywords:\nNULL', '']
['MutateConditionalExpression\nKeywords:\n!params->order->data || !params->base->data', 'InsertConditionalExpression\nKeywords:\n!params->order->length || !params->base->length', 'InsertConditionalExpression\nKeywords:\n!params->order->data || !params->base->data', 'InsertNullPointerChecker\nKeywords:\n!params->base || !params->base->length', 'MutateConditionalExpression\nKeywords:\n!params->order->length || !params->base->length', 'InsertNullPointerChecker\nKeywords:\nparams->order', 'InsertNullPointerChecker\nKeywords:\nparams->base', 'InsertNullPointerChecker\nKeywords:\nparams', 'InsertNullPointerChecker\nKeywords:\nparams == NULL', '']
['InsertNullPointerChecker\nKeywords:\nun', 'MutateConditionalExpression\nKeywords:\n!is_correlated_unit', 'MutateConditionalExpression\nKeywords:\nis_correlated_unit', 'InsertNullPointerChecker\nKeywords:\nis_correlated_unit', 'InsertConditionalExpression\nKeywords:\nis_correlated_unit', 'RemoveBuggyStatement\nKeywords:\nis_correlated_unit', 'InsertNullPointerChecker\nKeywords:\nif (un)', 'InsertNullPointerChecker\nKeywords:\nun->uncacheable', 'InsertNullPointerChecker\nKeywords:\nif (!un)', 'MutateConditionalExpression\nKeywords:\nun->uncacheable']
['RemoveBuggyStatement\nKeywords:\nDBUG_ASSERT', 'InsertConditionalExpression\nKeywords:\nDBUG_ASSERT', 'InsertMethodInvocationExpression\nKeywords:\nDBUG_ASSERT', 'InsertNullPointerChecker\nKeywords:\nDBUG_ASSERT', 'MutateConditionalExpression\nKeywords:\nDBUG_ASSERT', 'InsertNullPointerChecker\nKeywords:\nif (file)', 'InsertNullPointerChecker\nKeywords:\nif (!file)', 'InsertNullPointerChecker\nKeywords:\nfile', 'InsertVariable\nKeywords:\ntemporary', '']
['InsertReleaseResource\nKeywords:\nclosefrm(table)', 'InsertConditionalExpression\nKeywords:\ngoto err_lock', 'InsertReleaseResource\nKeywords:\nclosefrm', 'RemoveBuggyStatement\nKeywords:\ngoto err_lock', 'InsertConditionalExpression\nKeywords:\nerr_lock', 'InsertNullPointerChecker\nKeywords:\ntable_list->sequence', 'InsertNullPointerChecker\nKeywords:\ntable_list->table= NULL', 'InsertMethodInvocationExpression\nKeywords:\ntable->file->print_error', 'InsertNullPointerChecker\nKeywords:\ntable->file == NULL', 'InsertNullPointerChecker\nKeywords:\ntable_list->table = NULL']
['InsertMethodInvocationExpression\nKeywords:\nset_extraction_flag', 'MutateMethodInvocationExpression\nKeywords:\nset_extraction_flag', 'InsertNullPointerChecker\nKeywords:\nright_item', 'MutateVariable\nKeywords:\nIMMUTABLE_FL', 'InsertVariable\nKeywords:\nIMMUTABLE_FL', 'InsertConditionalExpression\nKeywords:\nright_item->extraction_flag', 'InsertConditionalExpression\nKeywords:\nright_item->extraction_flag()', 'InsertMethodInvocationExpression\nKeywords:\nset_extraction_flags', 'MutateMethodInvocationExpression\nKeywords:\nset_extraction_flags', '']
['MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'InsertNullPointerChecker\nKeywords:\ndl->str', 'MutateMethodInvocationExpression\nKeywords:\nmy_strlcpy', 'InsertNullPointerChecker\nKeywords:\ndl->length', 'InsertNullPointerChecker\nKeywords:\nif (dl->length)', 'InsertNullPointerChecker\nKeywords:\ndl->length == 0', 'MutateMethodInvocationExpression\nKeywords:\nmy_strcasecmp', 'MutateMethodInvocationExpression\nKeywords:\nmemcmp', 'RemoveBuggyStatement\nKeywords:\ndl->length', 'InsertNullPointerChecker\nKeywords:\nif (dl->str)']
['InsertConditionalExpression\nKeywords:\nunlikely', 'InsertNullPointerChecker\nKeywords:\nfields->empty()', 'InsertNullPointerChecker\nKeywords:\nfields->empty', 'InsertNullPointerChecker\nKeywords:\nfields', 'InsertNullPointerChecker\nKeywords:\nreturn', 'InsertNullPointerChecker\nKeywords:\nunlikely', 'InsertNullPointerChecker\nKeywords:\nfields->head()', 'InsertNullPointerChecker\nKeywords:\nfields->elements', 'InsertNullPointerChecker\nKeywords:\nreturn 1', 'InsertVariable\nKeywords:\nignore']
['MutateMethodInvocationExpression\nKeywords:\nsnprintf', 'InsertMethodInvocationExpression\nKeywords:\nsprintf', 'MutateMethodInvocationExpression\nKeywords:\nsprintf', 'MutateLiteralExpression\nKeywords:\n%.*s', 'MutateMethodInvocationExpression\nKeywords:\nstrdup', 'InsertMethodInvocationExpression\nKeywords:\nsnprintf', 'InsertMethodInvocationExpression\nKeywords:\nstrdup', 'MutateMethodInvocationExpression\nKeywords:\nstrprintf', 'MutateMethodInvocationExpression\nKeywords:\nstrftime', 'MutateMethodInvocationExpression\nKeywords:\nstrcat']
['InsertConditionalExpression\nKeywords:\nreturn Result::fail', 'InsertConditionalExpression\nKeywords:\nshouldOverwriteFiles', 'InsertNullPointerChecker\nKeywords:\nreturn Result::fail', 'InsertConditionalExpression\nKeywords:\nif (shouldOverwriteFiles)', 'InsertConditionalExpression\nKeywords:\ntargetDirectory.isDirectory()', 'InsertConditionalExpression\nKeywords:\ntargetDirectory.exists()', 'InsertMethodInvocationExpression\nKeywords:\ncreateDirectory', 'InsertConditionalExpression\nKeywords:\nreturn', 'InsertVariable\nKeywords:\nshouldOverwriteFiles', 'InsertConditionalExpression\nKeywords:\nif (! targetFile.exists())']
['MutateMethodInvocationExpression\nKeywords:\nfscanf', 'InsertConditionalExpression\nKeywords:\nstrcmp', 'MutateMethodInvocationExpression\nKeywords:\nstrncpy', 'MutateMethodInvocationExpression\nKeywords:\nfprintf', 'MutateMethodInvocationExpression\nKeywords:\nsprintf', 'MutateMethodInvocationExpression\nKeywords:\nstrlcpy', 'InsertRangeChecker\nKeywords:\nstrncmp', 'InsertRangeChecker\nKeywords:\nstrcmp', 'MutateMethodInvocationExpression\nKeywords:\nsscanf', 'MutateMethodInvocationExpression\nKeywords:\nstrlen']
['Input Too Long']
